{"title":"Thymeleaf","uid":"6f6443e7d108482a5cb5a126a4a24a84","slug":"31-Thymeleaf","date":"2021-09-13T15:08:32.000Z","updated":"2021-09-15T10:26:12.095Z","comments":true,"path":"api/articles/31-Thymeleaf.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","content":"<h3 id=\"1-创建模板文件\"><a href=\"#1-创建模板文件\" class=\"headerlink\" title=\"1. 创建模板文件\"></a>1. 创建模板文件</h3><p>创建一个 HTML 模板文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!DOCTYPE HTML&gt;\n&lt;html xmlns:th&#x3D;&quot;http:&#x2F;&#x2F;www.thymeleaf.org&quot;&gt;\n&lt;head&gt;\n    &lt;title&gt;Index Page&lt;&#x2F;title&gt;\n    &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot; &#x2F;&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;p th:text&#x3D;&quot;$&#123;message&#125;&quot;&gt;Welcome to BeiJing!&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>通过<code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code>引入 Thymeleaf 命名空间。<code>th:text</code>用于处理<code>p</code>标签体的文本内容。该模板文件直接在任何浏览器中正确显示，浏览器会自动忽略它们不能理解的属性<code>th:text</code>。但这不是一个真正有效的 HTML5 文档，因为 HTML5 规范是不允许使用<code>th:*</code>这些非标准属性的。我们可以切换到 Thymeleaf 的<code>data-th-*</code>语法，以此来替换<code>th:*</code>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!DOCTYPE HTML&gt;\n&lt;html xmlns:th&#x3D;&quot;http:&#x2F;&#x2F;www.thymeleaf.org&quot;&gt;\n&lt;head&gt;\n    &lt;title&gt;Index Page&lt;&#x2F;title&gt;\n    &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot; &#x2F;&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;p data-th-text&#x3D;&quot;$&#123;message&#125;&quot;&gt;Welcome to BeiJing!&lt;&#x2F;p&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>HTML5 规范是允许<code>data-*</code>这样自定义的属性的。<code>th:*</code>和<code>data-th-*</code>这两个符号是完全等效且可以互换的。但为了简单直观和代码的紧凑性，本文采用<code>th:*</code>的表示形式。</p>\n<h3 id=\"2-标准表达式语法\"><a href=\"#2-标准表达式语法\" class=\"headerlink\" title=\"2. 标准表达式语法\"></a>2. 标准表达式语法</h3><p>Thymeleaf 提供了非常丰富的标准表达式语法，总共有 8 大类：</p>\n<ul>\n<li>简单表达式</li>\n<li>字面值</li>\n<li>文本操作</li>\n<li>算术运算</li>\n<li>布尔运算</li>\n<li>比较和相等</li>\n<li>条件运算</li>\n<li>无操作符</li>\n</ul>\n<h4 id=\"2-1-简单表达式\"><a href=\"#2-1-简单表达式\" class=\"headerlink\" title=\"2.1 简单表达式\"></a>2.1 简单表达式</h4><table>\n<thead>\n<tr>\n<th align=\"center\">语法</th>\n<th align=\"center\">名称</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">${…}</td>\n<td align=\"center\">Variable Expressions</td>\n<td align=\"center\">变量表达式</td>\n<td align=\"center\">取出上下文变量的值</td>\n</tr>\n<tr>\n<td align=\"center\">*{…}</td>\n<td align=\"center\">Selection Variable Expressions</td>\n<td align=\"center\">选择变量表达式</td>\n<td align=\"center\">取出选择的对象的属性值</td>\n</tr>\n<tr>\n<td align=\"center\">#{…}</td>\n<td align=\"center\">Message Expressions</td>\n<td align=\"center\">消息表达式</td>\n<td align=\"center\">使文字消息国际化，I18N</td>\n</tr>\n<tr>\n<td align=\"center\">@{…}</td>\n<td align=\"center\">Link URL Expressions</td>\n<td align=\"center\">链接表达式</td>\n<td align=\"center\">用于表示各种超链接地址</td>\n</tr>\n<tr>\n<td align=\"center\">~{…}</td>\n<td align=\"center\">Fragment Expressions</td>\n<td align=\"center\">片段表达式</td>\n<td align=\"center\">引用一段公共的代码片段</td>\n</tr>\n</tbody></table>\n<h5 id=\"2-1-1-…\"><a href=\"#2-1-1-…\" class=\"headerlink\" title=\"2.1.1 ${…}\"></a>2.1.1 ${…}</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">@GetMapping(&quot;&#x2F;standard-expression-syntax&#x2F;variables&quot;)\npublic String variables(ModelMap model, HttpSession session) &#123;\n    model.put(&quot;now&quot;, new Date());\n    model.put(&quot;message&quot;, &quot;Welcome to BeiJing!&quot;);\n    session.setAttribute(&quot;user&quot;, new User(&quot;fanlychie&quot;, &quot;男&quot;, 24));\n    ... ...\n&#125;</code></pre>\n\n<p>通过变量表达式<code>$&#123;&#125;</code>取出上下文环境中的<code>message</code>变量：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;message&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>它相当于：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ctx.getVariable(&quot;message&quot;);</code></pre>\n\n<h5 id=\"2-1-2-…\"><a href=\"#2-1-2-…\" class=\"headerlink\" title=\"2.1.2  *{…}\"></a>2.1.2  *{…}</h5><p>变量表达式<code>$&#123;&#125;</code>是面向整个上下文的，而选择变量表达式<code>*&#123;&#125;</code>的上下文是父标签（<code>th:object</code>）所选择的对象：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:object&#x3D;&quot;$&#123;session.user&#125;&quot;&gt;\n    &lt;p th:text&#x3D;&quot;*&#123;name&#125;&quot;&gt;&lt;&#x2F;p&gt;\n    &lt;p th:text&#x3D;&quot;*&#123;sex&#125;&quot;&gt;&lt;&#x2F;p&gt;\n    &lt;p th:text&#x3D;&quot;*&#123;age&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<p>它相当于：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div&gt;\n    &lt;p th:text&#x3D;&quot;$&#123;session.user.name&#125;&quot;&gt;&lt;&#x2F;p&gt;\n    &lt;p th:text&#x3D;&quot;$&#123;session.user.sex&#125;&quot;&gt;&lt;&#x2F;p&gt;\n    &lt;p th:text&#x3D;&quot;$&#123;session.user.age&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<p>如果对象没有被选择，那么，<code>*&#123;&#125;</code>和<code>$&#123;&#125;</code>表达式所达到的效果是完全相同的：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;*&#123;session.user.name&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;session.user.name&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-1-3-…\"><a href=\"#2-1-3-…\" class=\"headerlink\" title=\"2.1.3 #{…}\"></a>2.1.3 #{…}</h5><p>消息表达式可用于国际化文字信息。首先我们来了解一下 i18n 资源文件的命名规则：</p>\n<ul>\n<li>basename.properties</li>\n<li>basename_language.properties</li>\n<li>basename_language_country.properties</li>\n</ul>\n<p><code>basename</code>是自定义的资源文件名称，<code>language</code>和<code>country</code>必须是 Java 支持的语言和国家。<code>basename.properties</code>是缺省加载的资源文件，当客户端根据本地语言查找不到相关的资源文件时，则使用该配置文件。</p>\n<p>创建文件<code>src/main/resources/messages.properties</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">welcome.message &#x3D; 北京欢迎你！</code></pre>\n\n<p>创建文件<code>src/main/resources/messages_en_US.properties</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">welcome.message &#x3D; Welcome to BeiJing!</code></pre>\n\n<p>在 IntelliJ IDEA 编辑视图：</p>\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/i18n-messages.png\" alt=\"img\"></p>\n<p><code>messages</code>是 Spring Boot 加载资源文件默认采用的名称（<code>basename</code>），如果你所使用的资源文件名称不是以<code>messages</code>命名或所使用的资源文件不是在<code>src/main/resources</code>根目录，你可以通过<code>spring.messages.basename</code>属性来做具体的配置。如，资源文件<code>messages.properties</code>和<code>messages_en_US.properties</code>假设它们所在的目录位置是<code>src/main/resources/i18n</code>。</p>\n<p>application.properties 配置示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">spring.messages.basename:i18n&#x2F;messages</code></pre>\n\n<p>application.yml 配置示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">spring\n  messages\n    basename: i18n&#x2F;messages</code></pre>\n\n<p>静态文本消息示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 北京欢迎你！ --&gt;\n&lt;p th:text&#x3D;&quot;#&#123;welcom.message&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>消息表达式<code>#&#123;&#125;</code>是不允许直接处理非静态的文本消息的，但是你可以在资源文件中通过使用占位符<code>&#123;&#125;</code>来处理非静态的文本消息：</p>\n<p>messages.properties 配置示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">welcome.user.message &#x3D; &#123;0&#125;, 北京欢迎你！</code></pre>\n\n<p>messages_en_US.properties 配置示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">welcome.user.message &#x3D; &#123;0&#125;, Welcome to BeiJing!</code></pre>\n\n<p>非静态文本消息，以参数的形式传递变量的值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- fanlychie, 北京欢迎你！ --&gt;\n&lt;p th:text&#x3D;&quot;#&#123;welcome.user.message($&#123;session.user.name&#125;)&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-1-4-…\"><a href=\"#2-1-4-…\" class=\"headerlink\" title=\"2.1.4 @{…}\"></a>2.1.4 @{…}</h5><p>链接表达式<code>@&#123;&#125;</code>是专门用来处理 URL 链接地址的。</p>\n<p>绝对地址示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- https:&#x2F;&#x2F;fanlychie.github.io --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;https:&#x2F;&#x2F;fanlychie.github.io&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>页面相对地址示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- commons&#x2F;base.html --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;commons&#x2F;base.html&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>上下文相对地址（相对于当前的服务）示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &#x2F;css&#x2F;mian.css --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;&#x2F;css&#x2F;mian.css&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>服务器相对地址（相对于部署在同一个服务器中的不同服务）示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &#x2F;image&#x2F;upload --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;~&#x2F;image&#x2F;upload&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>参数使用示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &#x2F;css&#x2F;mian.css?v&#x3D;1.0 --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;&#x2F;css&#x2F;mian.css(v&#x3D;1.0)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#x2F;user&#x2F;order?username&#x3D;fanlychie --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;&#x2F;user&#x2F;order(username&#x3D;$&#123;session.user.name&#125;)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#x2F;user&#x2F;order?username&#x3D;fanlychie&amp;status&#x3D;PAIED --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;&#x2F;user&#x2F;order(username&#x3D;$&#123;session.user.name&#125;,status&#x3D;&#39;PAIED&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#x2F;user&#x2F;fanlychie&#x2F;info --&gt;\n&lt;p th:text&#x3D;&quot;@&#123;&#x2F;user&#x2F;&#123;username&#125;&#x2F;info(username&#x3D;$&#123;session.user.name&#125;)&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-1-5-…\"><a href=\"#2-1-5-…\" class=\"headerlink\" title=\"2.1.5 ~{…}\"></a>2.1.5 ~{…}</h5><p>片段表达式<code>~&#123;&#125;</code>可以用来引用一段公共的 HTML 代码片段。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">语法</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">~{templatename}</td>\n<td align=\"center\">引用整个模板文件的代码片段</td>\n</tr>\n<tr>\n<td align=\"center\">~{templatename :: selector}</td>\n<td align=\"center\">selector 可以是 th:fragment 指定的名称或其他选择器。 如类选择器、ID选择器等</td>\n</tr>\n<tr>\n<td align=\"center\">~{::selector}</td>\n<td align=\"center\">相当于 ~{this :: selector}，表示引用当前模板定义的代码片段</td>\n</tr>\n</tbody></table>\n<p>在 Thymeleaf 模板文件中，你可以使用<code>th:fragment</code>属性来定义一段公共的代码片段，然后你可以通过使用<code>th:insert</code>、<code>th:replace</code>、<code>th:include</code>（Thymeleaf 3.0 开始不再推荐使用，本文也将不再介绍它）属性来将这些公共的代码片段引入到模板文件中来。</p>\n<p>src/main/resources/templates/base.html，通过<code>th:fragment</code>属性定义一段公共的代码片段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div id&#x3D;&quot;footer&quot; th:fragment&#x3D;&quot;footerFragment&quot;&gt;&amp;copy; 2017 fanlychie&lt;&#x2F;div&gt;</code></pre>\n\n<p>src/main/resources/templates/index.html，通过<code>th:insert</code>属性引用一段公共的代码片段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:insert&#x3D;&quot;~&#123;base :: footerFragment&#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>其中，<code>~&#123;&#125;</code>是可选的，我们可以去掉这层的包裹：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:insert&#x3D;&quot;base :: footerFragment&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>若 index.html 与 base.html 不在同级目录，如 templates/commons/base.html：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:insert&#x3D;&quot;~&#123;commons&#x2F;base :: footerFragment&#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>使用<code>th:fragment</code>属性定义代码片段时，你还可以声明一组参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:fragment&#x3D;&quot;crumbs(parent, child)&quot;&gt;\n    &lt;i th:text&#x3D;&quot;$&#123;parent&#125;&quot;&gt;&lt;&#x2F;i&gt; &lt;i th:text&#x3D;&quot;$&#123;child&#125;&quot;&gt;&lt;&#x2F;i&gt;\n&lt;&#x2F;div&gt;\n    \n&lt;!--\n&lt;i&gt;用户中心&lt;&#x2F;i&gt;\n&lt;i&gt;我的订单&lt;&#x2F;i&gt;\n--&gt;\n&lt;div th:insert&#x3D;&quot;::crumbs(&#39;用户中心&#39;, &#39;我的订单&#39;)&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>此外，我们还可以通过类选择器、ID选择器等来引用公共的代码片段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:insert&#x3D;&quot;~&#123;base :: #footer&#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>除了<code>th:insert</code>属性<code>th:replace</code>也可以用来引用公共的代码片段。不同的是，<code>th:insert</code>是直接将代码片段插入到标签体内，而<code>th:replace</code>则是用代码片段直接替换标签体内容。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--\n&lt;div&gt;\n    &lt;div id&#x3D;&quot;footer&quot;&gt;© 2017 fanlychie&lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;\n--&gt;\n&lt;div th:insert&#x3D;&quot;~&#123;base :: footerFragment&#125;&quot;&gt;&lt;&#x2F;div&gt;\n    \n&lt;!--\n&lt;div id&#x3D;&quot;footer&quot;&gt;© 2017 fanlychie&lt;&#x2F;div&gt;\n--&gt;\n&lt;div th:replace&#x3D;&quot;~&#123;base :: footerFragment&#125;&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<h5 id=\"2-1-6-内置对象\"><a href=\"#2-1-6-内置对象\" class=\"headerlink\" title=\"2.1.6 内置对象\"></a>2.1.6 内置对象</h5><table>\n<thead>\n<tr>\n<th align=\"center\">对象</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/context/IContext.java\">#ctx</a></td>\n<td align=\"center\">上下文对象</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/context/IContext.java\">#vars</a></td>\n<td align=\"center\">同 #ctx，表示上下文变量</td>\n</tr>\n<tr>\n<td align=\"center\">#locale</td>\n<td align=\"center\">上下文本地化（特定的地理区域）变量，可参考 java.util.Locale</td>\n</tr>\n<tr>\n<td align=\"center\">#request</td>\n<td align=\"center\">HttpServletRequest 对象，可参考 javax.servlet.http.HttpServletRequest</td>\n</tr>\n<tr>\n<td align=\"center\">#response</td>\n<td align=\"center\">HttpServletResponse 对象，可参考 javax.servlet.http.HttpServletResponse</td>\n</tr>\n<tr>\n<td align=\"center\">#session</td>\n<td align=\"center\">HttpSession 对象，可参考 javax.servlet.http.HttpSession</td>\n</tr>\n<tr>\n<td align=\"center\">#servletContext</td>\n<td align=\"center\">ServletContext 对象，可参考 javax.servlet.ServletContext</td>\n</tr>\n</tbody></table>\n<p><code>#ctx</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- zh_CN --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#ctx.getLocale()&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#ctx.getVariable(&#39;message&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- true --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#ctx.containsVariable(&#39;message&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>#vars</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- zh_CN --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#vars.getLocale()&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#vars.getVariable(&#39;message&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- true --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#vars.containsVariable(&#39;message&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>#locale</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- zh_CN --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- CN --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale.country&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 中国 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale.displayCountry&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- zh --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale.language&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 中文 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale.displayLanguage&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 中文 (中国) --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#locale.displayName&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>#request</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- HTTP&#x2F;1.1 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.protocol&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- http --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.scheme&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- localhost --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.serverName&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 8080 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.serverPort&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- GET --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.method&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#x2F;standard-expression-syntax&#x2F;variables --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.requestURI&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- http:&#x2F;&#x2F;localhost:8080&#x2F;standard-expression-syntax&#x2F;variables --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.requestURL&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#x2F;standard-expression-syntax&#x2F;variables --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.servletPath&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- java.util.Collections$3@203646fe --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.parameterNames&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#123;q&#x3D;[Ljava.lang.String;@3308c69f&#125; --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.parameterMap&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- q&#x3D;expression --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#request.queryString&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>注意，请求地址的 URL 参数直接通过<code>#request.x</code>是取不出来的，需要使用<code>param.x</code>语法来取出。如，URL：<code>/standard-expression-syntax/variables?q=expression</code>，取出 q 参数的正确姿势：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;param.q&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>#response</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 200 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#response.status&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 8192 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#response.bufferSize&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- UTF-8 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#response.characterEncoding&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- text&#x2F;html;charset&#x3D;UTF-8 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#response.contentType&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>#session</code>示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 2BCB2A0EACFF2D9D249D9799431B5127 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#session.id&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 1499786693244 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#session.lastAccessedTime&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- fanlychie --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#session.getAttribute(&#39;user&#39;).name&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>注意，放到会话里面的对象直接通过<code>#session.x</code>是取不出来的，需要使用<code>session.x</code>语法来取出。如，取出会话里面的 user 对象的正确姿势：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;session.user.name&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-1-7-工具类\"><a href=\"#2-1-7-工具类\" class=\"headerlink\" title=\"2.1.7 工具类\"></a>2.1.7 工具类</h5><table>\n<thead>\n<tr>\n<th align=\"center\">对象</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Messages.java\">#messages</a></td>\n<td align=\"center\">消息工具类，与 ＃{…} 作用相同</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Uris.java\">#uris</a></td>\n<td align=\"center\">地址相关的工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Conversions.java\">#conversions</a></td>\n<td align=\"center\">对象转换工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Dates.java\">#dates</a></td>\n<td align=\"center\">日期时间工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Calendars.java\">#calendars</a></td>\n<td align=\"center\">日历工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Numbers.java\">#numbers</a></td>\n<td align=\"center\">数字工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Strings.java\">#strings</a></td>\n<td align=\"center\">字符串工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Objects.java\">#objects</a></td>\n<td align=\"center\">对象工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Bools.java\">#bools</a></td>\n<td align=\"center\">布尔工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Arrays.java\">#arrays</a></td>\n<td align=\"center\">数组工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Lists.java\">#lists</a></td>\n<td align=\"center\">List 工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Sets.java\">#sets</a></td>\n<td align=\"center\">Set 工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Maps.java\">#maps</a></td>\n<td align=\"center\">Map 工具类</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>#aggregates</strong></td>\n<td align=\"center\">在数组或集合上创建聚合的实用方法</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- false --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#strings.isEmpty(message)&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2017-07-12 00:37:25 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;#dates.format(now, &#39;yyyy-MM-dd HH:mm:ss&#39;)&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;*\n * Compute sum. Returns null if array or collection is empty\n *&#x2F;\n$&#123;#aggregates.sum(array)&#125;\n$&#123;#aggregates.sum(collection)&#125;\n\n&#x2F;*\n * Compute average. Returns null if array or collection is empty\n *&#x2F;\n$&#123;#aggregates.avg(array)&#125;\n$&#123;#aggregates.avg(collection)&#125;\n\n[[$&#123;#aggregates.sum(session.cart.cartItemMap.&#123;price * buyCount&#125;)&#125;]]</code></pre>\n\n<h5 id=\"2-1-8-内置方法\"><a href=\"#2-1-8-内置方法\" class=\"headerlink\" title=\"2.1.8 内置方法\"></a>2.1.8 内置方法</h5><ul>\n<li>strings：字符串格式化方法，常用的Java方法它都有。比如：equals，equalsIgnoreCase，length，trim，toUpperCase，toLowerCase，indexOf，substring，replace，startsWith，endsWith，contains，containsIgnoreCase等</li>\n<li>numbers：数值格式化方法，常用的方法有：formatDecimal等</li>\n<li>bools：布尔方法，常用的方法有：isTrue，isFalse等</li>\n<li>arrays：数组方法，常用的方法有：toArray，length，isEmpty，contains，containsAll等</li>\n<li>lists，sets：集合方法，常用的方法有：toList，size，isEmpty，contains，containsAll，sort等</li>\n<li>maps：对象方法，常用的方法有：size，isEmpty，containsKey，containsValue等</li>\n<li>dates：日期方法，常用的方法有：format，year，month，hour，createNow等</li>\n<li>aggregates:    在数组或集合上创建聚合的实用方法，sum，avg（就这俩）</li>\n</ul>\n<h4 id=\"2-2-字面值\"><a href=\"#2-2-字面值\" class=\"headerlink\" title=\"2.2 字面值\"></a>2.2 字面值</h4><p>所谓字面值，首先它不是一个变量，它是一个具体的确切的值，通常这些值是比较简单的，例如：<code>18</code>、<code>&#39;welcome&#39;</code>等，它们没有名称，以至于我们只能用值来称呼它们，因此我们称其为字面值。</p>\n<h5 id=\"2-2-1-文字字面值\"><a href=\"#2-2-1-文字字面值\" class=\"headerlink\" title=\"2.2.1 文字字面值\"></a>2.2.1 文字字面值</h5><p>文字字面值是用单引号引起来的任何字符内容，如果字符内容里面含有单引号，则需要进行转义：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;&#39;Welcome to BeiJing!&#39;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- &#39;Welcome to BeiJing!&#39; --&gt;\n&lt;p th:text&#x3D;&quot;&#39;\\&#39;Welcome to BeiJing!\\&#39;&#39;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-2-2-数字字面值\"><a href=\"#2-2-2-数字字面值\" class=\"headerlink\" title=\"2.2.2 数字字面值\"></a>2.2.2 数字字面值</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 2017 --&gt;\n&lt;p th:text&#x3D;&quot;2017&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2018 --&gt;\n&lt;p th:text&#x3D;&quot;2017 + 1&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-2-3-布尔字面值\"><a href=\"#2-2-3-布尔字面值\" class=\"headerlink\" title=\"2.2.3 布尔字面值\"></a>2.2.3 布尔字面值</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- false --&gt;\n&lt;p th:text&#x3D;&quot;1 &gt; 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 否 --&gt;\n&lt;p th:text&#x3D;&quot;1 &gt; 2 ? &#39;是&#39; : &#39;否&#39;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-2-4-空字面值\"><a href=\"#2-2-4-空字面值\" class=\"headerlink\" title=\"2.2.4 空字面值\"></a>2.2.4 空字面值</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- false --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user &#x3D;&#x3D; null&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-2-5-字面令牌\"><a href=\"#2-2-5-字面令牌\" class=\"headerlink\" title=\"2.2.5 字面令牌\"></a>2.2.5 字面令牌</h5><p>字面令牌（Literal Tokens）的内容只能含有（不能含有空格、特殊符号等）：</p>\n<ul>\n<li>大写或小写的字母、中文等不含空格和特殊符号的文本</li>\n<li>0 到 9 的数字</li>\n<li>中括号</li>\n<li>下划线</li>\n<li>连字符（-）</li>\n<li>点符号（.）</li>\n</ul>\n<p>实际上，数字、布尔和空字面值都是字面令牌的特殊情况。字面令牌能够用来对标准表达式语法进行简化，我们可以将包裹它的内容的单引号去掉：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;Welcome to BeiJing!&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>它等效于：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;&#39;Welcome to BeiJing!&#39;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-3-文本操作\"><a href=\"#2-3-文本操作\" class=\"headerlink\" title=\"2.3 文本操作\"></a>2.3 文本操作</h4><p>我们可以对文本内容进行两种常用的操作，它们分别为字符串连接和字符串替换。</p>\n<h5 id=\"2-3-1-字符串连接\"><a href=\"#2-3-1-字符串连接\" class=\"headerlink\" title=\"2.3.1 字符串连接\"></a>2.3.1 字符串连接</h5><p>不管是字面值还是表达式的结果，我们都可以使用<code>+</code>符号将它们连接起来：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;&#39;Welcome to &#39; + $&#123;location&#125; + &#39;!&#39;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"2-3-2-字面值替换\"><a href=\"#2-3-2-字面值替换\" class=\"headerlink\" title=\"2.3.2 字面值替换\"></a>2.3.2 字面值替换</h5><p>符号<code>||</code>可以用来将字面值和表达式包裹起来，这样就能方便的替换变量的值，而不需要使用<code>+</code>连接符：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Welcome to BeiJing! --&gt;\n&lt;p th:text&#x3D;&quot;|Welcome to $&#123;location&#125;!|&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-4-算术运算\"><a href=\"#2-4-算术运算\" class=\"headerlink\" title=\"2.4 算术运算\"></a>2.4 算术运算</h4><p>支持<code>+</code>（加）、<code>-</code>（减）、<code>*</code>（乘）、<code>/</code>（除）、<code>%</code>（模）运算：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 6 --&gt;\n&lt;p th:text&#x3D;&quot;4 + 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2 --&gt;\n&lt;p th:text&#x3D;&quot;4 - 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 8 --&gt;\n&lt;p th:text&#x3D;&quot;4 * 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2 --&gt;\n&lt;p th:text&#x3D;&quot;4 &#x2F; 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 0 --&gt;\n&lt;p th:text&#x3D;&quot;4 % 2&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;pagination.page + 1&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- 2 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;pagination.page&#125; + 1&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-5-布尔运算\"><a href=\"#2-5-布尔运算\" class=\"headerlink\" title=\"2.5 布尔运算\"></a>2.5 布尔运算</h4><p>支持<code>and</code>（且）、<code>or</code>（或）、<code>!</code>（非）、<code>not</code>（非）运算：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;user.online and user.vip&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.online or user.vip&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;!user.online&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;not user.online&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-6-比较和相等\"><a href=\"#2-6-比较和相等\" class=\"headerlink\" title=\"2.6 比较和相等\"></a>2.6 比较和相等</h4><p>支持<code>&lt;</code>（<code>lt</code>）、<code>&gt;</code>（<code>gt</code>）、<code>&lt;=</code>（<code>le</code>）、<code>&gt;=</code>（<code>ge</code>）、<code>==</code>（<code>eq</code>）、<code>！=</code>（<code>ne</code>）：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;user.age &lt; 60&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.age &lt;&#x3D; 60&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.age &gt; 18&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.age &gt;&#x3D; 18&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.age &#x3D;&#x3D; 18&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.age !&#x3D; 18&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-7-条件运算\"><a href=\"#2-7-条件运算\" class=\"headerlink\" title=\"2.7 条件运算\"></a>2.7 条件运算</h4><p>三元运算符：<code>(if) ? (then) : (else)</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;user.online ? &#39;在线&#39; : &#39;离线&#39;&#125;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.online ? (user.vip ? &#39;VIP用户在线&#39; : &#39;普通用户在线&#39;) : &#39;离线&#39;&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>二元运算符：<code>(value) ?: (defaultValue)</code>。</p>\n<p>其中，<code>value</code>非空（null）即真，条件为真时输出<code>value</code>，否则输出<code>defaultValue</code>。假设<code>token = null</code>，<code>user.email = fanlychie@gmail.com</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 你还没有登录，请先登录 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;token&#125; ?: &#39;你还没有登录，请先登录&#39;&quot;&gt;&lt;&#x2F;p&gt;\n&lt;!-- fanlychie@gmail.com --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;user.email&#125; ?: &#39;你还没有绑定邮箱&#39;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"2-8-无操作符\"><a href=\"#2-8-无操作符\" class=\"headerlink\" title=\"2.8 无操作符\"></a>2.8 无操作符</h4><p>当模板运行在服务器端时，Thymeleaf 会解析<code>th:*</code>属性的具体值替换标签体的内容。无操作符（<code>_</code>）则允许你使用原型标签体的内容作为默认值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 你还没有登录，请先登录 --&gt;\n&lt;p th:text&#x3D;&quot;$&#123;token&#125; ?: _&quot;&gt;你还没有登录，请先登录&lt;&#x2F;p&gt;</code></pre>\n\n<h3 id=\"3-使用文本\"><a href=\"#3-使用文本\" class=\"headerlink\" title=\"3. 使用文本\"></a>3. 使用文本</h3><p>首先介绍两个最基础的<code>th:*</code>属<code>th:text</code>和<code>th:utext</code>，它们都是用于处理文本消息内容。</p>\n<h4 id=\"3-1-th-text\"><a href=\"#3-1-th-text\" class=\"headerlink\" title=\"3.1 th:text\"></a>3.1 th:text</h4><p>在标签体中展示表达式评估结果的文本内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;message&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p>使用外部化的文本内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;message&#125;&quot;&gt;Welcome to BeiJing!&lt;&#x2F;p&gt;</code></pre>\n\n<p>当它作为静态文件直接运行时，浏览器会自动忽略它不能识别的<code>th:text</code>属性，而显示<code>&lt;p&gt;</code>标签体的文本内容<code>Welcome to BeiJing!</code></p>\n<p>当它作为模板文件运行在服务器端时，<code>th:text</code>属性的具体值将会替换<code>&lt;p&gt;</code>标签体的文本内容。</p>\n<h4 id=\"3-2-th-utext\"><a href=\"#3-2-th-utext\" class=\"headerlink\" title=\"3.2 th:utext\"></a>3.2 th:utext</h4><p>属性<code>th:utext</code>与<code>th:text</code>的区别在于：</p>\n<ul>\n<li><code>th:text</code>默认会对含有 HTML 标签的内容进行字符转义；</li>\n<li><code>th:utext</code>（Unescaped Text）则不会对含有 HTML 标签的内容进行字符转义；</li>\n</ul>\n<p>假设：<code>message = &quot;&lt;b&gt;Welcome to BeiJing!&lt;/b&gt;&quot;</code>。</p>\n<p>使用<code>th:text</code>属性：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:text&#x3D;&quot;$&#123;message&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>th:text</code>效果：<b>Welcome to BeiJing!</b></p>\n<p>使用<code>th:utext</code>属性：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:utext&#x3D;&quot;$&#123;message&#125;&quot;&gt;&lt;&#x2F;p&gt;</code></pre>\n\n<p><code>th:utext</code>效果：<strong>Welcome to BeiJing!</strong></p>\n<h3 id=\"4-设置属性值\"><a href=\"#4-设置属性值\" class=\"headerlink\" title=\"4. 设置属性值\"></a>4. 设置属性值</h3><p>在 Thymeleaf 模板文件中，你可以使用<code>th:*</code>（或者使用<code>th:attr</code>属性）来设置任意的 HTML5 标签属性的值。不仅如此，你还可以<code>th:*-*</code>来同时为多个不同的标签属性设置相同的一个值，甚至你可以使用<code>th:attrappend</code>和<code>th:attrprepend</code>来追加新的值到现有的标签属性值中。</p>\n<h4 id=\"4-0-th属性\"><a href=\"#4-0-th属性\" class=\"headerlink\" title=\"4.0. th属性\"></a>4.0. th属性</h4><table>\n<thead>\n<tr>\n<th>关键字</th>\n<th>功能介绍</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>th:id</code></td>\n<td>设置当前元素的Id，如果存在则覆盖</td>\n<td><code>&lt;div th:id=&quot;$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:text</code></td>\n<td>设置当前元素的文本内容</td>\n<td><code>&lt;div th:text=&quot;$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:object</code></td>\n<td>一般用来接受后端传给前端的对象，一般用来配合th:field</td>\n<td><code>&lt;divth:object=&quot;$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:field</code></td>\n<td>设置当前元素Value值，并且赋予当前元素id值和name，值为你所绑定的数值名称，一般写在th:object的元素内</td>\n<td><code>&lt;div th:field=&quot;*&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:value</code></td>\n<td>设置当前元素的Value值</td>\n<td><code>&lt;div th:value=&quot;$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:onclick</code></td>\n<td>和原生onclick事件一样，加了th可以传递参数时候可以用Thymeleaf的函数值</td>\n<td><code>&lt;button th:onclick=&quot;方法名(值)&quot;&gt;&lt;/button&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:each</code></td>\n<td>循环当前元素，可以名.取到你想要的值（如果值是一个对象的话）</td>\n<td><code>&lt;div th:each=&quot;名:$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:if</code></td>\n<td>条件成立则显示，否则不显示</td>\n<td><code>&lt;div th:if=&quot;*&#123;num==50&#125;&quot;&gt;等于50&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:href</code></td>\n<td>效果等同于原生href，但稍有不同。原生始终从端口号开始作为跟路径，th:href会寻找项目路径作为根路径。</td>\n<td><code>&lt;a th:href=&quot;地址&quot;&gt;&lt;/a&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:src</code></td>\n<td>图片类地址引入</td>\n<td><code>&lt;img th:src=&#39;@&#123;/DemoJpg/main.jpg&#125;&#39; &gt;</code></td>\n</tr>\n<tr>\n<td><code>th:switch</code></td>\n<td>和java用法一样，取一个值配合case使用</td>\n<td><code>&lt;div th:switch=&quot;*&#123;num&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:case</code></td>\n<td>写在对应的th:switch元素内，不符合条件的隐藏，只显示符合的</td>\n<td><code>&lt;span th:case=&quot;10&quot;&gt;我是10&lt;/span&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:inline</code></td>\n<td>写在script标签上，使得js脚本可以使用Thymeleaf变量 [[${放到这里！}]]</td>\n<td><code>&lt;script th:inline=&quot;javascript&quot;&gt;&lt;/script&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:fragment</code></td>\n<td>生成一个当前元素的模板，可以供其他页面使用（一般用来导入公共部分）</td>\n<td><code>&lt;div th:fragment=&quot;one&quot; style=&quot;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:insert</code></td>\n<td>把模板所有的代码块插入到该元素标签内（包含th:fragment声明的标签）</td>\n<td><code>&lt;div th:insert=&quot;Html名字:: one&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:replace</code></td>\n<td>把该元素替换为模板代码（不包含原元素标签）</td>\n<td><code>&lt;div th:replace=&quot;Html名字:: one&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:include</code></td>\n<td>把该元素的内容替换为模板代码（包含原元素标签。不包含th:fragment声明的标签）</td>\n<td><code>&lt;div th:include=&quot;Html名字:: one&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td><code>th:selected</code></td>\n<td>设置在select上，用来给option赋值来选择对应的值的下拉框</td>\n<td><code>&lt;div th:text=&quot;$&#123;值&#125;&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"4-1-th-attr\"><a href=\"#4-1-th-attr\" class=\"headerlink\" title=\"4.1 th:attr\"></a>4.1 th:attr</h4><p>这种方式是不被推荐的，了解一下就行。下面是用<code>th:attr=&quot;href=...&quot;</code>来设置标签<code>href</code>属性的值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a th:attr&#x3D;&quot;href&#x3D;@&#123;https:&#x2F;&#x2F;www.google.com.hk&#125;&quot;&gt;谷歌一下你就知道&lt;&#x2F;a&gt;</code></pre>\n\n<h4 id=\"4-2-th\"><a href=\"#4-2-th\" class=\"headerlink\" title=\"4.2 th:*\"></a>4.2 th:*</h4><p>显然<code>th:attr=&quot;href=@&#123;http://www.baidu.com&#125;&quot;</code>不够简洁，我们更推荐下面的这种语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a th:href&#x3D;&quot;@&#123;https:&#x2F;&#x2F;www.google.com.hk&#125;&quot;&gt;谷歌一下你就知道&lt;&#x2F;a&gt;</code></pre>\n\n<p>其中<code>th:*</code>中的<code>*</code>可以是 HTML5 支持的任意属性名称，甚至这些属性名称可以是自定义的：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &lt;div item-id&#x3D;&quot;1001&quot;&gt;Welcome to BeiJing!&lt;&#x2F;div&gt; --&gt;\n&lt;div th:item-id&#x3D;&quot;$&#123;user.id&#125;&quot;&gt;Welcome to BeiJing!&lt;&#x2F;div&gt;</code></pre>\n\n<h4 id=\"4-3-th\"><a href=\"#4-3-th\" class=\"headerlink\" title=\"4.3 th:-\"></a>4.3 th:<em>-</em></h4><p>如果想要同时为标签的多个不同属性设置相同的一个值，可以使用<code>th:*-*</code>的语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;img src&#x3D;&quot;logo.png&quot; th:alt-title&#x3D;&quot;LOGO图片&quot;&gt;</code></pre>\n\n<p>它相当于：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;img src&#x3D;&quot;logo.png&quot; th:alt&#x3D;&quot;LOGO图片&quot; th:title&#x3D;&quot;LOGO图片&quot;&gt;</code></pre>\n\n<h4 id=\"4-4-th-attrappend-amp-th-attrprepend\"><a href=\"#4-4-th-attrappend-amp-th-attrprepend\" class=\"headerlink\" title=\"4.4 th:attrappend &amp; th:attrprepend\"></a>4.4 th:attrappend &amp; th:attrprepend</h4><p><code>th:attrappend</code>和<code>th:attrprepend</code>可以将表达式的结果分别追加到指定的属性值之后和之前。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &lt;button class&#x3D;&quot;btn enable&quot;&gt;购买&lt;&#x2F;button&gt; --&gt;\n&lt;button class&#x3D;&quot;btn&quot; th:attrappend&#x3D;&quot;class&#x3D;$&#123;outOfStock&#125; ? &#39; enable&#39; : &#39; disable&#39;&quot;&gt;购买&lt;&#x2F;button&gt;\n&lt;!-- &lt;button class&#x3D;&quot;enable btn&quot;&gt;购买&lt;&#x2F;button&gt; --&gt;\n&lt;button class&#x3D;&quot;btn&quot; th:attrprepend&#x3D;&quot;class&#x3D;$&#123;outOfStock&#125; ? &#39;enable &#39; : &#39;disable &#39;&quot;&gt;购买&lt;&#x2F;button&gt;</code></pre>\n\n<p>另外，还有两个常用的具体附加属性<code>th:classappend=&quot;...&quot;</code>和<code>th:styleappend=&quot;&quot;</code>。</p>\n<p>它们分别用来代替<code>th:attrappend=&quot;class=...&quot;</code>和<code>th:attrappend=&quot;style=...&quot;</code>。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &lt;button class&#x3D;&quot;btn enable&quot;&gt;购买&lt;&#x2F;button&gt; --&gt;\n&lt;button class&#x3D;&quot;btn&quot; th:classappend&#x3D;&quot;$&#123;outOfStock&#125; ? &#39; enable&#39; : &#39; disable&#39;&quot;&gt;购买&lt;&#x2F;button&gt;</code></pre>\n\n<h4 id=\"4-5-布尔属性\"><a href=\"#4-5-布尔属性\" class=\"headerlink\" title=\"4.5 布尔属性\"></a>4.5 布尔属性</h4><p>在 HTML 中有些属性是布尔属性，布尔属性是指没有值的属性，如<code>readonly</code>、<code>checked</code>、<code>selected</code>等。它们若存在那就意味着值为 true。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;rememberme&quot; checked &#x2F;&gt; 记住我\n&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;male&quot; checked&gt; 男\n&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; value&#x3D;&quot;female&quot;&gt; 女\n&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;appId&quot; value&#x3D;&quot;J123654&quot; readonly&gt;\n&lt;select&gt;\n    &lt;option selected&gt;北京&lt;&#x2F;option&gt;\n    &lt;option&gt;上海&lt;&#x2F;option&gt;\n    &lt;option&gt;广州&lt;&#x2F;option&gt;\n    &lt;option&gt;深圳&lt;&#x2F;option&gt;\n&lt;&#x2F;select&gt;</code></pre>\n\n<p>Thymeleaf 也允许我们通过<code>th:*</code>（这里的<code>*</code>表示任意的布尔属性） 来选择是否使用这些布尔属性。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;rememberme&quot; ch:checked&#x3D;&quot;$&#123;rememberme&#125;&quot; &#x2F;&gt; 记住我</code></pre>\n\n<p>正如你所见，如果表达式的结果为<code>true</code>，则自动勾选复选框，若为<code>false</code>，则不会自动勾选。</p>\n<h3 id=\"5-遍历\"><a href=\"#5-遍历\" class=\"headerlink\" title=\"5. 遍历\"></a>5. 遍历</h3><p>遍历（迭代）的语法<code>th:each=&quot;自定义的元素变量名称 : $&#123;集合变量名称&#125;&quot;</code>：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div&gt;\n    &lt;spn&gt;你所在城市：&lt;&#x2F;spn&gt;\n    &lt;select name&#x3D;&quot;mycity&quot;&gt;\n        &lt;option th:each&#x3D;&quot;city : $&#123;cities&#125;&quot; th:text&#x3D;&quot;$&#123;city.name&#125;&quot;&gt;&lt;&#x2F;option&gt;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<p>属性<code>th:each</code>提供了一个用于跟踪迭代的状态变量，它包含以下几个属性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">类型</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">index</td>\n<td align=\"center\">int</td>\n<td align=\"center\">当前迭代的索引，从 0 开始</td>\n</tr>\n<tr>\n<td align=\"center\">count</td>\n<td align=\"center\">int</td>\n<td align=\"center\">当前迭代的计数，从 1 开始</td>\n</tr>\n<tr>\n<td align=\"center\">size</td>\n<td align=\"center\">int</td>\n<td align=\"center\">集合中元素的总个数</td>\n</tr>\n<tr>\n<td align=\"center\">current</td>\n<td align=\"center\">int</td>\n<td align=\"center\">当前的元素对象</td>\n</tr>\n<tr>\n<td align=\"center\">even</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">当前迭代的计数是否是偶数</td>\n</tr>\n<tr>\n<td align=\"center\">odd</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">当前迭代的计数是否是奇数</td>\n</tr>\n<tr>\n<td align=\"center\">first</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">当前元素是否是集合的第一个元素</td>\n</tr>\n<tr>\n<td align=\"center\">last</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">当前元素是否是集合的最后一个元素</td>\n</tr>\n</tbody></table>\n<p>状态变量的使用语法：<code>th:each=&quot;自定义的元素变量名称, 自定义的状态变量名称 : $&#123;集合变量名称&#125;&quot;</code>：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div&gt;\n    &lt;spn&gt;所在城市：&lt;&#x2F;spn&gt;\n    &lt;select name&#x3D;&quot;mycity&quot;&gt;\n        &lt;option th:each&#x3D;&quot;city, status : $&#123;cities&#125;&quot; th:text&#x3D;&quot;$&#123;city.name&#125;&quot; th:item-index&#x3D;&quot;$&#123;status.count&#125;&quot;&gt;&lt;&#x2F;option&gt;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<p>不管什么时候，Thymeleaf 始终会为每个<code>th:each</code>创建一个状态变量，默认的状态变量名称就是自定义的元素变量名称后面加<code>Stat</code>字符串组成：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div&gt;\n    &lt;spn&gt;所在城市：&lt;&#x2F;spn&gt;\n    &lt;select name&#x3D;&quot;mycity&quot;&gt;\n        &lt;option th:each&#x3D;&quot;city : $&#123;cities&#125;&quot; th:text&#x3D;&quot;$&#123;city.name&#125;&quot; th:item-index&#x3D;&quot;$&#123;cityStat.count&#125;&quot;&gt;&lt;&#x2F;option&gt;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<h3 id=\"6-条件判断\"><a href=\"#6-条件判断\" class=\"headerlink\" title=\"6. 条件判断\"></a>6. 条件判断</h3><p>条件判断语句有三种，分别是：<code>th:if</code>、<code>th:unless</code>、<code>th:swith</code>。</p>\n<h4 id=\"6-1-th-if\"><a href=\"#6-1-th-if\" class=\"headerlink\" title=\"6.1 th:if\"></a>6.1 th:if</h4><p>当表达式的评估结果为真时则显示内容，否则不显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a th:href&#x3D;&quot;@&#123;&#x2F;user&#x2F;order(uid&#x3D;$&#123;user.id&#125;)&#125;&quot; th:if&#x3D;&quot;$&#123;user !&#x3D; null&#125;&quot;&gt;我的订单&lt;&#x2F;a&gt;</code></pre>\n\n<p>真假评估的依据：</p>\n<ul>\n<li>当表达式的值不为空（null）时<ul>\n<li>如果表达式的值是一个布尔类型，且值为<code>true</code>评估为真，否则为假</li>\n<li>如果表达式的值是一个数字类型，且值为非<code>0</code>评估为真，否则为假</li>\n<li>如果表达式的值是一个字符类型，且值为非<code>0</code>评估为真，否则为假</li>\n<li>如果表达式的值是一个字符串类型，且值为非<code>&quot;false&quot;</code>、<code>&quot;off&quot;</code>、<code>&quot;no&quot;</code>评估为真，否则为假</li>\n<li>如果表达式的值不是一个<code>布尔</code>、<code>数字</code>、<code>字符</code>或<code>字符串</code>评估为真</li>\n</ul>\n</li>\n<li>当表达式的值为空（null）时，评估结果为假</li>\n</ul>\n<p>因此，上面代码我们也可以简写成：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a th:href&#x3D;&quot;@&#123;&#x2F;user&#x2F;order(uid&#x3D;$&#123;user.id&#125;)&#125;&quot; th:if&#x3D;&quot;$&#123;user&#125;&quot;&gt;我的订单&lt;&#x2F;a&gt;</code></pre>\n\n<p>但是，为了代码的可读性，我们并不建议这样使用。</p>\n<h4 id=\"6-2-th-unless\"><a href=\"#6-2-th-unless\" class=\"headerlink\" title=\"6.2 th:unless\"></a>6.2 th:unless</h4><p><code>th:unless</code>与<code>th:if</code>判断恰好相反，当表达式的评估结果为假时则显示内容，否则不显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a th:href&#x3D;&quot;@&#123;&#x2F;user&#x2F;order(uid&#x3D;$&#123;user.id&#125;)&#125;&quot; th:unless&#x3D;&quot;$&#123;user &#x3D;&#x3D; null&#125;&quot;&gt;我的订单&lt;&#x2F;a&gt;</code></pre>\n\n<h4 id=\"6-3-th-swith\"><a href=\"#6-3-th-swith\" class=\"headerlink\" title=\"6.3 th:swith\"></a>6.3 th:swith</h4><p>多路选择语句，它需要搭配<code>th:case</code>来使用：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div th:switch&#x3D;&quot;$&#123;user.role&#125;&quot;&gt;\n    &lt;p th:case&#x3D;&quot;admin&quot;&gt;管理员&lt;&#x2F;p&gt;\n    &lt;p th:case&#x3D;&quot;user&quot;&gt;普通用户&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<h3 id=\"7-定义局部变量\"><a href=\"#7-定义局部变量\" class=\"headerlink\" title=\"7. 定义局部变量\"></a>7. 定义局部变量</h3><p>使用<code>th:with</code>属性可以定义局部变量：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:with&#x3D;&quot;name&#x3D;&#39;fanlychie&#39;&quot;&gt;\n    &lt;span th:text&#x3D;&quot;$&#123;name&#125;&quot;&gt;&lt;&#x2F;span&gt;\n&lt;&#x2F;p&gt;</code></pre>\n\n<p>同时定义多个局部变量时，用英文<code>,</code>号分隔开：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p th:with&#x3D;&quot;name&#x3D;$&#123;user.name&#125;,age&#x3D;&#123;user.age&#125;&quot;&gt;\n    ......\n&lt;&#x2F;p&gt;</code></pre>\n\n<h3 id=\"8-注释\"><a href=\"#8-注释\" class=\"headerlink\" title=\"8. 注释\"></a>8. 注释</h3><p>下面介绍常见的两种注释：</p>\n<h4 id=\"8-1-标准注释\"><a href=\"#8-1-标准注释\" class=\"headerlink\" title=\"8.1 标准注释\"></a>8.1 标准注释</h4><p>语法：<code>&lt;!-- ... ---&gt;</code>，注释的代码块会在文件源代码中显示出来。</p>\n<h5 id=\"8-1-1-单行注释\"><a href=\"#8-1-1-单行注释\" class=\"headerlink\" title=\"8.1.1 单行注释\"></a>8.1.1 单行注释</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- &lt;span&gt;$&#123;message&#125;&lt;&#x2F;span&gt; ---&gt;</code></pre>\n\n<h5 id=\"8-1-2-多行注释\"><a href=\"#8-1-2-多行注释\" class=\"headerlink\" title=\"8.1.2 多行注释\"></a>8.1.2 多行注释</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--\n&lt;div th:switch&#x3D;&quot;$&#123;user.role&#125;&quot;&gt;\n    &lt;p th:case&#x3D;&quot;admin&quot;&gt;管理员&lt;&#x2F;p&gt;\n    &lt;p th:case&#x3D;&quot;user&quot;&gt;普通用户&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;\n---&gt;</code></pre>\n\n<h4 id=\"8-2-解析器级注释\"><a href=\"#8-2-解析器级注释\" class=\"headerlink\" title=\"8.2 解析器级注释\"></a>8.2 解析器级注释</h4><p>语法：<code>&lt;!--/* ... */--&gt;</code>，注释的代码块会在引擎解析的时候抹去。</p>\n<h5 id=\"8-2-1-单行注释：\"><a href=\"#8-2-1-单行注释：\" class=\"headerlink\" title=\"8.2.1 单行注释：\"></a>8.2.1 单行注释：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--&#x2F;* &lt;span&gt;$&#123;message&#125;&lt;&#x2F;span&gt; *&#x2F;--&gt;</code></pre>\n\n<h5 id=\"8-2-2-多行注释\"><a href=\"#8-2-2-多行注释\" class=\"headerlink\" title=\"8.2.2 多行注释\"></a>8.2.2 多行注释</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!--&#x2F;*--&gt;\n&lt;div th:switch&#x3D;&quot;$&#123;user.role&#125;&quot;&gt;\n    &lt;p th:case&#x3D;&quot;admin&quot;&gt;管理员&lt;&#x2F;p&gt;\n    &lt;p th:case&#x3D;&quot;user&quot;&gt;普通用户&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;\n&lt;!--*&#x2F;--&gt;</code></pre>\n\n<h3 id=\"9-内联表达式\"><a href=\"#9-内联表达式\" class=\"headerlink\" title=\"9. 内联表达式\"></a>9. 内联表达式</h3><p>内联表达式允许我们直接在 HTML 文本中使用标准表达式，而不需要使用<code>th:*</code>标签属性。</p>\n<h4 id=\"9-1-…\"><a href=\"#9-1-…\" class=\"headerlink\" title=\"9.1 [[…]]\"></a>9.1 [[…]]</h4><p><code>[[]]</code>相当于<code>th:text</code>，对含有 HTML 标签的内容自动进行字符转义。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p&gt;The message is : [[$&#123;htmlContent&#125;]]&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"9-2-…\"><a href=\"#9-2-…\" class=\"headerlink\" title=\"9.2 [(…)]\"></a>9.2 [(…)]</h4><p><code>[()]</code>相当于<code>th:utext</code>，对含有 HTML 标签的内容不进行字符转义。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p&gt;The message is : [($&#123;htmlContent&#125;)]&lt;&#x2F;p&gt;</code></pre>\n\n<h4 id=\"9-3-th-inline\"><a href=\"#9-3-th-inline\" class=\"headerlink\" title=\"9.3 th:inline\"></a>9.3 th:inline</h4><p>我们已经了解到，使用<code>[[]]</code>和<code>[()]</code>语法可以直接在 HTML 文本中使用标准表达式，如果想要使用更多高级的功能，需要使用<code>th:inline</code>属性来激活，它的取值如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">值</th>\n<th align=\"center\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">none</td>\n<td align=\"center\">禁止内联表达式，可以原样输出 [[]] 和 [()] 字符串</td>\n</tr>\n<tr>\n<td align=\"center\">text</td>\n<td align=\"center\">文本内联，可以使用 th:each 等高级语法</td>\n</tr>\n<tr>\n<td align=\"center\">css</td>\n<td align=\"center\">样式内联，如：<code>&lt;style th:inline=&quot;css&quot;&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\">javascript</td>\n<td align=\"center\">脚本内联，如：<code>&lt;style th:inline=&quot;javascript&quot;&gt;</code></td>\n</tr>\n</tbody></table>\n<h5 id=\"9-3-1-none\"><a href=\"#9-3-1-none\" class=\"headerlink\" title=\"9.3.1 none\"></a>9.3.1 none</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- [[1, 2], [3, 4]] --&gt;\n&lt;p th:inline&#x3D;&quot;none&quot;&gt;[[1, 2], [3, 4]]&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"9-3-2-text\"><a href=\"#9-3-2-text\" class=\"headerlink\" title=\"9.3.2 text\"></a>9.3.2 text</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 北京 上海 广州 深圳 --&gt;\n&lt;p th:inline&#x3D;&quot;text&quot;&gt;\n    [# th:each&#x3D;&quot;city : $&#123;cities&#125;&quot;]\n        [($&#123;city.name&#125;)]\n    [&#x2F;]\n&lt;&#x2F;p&gt;</code></pre>\n\n<h5 id=\"9-3-3-css\"><a href=\"#9-3-3-css\" class=\"headerlink\" title=\"9.3.3 css\"></a>9.3.3 css</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;style th:inline&#x3D;&quot;css&quot;&gt;\n    body &#123;\n        background-color:[[$&#123;bgColor&#125;]];\n    &#125;\n&lt;&#x2F;style&gt;</code></pre>\n\n<h5 id=\"9-3-4-javascript\"><a href=\"#9-3-4-javascript\" class=\"headerlink\" title=\"9.3.4 javascript\"></a>9.3.4 javascript</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;script th:inline&#x3D;&quot;javascript&quot;&gt;\n    var user &#x3D; [[$&#123;user&#125;]];\n    alert(&quot;用户名：&quot; + user.name);\n&lt;&#x2F;script&gt;</code></pre>\n\n\n\n<h3 id=\"10-补充\"><a href=\"#10-补充\" class=\"headerlink\" title=\"10. 补充\"></a>10. 补充</h3><h4 id=\"10-1-拼接字符串\"><a href=\"#10-1-拼接字符串\" class=\"headerlink\" title=\"10.1 拼接字符串\"></a>10.1 拼接字符串</h4><p>注意，不能在th:field中使用拼接</p>\n<p> thymeleaf th:value 可以使用+号拼接两个字符串</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;div class&#x3D;&quot;col-sm-9&quot;&gt;\n    &lt;label th:each&#x3D;&quot;brand:$&#123;brands&#125;&quot; class&#x3D;&quot;check-box&quot;&gt;\n\n    &lt;input id&#x3D;&quot;brands&quot; name&#x3D;&quot;brands&quot; type&#x3D;&quot;checkbox&quot; th:value&#x3D;&quot;$&#123;brand.brandId&#125;+&#39;,&#39;+$&#123;brand.brandShortName&#125;&quot; th:text&#x3D;&quot;$&#123;brand.brandShortName&#125;&quot;&gt;\n\n    &lt;&#x2F;label&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n<p>另外  可以使用||符号将需要需要拼接的字符串包起来：<a href=\"https://blog.csdn.net/Luck_ZZ/article/details/80066496\">参考地址</a></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;div class&#x3D;&quot;col-sm-9&quot;&gt;\n\n    &lt;label th:each&#x3D;&quot;brand:$&#123;brands&#125;&quot; class&#x3D;&quot;check-box&quot;&gt;\n\n    &lt;input id&#x3D;&quot;brands&quot; name&#x3D;&quot;brands&quot; type&#x3D;&quot;checkbox&quot; th:value&#x3D;&quot;|$&#123;brand.brandId&#125;,$&#123;brand.brandShortName&#125;|&quot; th:text&#x3D;&quot;$&#123;brand.brandShortName&#125;&quot;&gt;\n\n    &lt;&#x2F;label&gt;\n&lt;&#x2F;div&gt;</code></pre>\n\n","text":"1. 创建模板文件创建一个 HTML 模板文件： &lt;!DOCTYPE HTML&gt; &lt;html xmlns:th&#x3D;&quot;http:&#x2F;&#x2F;www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;ti...","link":"","photos":[],"count_time":{"symbolsCount":"30k","symbolsTime":"27 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">1. 创建模板文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%A0%87%E5%87%86%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2. 标准表达式语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E7%AE%80%E5%8D%95%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">2.1 简单表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-1-%E2%80%A6\"><span class=\"toc-text\">2.1.1 ${…}</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-2-%E2%80%A6\"><span class=\"toc-text\">2.1.2  *{…}</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-3-%E2%80%A6\"><span class=\"toc-text\">2.1.3 #{…}</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-4-%E2%80%A6\"><span class=\"toc-text\">2.1.4 @{…}</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-5-%E2%80%A6\"><span class=\"toc-text\">2.1.5 ~{…}</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-6-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">2.1.6 内置对象</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-7-%E5%B7%A5%E5%85%B7%E7%B1%BB\"><span class=\"toc-text\">2.1.7 工具类</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-1-8-%E5%86%85%E7%BD%AE%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.1.8 内置方法</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E5%AD%97%E9%9D%A2%E5%80%BC\"><span class=\"toc-text\">2.2 字面值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-1-%E6%96%87%E5%AD%97%E5%AD%97%E9%9D%A2%E5%80%BC\"><span class=\"toc-text\">2.2.1 文字字面值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-2-%E6%95%B0%E5%AD%97%E5%AD%97%E9%9D%A2%E5%80%BC\"><span class=\"toc-text\">2.2.2 数字字面值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-3-%E5%B8%83%E5%B0%94%E5%AD%97%E9%9D%A2%E5%80%BC\"><span class=\"toc-text\">2.2.3 布尔字面值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-4-%E7%A9%BA%E5%AD%97%E9%9D%A2%E5%80%BC\"><span class=\"toc-text\">2.2.4 空字面值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-5-%E5%AD%97%E9%9D%A2%E4%BB%A4%E7%89%8C\"><span class=\"toc-text\">2.2.5 字面令牌</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E6%96%87%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2.3 文本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-1-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">2.3.1 字符串连接</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-2-%E5%AD%97%E9%9D%A2%E5%80%BC%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">2.3.2 字面值替换</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">2.4 算术运算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5-%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">2.5 布尔运算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6-%E6%AF%94%E8%BE%83%E5%92%8C%E7%9B%B8%E7%AD%89\"><span class=\"toc-text\">2.6 比较和相等</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-7-%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">2.7 条件运算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-8-%E6%97%A0%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">2.8 无操作符</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BD%BF%E7%94%A8%E6%96%87%E6%9C%AC\"><span class=\"toc-text\">3. 使用文本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-th-text\"><span class=\"toc-text\">3.1 th:text</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-th-utext\"><span class=\"toc-text\">3.2 th:utext</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%AE%BE%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%80%BC\"><span class=\"toc-text\">4. 设置属性值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-0-th%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">4.0. th属性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-th-attr\"><span class=\"toc-text\">4.1 th:attr</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-th\"><span class=\"toc-text\">4.2 th:*</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-th\"><span class=\"toc-text\">4.3 th:-</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-4-th-attrappend-amp-th-attrprepend\"><span class=\"toc-text\">4.4 th:attrappend &amp; th:attrprepend</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-%E5%B8%83%E5%B0%94%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">4.5 布尔属性</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">5. 遍历</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">6. 条件判断</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-th-if\"><span class=\"toc-text\">6.1 th:if</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-2-th-unless\"><span class=\"toc-text\">6.2 th:unless</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-th-swith\"><span class=\"toc-text\">6.3 th:swith</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%AE%9A%E4%B9%89%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">7. 定义局部变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8. 注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-1-%E6%A0%87%E5%87%86%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8.1 标准注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-1-1-%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8.1.1 单行注释</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-1-2-%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8.1.2 多行注释</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-%E8%A7%A3%E6%9E%90%E5%99%A8%E7%BA%A7%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8.2 解析器级注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-2-1-%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%EF%BC%9A\"><span class=\"toc-text\">8.2.1 单行注释：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8-2-2-%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">8.2.2 多行注释</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E5%86%85%E8%81%94%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">9. 内联表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-1-%E2%80%A6\"><span class=\"toc-text\">9.1 [[…]]</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-2-%E2%80%A6\"><span class=\"toc-text\">9.2 [(…)]</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-3-th-inline\"><span class=\"toc-text\">9.3 th:inline</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-3-1-none\"><span class=\"toc-text\">9.3.1 none</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-3-2-text\"><span class=\"toc-text\">9.3.2 text</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-3-3-css\"><span class=\"toc-text\">9.3.3 css</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9-3-4-javascript\"><span class=\"toc-text\">9.3.4 javascript</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">10. 补充</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-1-%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">10.1 拼接字符串</span></a></li></ol></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Vue","uid":"5f258f833478a2a0e21ce42d19305683","slug":"32-Vue","date":"2021-09-13T15:09:32.000Z","updated":"2021-09-15T11:00:55.535Z","comments":true,"path":"api/articles/32-Vue.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":":beginner: ​Vue 基础要点① 什么是框架任何编程语言在最初的时候都是没有框架的，后来随着在实际开发过程中不断总结『经验』，积累『最佳实践』，慢慢的人们发现很多『特定场景』下的『特定问题』总是可以『套用固定解决方案』。 于是有人把成熟的『固定解决方案』收集起来，整合在...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"Regular Expression","uid":"011b445bb73b7101b5e897c141561df0","slug":"30-Regular expression","date":"2021-09-13T15:07:32.000Z","updated":"2021-09-15T10:25:53.055Z","comments":true,"path":"api/articles/30-Regular expression.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"一、概述正则表达式用于文本内容的查找和替换。 正则表达式内置于其它语言或者软件产品中，它本身不是一种语言或者软件。 正则表达式在线工具 二、匹配单个字符. 可以用来匹配任何的单个字符，但是在绝大多数实现里面，不能匹配换行符； . 是元字符，表示它有特殊的含义，而不是字符本身的含义...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}