{"title":"Jsp 知识总结","uid":"945a3d93a729714c86dd0543b3f0dd1a","slug":"27-Jsp","date":"2021-09-13T15:04:32.000Z","updated":"2021-09-15T10:24:07.557Z","comments":true,"path":"api/articles/27-Jsp.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","content":"<h3 id=\"1-基础\"><a href=\"#1-基础\" class=\"headerlink\" title=\"1. 基础\"></a>1. 基础</h3><h4 id=\"1-1-什么是Jsp\"><a href=\"#1-1-什么是Jsp\" class=\"headerlink\" title=\"1.1 什么是Jsp\"></a>1.1 什么是Jsp</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">jsp 的全称是 java server pages。Java 的服务器页面。\n\njsp 的主要作用是代替 Servlet 程序回传 html 页面的数据。\n\n因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情。开发成本和维护成本都极高。</code></pre>\n\n<h4 id=\"1-2-jsp-如何访问？\"><a href=\"#1-2-jsp-如何访问？\" class=\"headerlink\" title=\"1.2 jsp 如何访问？\"></a>1.2 jsp 如何访问？</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">jsp 页面和 html 页面一样，都是存放在 web 目录下。访问也跟访问 html 页面一样。 \n\n比如： 在 web 目录下有如下的文件： \n\n​\t\t\ta.html 页面 访问地址是 &#x3D;&gt;&gt;&gt;&gt;&gt;&gt; http:&#x2F;&#x2F;ip:port&#x2F;工程路径&#x2F;a.html \n\n​\t\t\tb.jsp 页面 访问地址是 &#x3D;&gt;&gt;&gt;&gt;&gt;&gt; http:&#x2F;&#x2F;ip:port&#x2F;工程路径&#x2F;b.jsp</code></pre>\n\n<h3 id=\"2-Jsp本质\"><a href=\"#2-Jsp本质\" class=\"headerlink\" title=\"2. Jsp本质\"></a>2. Jsp本质</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">1、jsp页面的本质就是一个Servlet程序\n\n2. 访问 jsp 后，tomcat 会帮我们将 jsp 转换为 .java 文件，进而解析为 .class 文件\n   Tomcat 把 jsp 页面翻译后得到的 Java 源文件中可以发现 jsp 页面继承了 org.apache.runtime.HttpJspBase\n   跟踪源代码发现 \tHttpJspBase 类直接继承了 HttpServlet\n   观察翻译出来的 Servlet 程序的源代码，不难发现。其底层实现，也是通过输出流。把 html 页面数据回传给客户端。</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/jsp%E6%9C%AC%E8%B4%A8.png\" alt=\"jsp本质\"></p>\n<h3 id=\"3-print-write\"><a href=\"#3-print-write\" class=\"headerlink\" title=\"3. print | write\"></a>3. print | write</h3><h4 id=\"3-1-输出数据类型\"><a href=\"#3-1-输出数据类型\" class=\"headerlink\" title=\"3.1 输出数据类型\"></a>3.1 输出数据类型</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* out.write() 输出字符串没有问题 \n* out.print() 输出任意数据都没有问题（都转换成为字符串后调用的 write 输出）</code></pre>\n\n<h4 id=\"3-2-输出数据为null\"><a href=\"#3-2-输出数据为null\" class=\"headerlink\" title=\"3.2 输出数据为null\"></a>3.2 输出数据为null</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* print方法将输出内容为“null”的字符串\n* write方法则是抛出NullPointerException异常</code></pre>\n\n<h4 id=\"3-3-out-response-getWrite\"><a href=\"#3-3-out-response-getWrite\" class=\"headerlink\" title=\"3.3 out | response.getWrite\"></a>3.3 out | response.getWrite</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* response 中表示响应，我们经常用于设置返回给客户端的内容（输出） \n* \\r\\n 在客户端只会输出一个空格</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/jsp.out.write.png\" alt=\"out与write的区别\"></p>\n<h3 id=\"4-三大指令\"><a href=\"#4-三大指令\" class=\"headerlink\" title=\"4. 三大指令\"></a>4. 三大指令</h3><h4 id=\"4-1-page指令\"><a href=\"#4-1-page指令\" class=\"headerlink\" title=\"4.1 page指令\"></a>4.1 page指令</h4><p>jsp 的 page 指令可以修改 jsp 页面中一些重要的属性，或者行为。</p>\n<p>&lt;%@ page contentType=”text/html;charset=UTF-8” language=”java” %&gt; </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性</th>\n<th align=\"center\">释义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">language</td>\n<td align=\"center\">表示 jsp 翻译后是什么语言文件。暂时只支持 java</td>\n</tr>\n<tr>\n<td align=\"center\">contentType</td>\n<td align=\"center\">表示 jsp 返回的数据类型是什么。也是源码中 response.setContentType()参数值text/html;charset=UTF-8</td>\n</tr>\n<tr>\n<td align=\"center\">pageEncoding</td>\n<td align=\"center\">表示当前 jsp 页面文件本身的字符集</td>\n</tr>\n<tr>\n<td align=\"center\">import</td>\n<td align=\"center\">跟 java 源代码中一样。用于导包，导类</td>\n</tr>\n<tr>\n<td align=\"center\">autoFlush</td>\n<td align=\"center\">设置当 out 输出流缓冲区满了之后，是否自动刷新冲级区。默认值是 true</td>\n</tr>\n<tr>\n<td align=\"center\">buffer</td>\n<td align=\"center\">设置 out 缓冲区的大小。默认是 8kb</td>\n</tr>\n<tr>\n<td align=\"center\">errorPage</td>\n<td align=\"center\">设置当 jsp 页面运行时出错，自动跳转去的错误页面路径</td>\n</tr>\n<tr>\n<td align=\"center\">isErrorPage</td>\n<td align=\"center\">设置当前 jsp 页面是否是错误信息页面。默认是 false。如果是 true 可以 获取异常信息。</td>\n</tr>\n<tr>\n<td align=\"center\">session</td>\n<td align=\"center\">设置访问当前 jsp 页面，是否会创建 HttpSession 对象。默认是 true。</td>\n</tr>\n<tr>\n<td align=\"center\">extends</td>\n<td align=\"center\">设置 jsp 翻译出来的 java 类默认继承谁</td>\n</tr>\n</tbody></table>\n<h4 id=\"4-2-taglib指令\"><a href=\"#4-2-taglib指令\" class=\"headerlink\" title=\"4.2 taglib指令\"></a>4.2 taglib指令</h4><pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">概述：导入额外功能\t\t\t例如：导入jstl标签\n\n&lt;%@ taglib uri&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;jsp&#x2F;jstl&#x2F;core&quot; prefix&#x3D;&quot;c&quot; %&gt;</code></pre>\n\n<h4 id=\"4-3-include指令\"><a href=\"#4-3-include指令\" class=\"headerlink\" title=\"4.3 include指令\"></a>4.3 include指令</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概述：静态包含\t\t格式：&lt;%@ include file&#x3D;&quot; &quot;%&gt;\n\nfile 属性指定你要包含的 jsp 页面的路径 \n\n地址中第一个斜杠 &#x2F; 表示为 http:&#x2F;&#x2F;ip:port&#x2F;工程路径&#x2F; \t映射到代码的 web 目录 </code></pre>\n\n<h3 id=\"5-静态域动态包含\"><a href=\"#5-静态域动态包含\" class=\"headerlink\" title=\"5. 静态域动态包含\"></a>5. 静态域动态包含</h3><h4 id=\"5-1-Jsp-静态包含\"><a href=\"#5-1-Jsp-静态包含\" class=\"headerlink\" title=\"5.1 Jsp 静态包含\"></a>5.1 Jsp 静态包含</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* &lt;%@ include file&#x3D;&quot; &quot;%&gt; \t静态包含格式 \n* 静态包含的特点\n  1. 静态包含  不会翻译  被包含的 jsp 页面\n  2. 静态包含其实是把被包含的 jsp 页面的代码拷贝到包含的位置执行输出。\n* &lt;%@include file&#x3D;&quot;footer.jsp&quot;%&gt;</code></pre>\n\n<h4 id=\"5-2-Jsp-动态包含\"><a href=\"#5-2-Jsp-动态包含\" class=\"headerlink\" title=\"5.2 Jsp 动态包含\"></a>5.2 Jsp 动态包含</h4><pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">* &lt;jsp:include page&#x3D;&quot;&quot;&gt;&lt;&#x2F;jsp：include&gt;\t\t动态包含 \n\n  1. page 属性是指定你要包含的 jsp 页面的路径 \n  2. 动态包含也可以像静态包含一样。把被包含的内容执行输出到包含位置 \n\n* 动态包含的特点\n\n  1. **动态包含会把包含的 jsp 页面也翻译成为 java 代码**\n  2. 动态包含底层代码使用如下代码去调用被包含的 jsp 页面执行输出。 JspRuntimeLibrary.include(request, response, &quot;&#x2F;include&#x2F;footer.jsp&quot;, out, false); \n  3. 动态包含，还可以传递参数\n\n&lt;jsp:include page&#x3D;&quot;&#x2F;include&#x2F;footer.jsp&quot;&gt;\n    &lt;jsp:param name&#x3D;&quot;username&quot; value&#x3D;&quot;bbj&quot;&#x2F;&gt;\n    &lt;jsp:param name&#x3D;&quot;password&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;\n&lt;&#x2F;jsp：include&gt;</code></pre>\n\n<h3 id=\"6-页面注释和声明代码\"><a href=\"#6-页面注释和声明代码\" class=\"headerlink\" title=\"6. 页面注释和声明代码\"></a>6. 页面注释和声明代码</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 格式一、jsp注释\t&lt;%--- Content ---%&gt;\n* 格式二、html注释  &lt;!-- content --&gt;\n\n* 声明代码\n* &lt;%! %&gt; —— 定义成员内容\n* &lt;% %&gt; —— 定义service方法中的局部内容\n* &lt;%&#x3D; %&gt; —— 定义service方中的out对象的输入内容</code></pre>\n\n<h3 id=\"7-九大内置对象\"><a href=\"#7-九大内置对象\" class=\"headerlink\" title=\"7. 九大内置对象\"></a>7. 九大内置对象</h3><h4 id=\"7-1-概述\"><a href=\"#7-1-概述\" class=\"headerlink\" title=\"7.1 概述\"></a>7.1 概述</h4><p>在访问JSP后的，tomcat解析jsp后生成的.java文件中，在service()方法中，声明好的对象可在JSP中可以直接使用</p>\n<h4 id=\"7-2-分类\"><a href=\"#7-2-分类\" class=\"headerlink\" title=\"7.2 分类\"></a>7.2 分类</h4><table>\n<thead>\n<tr>\n<th>对象</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>application对象</td>\n<td>ServletContext</td>\n</tr>\n<tr>\n<td>session对象</td>\n<td>HttpSession</td>\n</tr>\n<tr>\n<td>request对象</td>\n<td>HttpServletRequest</td>\n</tr>\n<tr>\n<td>pageCotext对象</td>\n<td>PageCotext (页面域)</td>\n</tr>\n<tr>\n<td>out对象</td>\n<td>JspWriter</td>\n</tr>\n<tr>\n<td>response对象</td>\n<td>HttpServletResponse</td>\n</tr>\n<tr>\n<td>config对象</td>\n<td>ServletConfig</td>\n</tr>\n<tr>\n<td>page对象</td>\n<td>this，页面对象</td>\n</tr>\n<tr>\n<td>exception对象</td>\n<td>Throwable</td>\n</tr>\n</tbody></table>\n<h3 id=\"8-四大域对象\"><a href=\"#8-四大域对象\" class=\"headerlink\" title=\"8. 四大域对象\"></a>8. 四大域对象</h3><h4 id=\"8-1-四大域对象存取范围\"><a href=\"#8-1-四大域对象存取范围\" class=\"headerlink\" title=\"8.1 四大域对象存取范围\"></a>8.1 四大域对象存取范围</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* pageContext (PageContextImpl类) \t当前 jsp 页面范围内有效 \n* request (HttpServletRequest类)     一次请求内有效 \n* session (HttpSession类)            一个会话范围内有效（打开浏览器访问服务器，直到关闭浏览器） \n* application (ServletContext类)     整个 web 工程范围内都有效（只要 web 工程不停止，数据都在）</code></pre>\n\n<h4 id=\"8-2-域对象可以像-Map存取数据的对象\"><a href=\"#8-2-域对象可以像-Map存取数据的对象\" class=\"headerlink\" title=\"8.2 域对象可以像 Map存取数据的对象\"></a>8.2 域对象可以像 Map存取数据的对象</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 四个域对象功能一样。不同的是它们对数据的存取范围。 \n* 虽然四个域对象都可以存取数据。在使用上它们是有优先顺序的。 \n* 四个域在使用的时候，优先顺序分别是，他们从小到大的范围的顺序。\n  pageContext &#x3D;&#x3D;&gt;&gt;&gt; request &#x3D;&#x3D;&gt;&gt;&gt; session &#x3D;&#x3D;&gt;&gt;&gt; application</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/jsp%E5%9B%9B%E5%A4%A7%E5%9F%9F%E5%AF%B9%E8%B1%A1.png\" alt=\"image-20210512185910598\"></p>\n<h3 id=\"9-常用标签\"><a href=\"#9-常用标签\" class=\"headerlink\" title=\"9. 常用标签\"></a>9. 常用标签</h3><h4 id=\"9-1-请求转发\"><a href=\"#9-1-请求转发\" class=\"headerlink\" title=\"9.1 请求转发\"></a>9.1 请求转发</h4><ul>\n<li> &lt;jsp:forward page=”    “&gt;&lt;/jsp: forward&gt;是请求转发标签，它的功能就是请求转发 page 属性设置请求转发的路径</li>\n<li> &lt;jsp:forward page=”b.jsp”&gt;&lt;/jsp: forward&gt;</li>\n</ul>\n","text":"1. 基础1.1 什么是Jspjsp 的全称是 java server pages。Java 的服务器页面。 jsp 的主要作用是代替 Servlet 程序回传 html 页面的数据。 因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情。开发成本和维护成本都极...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">1. 基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E4%BB%80%E4%B9%88%E6%98%AFJsp\"><span class=\"toc-text\">1.1 什么是Jsp</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-jsp-%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%EF%BC%9F\"><span class=\"toc-text\">1.2 jsp 如何访问？</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Jsp%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">2. Jsp本质</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-print-write\"><span class=\"toc-text\">3. print | write</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">3.1 输出数据类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E8%BE%93%E5%87%BA%E6%95%B0%E6%8D%AE%E4%B8%BAnull\"><span class=\"toc-text\">3.2 输出数据为null</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-out-response-getWrite\"><span class=\"toc-text\">3.3 out | response.getWrite</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E4%B8%89%E5%A4%A7%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">4. 三大指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-page%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">4.1 page指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-taglib%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">4.2 taglib指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-include%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">4.3 include指令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E9%9D%99%E6%80%81%E5%9F%9F%E5%8A%A8%E6%80%81%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">5. 静态域动态包含</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-Jsp-%E9%9D%99%E6%80%81%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">5.1 Jsp 静态包含</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-Jsp-%E5%8A%A8%E6%80%81%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">5.2 Jsp 动态包含</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E9%A1%B5%E9%9D%A2%E6%B3%A8%E9%87%8A%E5%92%8C%E5%A3%B0%E6%98%8E%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">6. 页面注释和声明代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E4%B9%9D%E5%A4%A7%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">7. 九大内置对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-1-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">7.1 概述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-2-%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">7.2 分类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E5%9B%9B%E5%A4%A7%E5%9F%9F%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">8. 四大域对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-1-%E5%9B%9B%E5%A4%A7%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%8F%96%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">8.1 四大域对象存取范围</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E5%83%8F-Map%E5%AD%98%E5%8F%96%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">8.2 域对象可以像 Map存取数据的对象</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">9. 常用标签</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-1-%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91\"><span class=\"toc-text\">9.1 请求转发</span></a></li></ol></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Http 基础知识","uid":"36fd07d1ed0a51bb3b4e77f831ab30e9","slug":"26-Http","date":"2021-09-13T15:04:32.000Z","updated":"2021-09-15T10:23:37.009Z","comments":true,"path":"api/articles/26-Http.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"1. WEB回顾1.1 Web开发中的常见概念B&#x2F;S 系统和C&#x2F;S 系统 Brower&#x2F;Server：浏览器 服务器 系统 ----- 网站 更新维护成本低，所有计算都在服务端，导致服务器计算压力较大，网络负荷较重 Client&#x2F;Serve...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"JDBC 返回自增，批处理","uid":"ed74ba118184352b8cd4d1ed4148e31c","slug":"25-JDBC返回自增，批处理","date":"2021-09-13T15:02:32.000Z","updated":"2021-09-15T10:22:44.011Z","comments":true,"path":"api/articles/25-JDBC返回自增，批处理.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"0.0！等待录入！","link":"","photos":[],"count_time":{"symbolsCount":9,"symbolsTime":"1 mins."},"categories":[{"name":"JDBC","slug":"JDBC","count":4,"path":"api/categories/JDBC.json"}],"tags":[{"name":"JDBC","slug":"JDBC","count":4,"path":"api/tags/JDBC.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}