{"title":"SVN","uid":"f2c49803fec94cd24a1c1407e5e84879","slug":"63-Svn","date":"2021-09-13T15:39:32.000Z","updated":"2021-09-15T10:47:00.975Z","comments":true,"path":"api/articles/63-Svn.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog1.jpg","content":"<h4 id=\"1-SVN是什么\"><a href=\"#1-SVN是什么\" class=\"headerlink\" title=\"1. SVN是什么\"></a>1. SVN是什么</h4><p>SVN的全称是subVersion，Svn版本控制软件可以解决协助开发，远程开发，和版本回退三个问题。</p>\n<p>特点：<strong>操作简单，入门简单，跨平台操作。</strong></p>\n<p>SVN是输入 C/S服务类软件，有客户端和服务端。</p>\n<h4 id=\"2-SVN服务端\"><a href=\"#2-SVN服务端\" class=\"headerlink\" title=\"2. SVN服务端\"></a>2. SVN服务端</h4><table>\n<thead>\n<tr>\n<th>重要</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><font color=\"64ccda\">创建服务器项目仓库，复制仓库地址，在本机仓库checkOut（注意地址栏的地址）</font></td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">1. 安装visualSVNserver服务器\n\n2. 看透说不透，打开VisualSVN Server操作面板\n\n3. 点击仓库，右键create new respository，根据提示创建项目\n\n4. 创建完成的最后一步会生成一个服务器项目地址，在网站打开，进入项目点击checkout复制地址\n\n5. 在我们的本机仓库右键checkout，弹出的窗口自动填充了项目库地址和checkout目录，点击确定\n\n6. 若成功，在本机仓库中 出现服务器创建的项目库，文件夹上会有一个绿色对勾，并且文件夹中出现 .svn文件夹\n\n7. &lt;!--注意：可以直接使用网页上的服务器(如SVNBucket)，这样大大方便了我们的操作--&gt;</code></pre>\n\n<h4 id=\"3-SVN客户端\"><a href=\"#3-SVN客户端\" class=\"headerlink\" title=\"3. SVN客户端\"></a>3. SVN客户端</h4><table>\n<thead>\n<tr>\n<th>重要</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><font color=\"64ccda\">从服务器复制项目库地址，在本机仓库进行checkout（检出）</font></td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 安装TortoiseSVN客户端（记得下载汉化包）\n\n2. 安装完成后，在安装目录中创建工作空间\n\n3. 配置完成后，进行第一次牵手（checkout 检出）\n\n4. 检出后，若在工作空间看到检出的服务器项目库，且库中有 .svn文件，则证明成功</code></pre>\n\n<h4 id=\"4-SVN三大指令\"><a href=\"#4-SVN三大指令\" class=\"headerlink\" title=\"4. SVN三大指令\"></a>4. SVN三大指令</h4><table>\n<thead>\n<tr>\n<th>重要</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><font color=\"64ccda\">checkout、update、commit（提交前update是一个好习惯）</font></td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 检出指令（svn checkout）\n   1. 连接到SVN服务器端\n   2. 更新服务器数据到本地\n   3. 注意：checkout 只在第一次连接服务器时操作，后续的项目更新用SVN Update\n   \n2. 提交指令（svn commit）\n   1. 提交本地数据到服务端\n   2. 提交时会显示提交界面，空白部分为备注信息（必填）\n   3. 提交界面的变更列表中，一定要选上准备提交的数据\n   \n3. 更新指令（svn update）\n   1. 在相应项目库中，点击更新按钮即可</code></pre>\n\n<h4 id=\"5-SVN图表集与忽略操作\"><a href=\"#5-SVN图表集与忽略操作\" class=\"headerlink\" title=\"5. SVN图表集与忽略操作\"></a>5. SVN图表集与忽略操作</h4><p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/svn1.png\" alt=\"20190317144934380\"></p>\n<p><font color=\"64ccda\">Svn的忽略功能</font></p>\n<p>意思是解除版本控制，将文件放到一个虚拟的忽略列表中，这样在提交文件的时候，变更列表中不再显示已被忽略的文件</p>\n<h4 id=\"6-版本回退\"><a href=\"#6-版本回退\" class=\"headerlink\" title=\"6. 版本回退\"></a>6. 版本回退</h4><table>\n<thead>\n<tr>\n<th>注意</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><font color=\"64ccda\">请确定你是要 复原到其他版本，还是要复原这个版本做出的修改</font></td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">如果修改了文件后发现错误，想要返回到上一个版本，或者是其他版本，则需要版本回退操作\n\n操作方法：\n\n\t1. 在对应的仓库中，右键 --&gt; 显示日志\n\t\n\t2. 在日志中，单击需要的版本 --&gt; 右键选择  复原此版本 &#x2F;\n\t\n\t3. 或则，点击你提交的版本，复原此版本做出的修改（也可以）\n\t\n\t4. 最后在仓库中，更新提交</code></pre>\n\n<h4 id=\"7-版本冲突\"><a href=\"#7-版本冲突\" class=\"headerlink\" title=\"7. 版本冲突\"></a>7. 版本冲突</h4><p>同时检出了一个版本的文件，一个人提交后，另外一个人在没有更新的情况下就进行提交，会造成版本冲突。</p>\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/svn2.png\" alt=\"image-20200822191940351\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!--解决之道--&gt;：\n\n1. 合理分配项目开发时间\n\n2. 合理分配项目开发模块\n\n3. 通过 svn解决版本冲突\n\n   * 提交前，先更新服务器端的最新数据到本地\n\n   * 会出现整合后的文件，以及其他几个文件（checkout时的文件，别人修改后的文件及文件版本\n     若还有其他冲突，右键修改冲突，出现一个界面\n     界面具有远程文件，我的文件，以及冲突框\n     在冲突框中的冲突行，右键选择用我的还是他人的即可\n\n   * 删除整合以外的文件，修改整合后的冲突文件\n\n   * 重新提交数据到服务端</code></pre>\n\n<h4 id=\"8-分支\"><a href=\"#8-分支\" class=\"headerlink\" title=\"8. 分支\"></a>8. 分支</h4><p><strong>trunk文件夹</strong>: 主干，我们一般把项目提交到此文件夹里面,在trunk中开发。</p>\n<p><strong>branches文件夹</strong>：分支，我们一般把那些需要打分支,但是有可能会修改的项目代码，打分支到此目录。</p>\n<p><strong>tags文件夹</strong>：分支，我们一般把那些阶段性(如迭代各期)的项目代码,打分支到此目录。</p>\n<p>注：需要时,我们可以从SVN上同步分支中的任意时期的项目代码(注：我们当然也可以同步trunk主干下的最新的代码)。</p>\n<p>注：我们也可以<kbd>直接检出</kbd>  <kbd>分支目录</kbd>，这样每次提交或修改，就不会全部文件都要来一遍，使任务变得更加轻松</p>\n<p>​       例如，branches中存储的为 程序的分支——线上版本，那这个版本呢就只做一些线上问题的修复</p>\n","text":"1. SVN是什么SVN的全称是subVersion，Svn版本控制软件可以解决协助开发，远程开发，和版本回退三个问题。 特点：操作简单，入门简单，跨平台操作。 SVN是输入 C/S服务类软件，有客户端和服务端。 2. SVN服务端 重要 创建服务器项目仓库，复制仓库地址，在本机...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Project Manager","slug":"Project-Manager","count":3,"path":"api/categories/Project-Manager.json"}],"tags":[{"name":"Project Manager","slug":"Project-Manager","count":3,"path":"api/tags/Project-Manager.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-SVN%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">1. SVN是什么</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-SVN%E6%9C%8D%E5%8A%A1%E7%AB%AF\"><span class=\"toc-text\">2. SVN服务端</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-SVN%E5%AE%A2%E6%88%B7%E7%AB%AF\"><span class=\"toc-text\">3. SVN客户端</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-SVN%E4%B8%89%E5%A4%A7%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">4. SVN三大指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-SVN%E5%9B%BE%E8%A1%A8%E9%9B%86%E4%B8%8E%E5%BF%BD%E7%95%A5%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">5. SVN图表集与忽略操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\"><span class=\"toc-text\">6. 版本回退</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E7%89%88%E6%9C%AC%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">7. 版本冲突</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E5%88%86%E6%94%AF\"><span class=\"toc-text\">8. 分支</span></a></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx","uid":"af6a277a1f79cc7652a602f9f57ed64f","slug":"64-Nginx","date":"2021-09-13T15:40:32.000Z","updated":"2021-09-15T10:39:17.590Z","comments":true,"path":"api/articles/64-Nginx.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"01、Nginx 的介绍Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器 Nginx 支持热部署，几乎能做到 7*24 小时不间断运行，即使运行几个月也不需要重启，还能在不间断服务的情况下对软件进行热更新。 Nginx 最重要的考量是 性能 ，其占用内存少、并发能力...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/tags/Nginx.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"Git","uid":"221a7ad001c03569112f684b2dfdc120","slug":"62-Git","date":"2021-09-13T15:39:32.000Z","updated":"2021-09-15T10:47:06.475Z","comments":true,"path":"api/articles/62-Git.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog2.jpg","text":"1、版本控制 1.1、什么是版本控制版本控制 (Revision control)：是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。 ① 本地版本控制系统：RCS 记录文件每次的更新，可以对每个版本做...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Project Manager","slug":"Project-Manager","count":3,"path":"api/categories/Project-Manager.json"}],"tags":[{"name":"Project Manager","slug":"Project-Manager","count":3,"path":"api/tags/Project-Manager.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}