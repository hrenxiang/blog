{"title":"Spring 整合","uid":"173956e689406289f575044308a994ef","slug":"60-Spring 整合各个模块","date":"2021-09-13T15:37:32.000Z","updated":"2021-09-15T10:47:26.939Z","comments":true,"path":"api/articles/60-Spring 整合各个模块.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog4.jpg","content":"<h4 id=\"meinian-—-dao\"><a href=\"#meinian-—-dao\" class=\"headerlink\" title=\"meinian — dao\"></a>meinian — dao</h4><p>jdbc.properties</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">jdbc.driverClassName&#x3D;com.mysql.jdbc.Driver\njdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;meinian\njdbc.username&#x3D;root\njdbc.password&#x3D;root\njdbc.initialSize&#x3D;5\njdbc.maxActive&#x3D;10</code></pre>\n\n<p>mybatis-config.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE configuration PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD SQL Map Config 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;\n&lt;!--\n |   plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下:\n |   properties?, settings?,\n |   typeAliases?, typeHandlers?,\n |   objectFactory?,objectWrapperFactory?,\n |   plugins?,\n |   environments?, databaseIdProvider?, mappers?\n |--&gt;\n&lt;configuration&gt;\n    &lt;!--\n     | 全局配置设置（可以在spring中的 sqlSession中使用属性configuration的内部bean配置）\n     |\n     | 可配置选项                   默认值,     描述\n     |\n     | aggressiveLazyLoading       true,     当设置为‘true’的时候，懒加载的对象可能被任何懒属性全部加载。否则，每个属性都按需加载。\n     | multipleResultSetsEnabled   true,     允许和不允许单条语句返回多个数据集（取决于驱动需求）\n     | useColumnLabel              true,     使用列标签代替列名称。不同的驱动器有不同的作法。参考一下驱动器文档，或者用这两个不同的选项进行测试一下。\n     | useGeneratedKeys            false,    允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。\n     | autoMappingBehavior         PARTIAL,  指定MyBatis 是否并且如何来自动映射数据表字段与对象的属性。PARTIAL将只自动映射简单的，没有嵌套的结果。FULL 将自动映射所有复杂的结果。\n     | defaultExecutorType         SIMPLE,   配置和设定执行器，SIMPLE 执行器执行其它语句。REUSE 执行器可能重复使用prepared statements 语句，BATCH执行器可以重复执行语句和批量更新。\n     | defaultStatementTimeout     null,     设置一个时限，以决定让驱动器等待数据库回应的多长时间为超时\n     | mapUnderscoreToCamelCase    true,     开启驼峰命名\n     | logPrefix              com.hrenxiang.dao.      mybatis配置logback\n     | --&gt;\n    &lt;settings&gt;\n        &lt;!-- 这个配置使全局的映射器启用或禁用缓存 --&gt;\n        &lt;!--   &lt;setting name&#x3D;&quot;cacheEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;--&gt;\n        &lt;!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载 分步查询时最好不要开--&gt;\n        &lt;!--   &lt;setting name&#x3D;&quot;lazyLoadingEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;--&gt;\n        &lt;setting name&#x3D;&quot;multipleResultSetsEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;useColumnLabel&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;defaultExecutorType&quot; value&#x3D;&quot;REUSE&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;defaultStatementTimeout&quot; value&#x3D;&quot;25000&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;mapUnderscoreToCamelCase&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;useGeneratedKeys&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;setting name&#x3D;&quot;logPrefix&quot; value&#x3D;&quot;com.hrenxiang.dao.&quot;&#x2F;&gt;\n    &lt;&#x2F;settings&gt;\n\n&lt;&#x2F;configuration&gt;</code></pre>\n\n<p>spring-dao.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xmlns:mybatis&#x3D;&quot;http:&#x2F;&#x2F;mybatis.org&#x2F;schema&#x2F;mybatis-spring&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;util http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;util&#x2F;spring-util.xsd http:&#x2F;&#x2F;mybatis.org&#x2F;schema&#x2F;mybatis-spring http:&#x2F;&#x2F;mybatis.org&#x2F;schema&#x2F;mybatis-spring.xsd&quot;&gt;\n\n    &lt;!-- 引入数据库属性文件 --&gt;\n    &lt;context:property-placeholder location&#x3D;&quot;classpath:jdbc.properties&quot;&#x2F;&gt;\n\n    &lt;!-- 配置数据源 --&gt;\n    &lt;bean name&#x3D;&quot;dataSource&quot; class&#x3D;&quot;com.alibaba.druid.pool.DruidDataSource&quot;&gt;\n        &lt;!-- 连接数据库的驱动，连接字符串，用户名和登录密码--&gt;\n        &lt;property name&#x3D;&quot;driverClassName&quot; value&#x3D;&quot;$&#123;jdbc.driverClassName&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;$&#123;jdbc.url&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;$&#123;jdbc.username&#125;&quot;&#x2F;&gt;\n        &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;$&#123;jdbc.password&#125;&quot;&#x2F;&gt;\n        &lt;!-- 初始化连接大小 --&gt;\n        &lt;property name&#x3D;&quot;initialSize&quot; value&#x3D;&quot;$&#123;jdbc.initialSize&#125;&quot;&#x2F;&gt;\n        &lt;!-- 连接池最大使用连接数量 --&gt;\n        &lt;property name&#x3D;&quot;maxActive&quot; value&#x3D;&quot;$&#123;jdbc.maxActive&#125;&quot;&#x2F;&gt;\n        &lt;!-- 连接池最小空闲 --&gt;\n        &lt;!-- 获取连接最大等待时间 --&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!-- Spring整合Mybatis --&gt;\n    &lt;bean class&#x3D;&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;\n        &lt;!-- 注入连接池 --&gt;\n        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&#x2F;&gt;\n        &lt;!-- 起别名（因为依赖关系，可以直接访问到pojo模块中的包） --&gt;\n        &lt;property name&#x3D;&quot;typeAliasesPackage&quot; value&#x3D;&quot;com.atguigu.pojo&quot;&#x2F;&gt;\n        &lt;!-- 扫描mybatis主配置文件 --&gt;\n        &lt;property name&#x3D;&quot;configLocation&quot; value&#x3D;&quot;classpath:mybatis-config.xml&quot;&#x2F;&gt;\n        &lt;!-- 扫描sql语句配置文件 --&gt;\n        &lt;!--&lt;property name&#x3D;&quot;mapperLocations&quot; value&#x3D;&quot;com.atguigu.mapper&quot;&#x2F;&gt;--&gt;\n        &lt;!-- mybatis插件 --&gt;\n        &lt;property name&#x3D;&quot;plugins&quot;&gt;\n            &lt;array&gt;\n                &lt;bean class&#x3D;&quot;com.github.pagehelper.PageHelper&quot;&gt;\n                    &lt;property name&#x3D;&quot;properties&quot;&gt;\n                        &lt;props&gt;\n                            &lt;!-- 设置 reasonable 为 true 表示将页码进行合理化修正。页码的有效范围：1~总页数 --&gt;\n                            &lt;prop key&#x3D;&quot;reasonable&quot;&gt;true&lt;&#x2F;prop&gt;\n\n                            &lt;!-- 数据库方言：同样都是 SQL 语句，拿到不同数据库中，在语法上会有差异 --&gt;\n                            &lt;!-- 默认情况下，按照 MySQL 作为数据库方言来运行 --&gt;\n                            &lt;prop key&#x3D;&quot;helperDialect&quot;&gt;mysql&lt;&#x2F;prop&gt;\n                        &lt;&#x2F;props&gt;\n                    &lt;&#x2F;property&gt;\n                &lt;&#x2F;bean&gt;\n            &lt;&#x2F;array&gt;\n        &lt;&#x2F;property&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!-- MyBatis 动态扫描  --&gt;\n    &lt;!-- Mapper接口MapperScannerConfigurer 为指定包下的Mapper接口批量生成代理实现类.bean的默认id是接口名首字母小写 --&gt;\n    &lt;!--&lt;bean id&#x3D;&quot;mapperScannerConfigurer&quot; class&#x3D;&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;\n        &lt;property name&#x3D;&quot;basePackage&quot; value&#x3D;&quot;com.atguigu.mapper&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;--&gt;\n    &lt;mybatis:scan base-package&#x3D;&quot;com.atguigu.mapper&quot; &#x2F;&gt;\n\n&lt;&#x2F;beans&gt;</code></pre>\n\n\n\n\n\n<h4 id=\"meinian-—-service\"><a href=\"#meinian-—-service\" class=\"headerlink\" title=\"meinian  —  service\"></a>meinian  —  service</h4><p>log4j.properties</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">### direct log messages to stdout ###\nlog4j.appender.stdout&#x3D;org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target&#x3D;System.err\nlog4j.appender.stdout.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### direct messages to file mylog.log ###\nlog4j.appender.file&#x3D;org.apache.log4j.FileAppender\nlog4j.appender.file.File&#x3D;c:\\\\mylog.log\nlog4j.appender.file.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### set log levels - for more verbose logging change &#39;info&#39; to &#39;debug&#39; ###\n\nlog4j.rootLogger&#x3D;debug, stdout</code></pre>\n\n<p>spring-redis.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans\n                         http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;\n\n    &lt;!--Jedis连接池的相关配置--&gt;\n    &lt;bean id&#x3D;&quot;jedisPoolConfig&quot; class&#x3D;&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;\n        &lt;!--最大连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxTotal&quot; value&#x3D;&quot;300&quot;&#x2F;&gt;\n        &lt;!--最大空闲连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxIdle&quot; value&#x3D;&quot;100&quot;&#x2F;&gt;\n        &lt;!--允许借调 在获取连接的时候检查有效性, 默认false--&gt;\n        &lt;property name&#x3D;&quot;testOnBorrow&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;!--允许归还 在return给pool时，是否提前进行validate操作--&gt;\n        &lt;property name&#x3D;&quot;testOnReturn&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;bean id&#x3D;&quot;jedisPool&quot; class&#x3D;&quot;redis.clients.jedis.JedisPool&quot;&gt;\n        &lt;constructor-arg name&#x3D;&quot;poolConfig&quot; ref&#x3D;&quot;jedisPoolConfig&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;host&quot; value&#x3D;&quot;127.0.0.1&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;port&quot; value&#x3D;&quot;6379&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;timeout&quot; value&#x3D;&quot;30000&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>spring-tx.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xmlns:tx&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;cache http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;cache&#x2F;spring-cache.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&#x2F;spring-tx.xsd&quot;&gt;\n\n    &lt;!-- 事务管理器  --&gt;\n    &lt;bean id&#x3D;&quot;transactionManager&quot;\n          class&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;\n        &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!--\n        开启事务控制的注解支持\n        注意：此处必须加入proxy-target-class&#x3D;&quot;true&quot;，\n              需要进行事务控制，会由Spring框架产生代理对象，\n              Dubbo需要将Service发布为服务，要求必须使用cglib创建代理对象。\n    --&gt;\n    &lt;tx:annotation-driven transaction-manager&#x3D;&quot;transactionManager&quot; proxy-target-class&#x3D;&quot;true&quot;&#x2F;&gt;\n\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>spring-service.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xmlns:dubbo&#x3D;&quot;http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo&#x2F;dubbo.xsd&quot;&gt;\n    &lt;!-- 指定应用名称 --&gt;\n    &lt;dubbo:application name&#x3D;&quot;meinian_service&quot;&#x2F;&gt;\n    &lt;!--指定服务注册中心地址--&gt;\n    &lt;dubbo:registry address&#x3D;&quot;zookeeper:&#x2F;&#x2F;127.0.0.1:2181&quot;&#x2F;&gt;\n    &lt;!--指定暴露服务的端口，如果不指定默认为20880--&gt;\n    &lt;dubbo:protocol name&#x3D;&quot;dubbo&quot; port&#x3D;&quot;20881&quot;&#x2F;&gt;\n    &lt;!--批量扫描，发布服务--&gt;\n    &lt;dubbo:annotation package&#x3D;&quot;com.atguigu.service&quot;&#x2F;&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>web.xml   ——     这里扫描了前面所有的spring*.xml文件，将之加载到了ioc的父容器中</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;web-app xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot;\n         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_4_0.xsd&quot;\n         version&#x3D;&quot;4.0&quot;&gt;\n\n    &lt;!-- 加载Spring配置文件 --&gt;\n    &lt;context-param&gt;\n        &lt;param-name&gt;contextConfigLocation&lt;&#x2F;param-name&gt;\n        &lt;param-value&gt;classpath*:spring*.xml&lt;&#x2F;param-value&gt;\n    &lt;&#x2F;context-param&gt;\n\n    &lt;!-- Spring监听器 读取文件创建容器，并把容器放入servletContext作用域中--&gt;\n    &lt;listener&gt;\n        &lt;description&gt;spring 监听器&lt;&#x2F;description&gt;\n        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;&#x2F;listener-class&gt;\n    &lt;&#x2F;listener&gt;\n\n&lt;&#x2F;web-app&gt;</code></pre>\n\n\n\n<h4 id=\"meinian-—-web\"><a href=\"#meinian-—-web\" class=\"headerlink\" title=\"meinian  —  web\"></a>meinian  —  web</h4><p>log4j.properties</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">### direct log messages to stdout ###\nlog4j.appender.stdout&#x3D;org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target&#x3D;System.err\nlog4j.appender.stdout.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### direct messages to file mylog.log ###\nlog4j.appender.file&#x3D;org.apache.log4j.FileAppender\nlog4j.appender.file.File&#x3D;c:\\\\mylog.log\nlog4j.appender.file.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### set log levels - for more verbose logging change &#39;info&#39; to &#39;debug&#39; ###\n\nlog4j.rootLogger&#x3D;debug, stdout</code></pre>\n\n<p>spring-redis.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans\n                           http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;\n    &lt;!--Jedis连接池的相关配置--&gt;\n    &lt;bean id&#x3D;&quot;jedisPoolConfig&quot; class&#x3D;&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;\n        &lt;!--最大连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxTotal&quot; value&#x3D;&quot;300&quot;&#x2F;&gt;\n        &lt;!--最大空闲连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxIdle&quot; value&#x3D;&quot;100&quot;&#x2F;&gt;\n        &lt;!--允许借调 在获取连接的时候检查有效性, 默认false--&gt;\n        &lt;property name&#x3D;&quot;testOnBorrow&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;!--允许归还 在return给pool时，是否提前进行validate操作--&gt;\n        &lt;property name&#x3D;&quot;testOnReturn&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;bean id&#x3D;&quot;jedisPool&quot; class&#x3D;&quot;redis.clients.jedis.JedisPool&quot;&gt;\n        &lt;constructor-arg name&#x3D;&quot;poolConfig&quot; ref&#x3D;&quot;jedisPoolConfig&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;host&quot; value&#x3D;&quot;127.0.0.1&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;port&quot; value&#x3D;&quot;6379&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;timeout&quot; value&#x3D;&quot;30000&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n<p>spring-security.xml    ——-   需要定义SecurityUserServiceImpl认证提供者，实现UserDetailService</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xmlns:security&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;security&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;security http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;security&#x2F;spring-security.xsd&quot;&gt;\n\n    &lt;!--开启注解扫描 dubbo已经扫描，如果dubbo中不扫描此包，那么引用将不可用--&gt;\n    &lt;!--&lt;context:component-scan base-package&#x3D;&quot;com.atguigu.security&quot;&#x2F;&gt;--&gt;\n    &lt;!--开启注解方式权限控制--&gt;\n    &lt;security:global-method-security pre-post-annotations&#x3D;&quot;enabled&quot;&#x2F;&gt;\n\n    &lt;!--开启匿名访问的资源--&gt;\n    &lt;security:http security&#x3D;&quot;none&quot; pattern&#x3D;&quot;&#x2F;css&#x2F;**&quot;&#x2F;&gt;\n    &lt;security:http security&#x3D;&quot;none&quot; pattern&#x3D;&quot;&#x2F;img&#x2F;**&quot;&#x2F;&gt;\n    &lt;security:http security&#x3D;&quot;none&quot; pattern&#x3D;&quot;&#x2F;js&#x2F;**&quot;&#x2F;&gt;\n    &lt;security:http security&#x3D;&quot;none&quot; pattern&#x3D;&quot;&#x2F;plugins&#x2F;**&quot;&#x2F;&gt;\n    &lt;security:http security&#x3D;&quot;none&quot; pattern&#x3D;&quot;&#x2F;login.html&quot;&#x2F;&gt;\n\n    &lt;security:http auto-config&#x3D;&quot;true&quot; use-expressions&#x3D;&quot;true&quot;&gt;\n        &lt;security:intercept-url access&#x3D;&quot;isAuthenticated()&quot; pattern&#x3D;&quot;&#x2F;pages&#x2F;**&quot;&#x2F;&gt;\n        &lt;!--\n            form-login：定义表单登录信息\n            login-page&#x3D;&quot;&#x2F;login.html&quot;：表示指定登录页面\n            username-parameter&#x3D;&quot;username&quot;：使用登录名的名称，默认值是username\n            password-parameter&#x3D;&quot;password&quot;：使用登录名的密码，默认值是password\n            login-processing-url&#x3D;&quot;&#x2F;login.do&quot;：表示登录的url地址\n            default-target-url&#x3D;&quot;&#x2F;index.html&quot;：登录成功后的url地址\n            authentication-failure-url&#x3D;&quot;&#x2F;login.html&quot;：认证失败后跳转的url地址，失败后指定&#x2F;login.html\n            always-use-default-target&#x3D;&quot;true&quot;：登录成功后，始终跳转到default-target-url指定的地址，即登录成功的默认地址\n            --&gt;\n        &lt;security:form-login login-page&#x3D;&quot;&#x2F;login.html&quot;\n                             login-processing-url&#x3D;&quot;&#x2F;login.do&quot;\n                             username-parameter&#x3D;&quot;username&quot;\n                             password-parameter&#x3D;&quot;password&quot;\n                             default-target-url&#x3D;&quot;&#x2F;pages&#x2F;main.html&quot;\n                             authentication-failure-url&#x3D;&quot;&#x2F;login.html&quot;\n                             always-use-default-target&#x3D;&quot;true&quot;\n        &#x2F;&gt;\n        &lt;!--禁用CsrfFilter过滤器--&gt;\n        &lt;security:csrf disabled&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;!--登出--&gt;\n        &lt;security:logout logout-url&#x3D;&quot;&#x2F;logout.do&quot; invalidate-session&#x3D;&quot;true&quot; logout-success-url&#x3D;&quot;&#x2F;login.html&quot;&#x2F;&gt;\n\n        &lt;security:headers&gt;\n            &lt;!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问--&gt;\n            &lt;security:frame-options policy&#x3D;&quot;SAMEORIGIN&quot;&#x2F;&gt;\n        &lt;&#x2F;security:headers&gt;\n\n        &lt;security:access-denied-handler ref&#x3D;&quot;customAccessDeniedController&quot;&#x2F;&gt;\n    &lt;&#x2F;security:http&gt;\n\n    &lt;!--认证管理：定义登录账号名和密码，并授予访问的角色、权限--&gt;\n    &lt;security:authentication-manager&gt;\n        &lt;!--authentication-provider：认证提供者，执行具体的认证逻辑--&gt;\n        &lt;security:authentication-provider user-service-ref&#x3D;&quot;securityUserServiceImpl&quot;&gt;\n            &lt;!--指定密码加密策略--&gt;\n            &lt;security:password-encoder ref&#x3D;&quot;passwordEncoder&quot;&#x2F;&gt;\n        &lt;&#x2F;security:authentication-provider&gt;\n    &lt;&#x2F;security:authentication-manager&gt;\n\n    &lt;!--配置密码加密对象--&gt;\n    &lt;bean id&#x3D;&quot;passwordEncoder&quot;\n          class&#x3D;&quot;org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder&quot; &#x2F;&gt;\n\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>spring-mvc.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xmlns:dubbo&#x3D;&quot;http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo&quot; xmlns:mvc&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo http:&#x2F;&#x2F;code.alibabatech.com&#x2F;schema&#x2F;dubbo&#x2F;dubbo.xsd http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&#x2F;spring-mvc.xsd&quot;&gt;\n\n    &lt;mvc:annotation-driven&gt;\n        &lt;!-- register-defaults&#x3D;&quot;true&quot;将我们配置文件创建的bean设置为默认的,springmvc就不会再后台创建了 --&gt;\n        &lt;!-- 属性解释:\n            1.register-defaults&#x3D;true:告诉Springmvc使用我们配置文件创建的对象,不再自己创建(框架自己创建,是通过无参构造,会使用默认的字符集)\n         --&gt;\n        &lt;mvc:message-converters register-defaults&#x3D;&quot;true&quot;&gt;\n            &lt;!--项目使用vue.js中的axios异步访问数据，传递json数据，响应json数据--&gt;\n            &lt;!--不需要视图解析器，项目中的所有的请求都返回json数据结构--&gt;\n            &lt;bean class&#x3D;&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;&gt;\n                &lt;property name&#x3D;&quot;supportedMediaTypes&quot; value&#x3D;&quot;application&#x2F;json&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;features&quot;&gt;\n                    &lt;list&gt;\n                        &lt;!--Map类型格式化，接收参数允许空值--&gt;\n                        &lt;value&gt;WriteMapNullValue&lt;&#x2F;value&gt;\n                        &lt;!--日期类型格式化--&gt;\n                        &lt;value&gt;WriteDateUseDateFormat&lt;&#x2F;value&gt;\n                    &lt;&#x2F;list&gt;\n                &lt;&#x2F;property&gt;\n            &lt;&#x2F;bean&gt;\n        &lt;&#x2F;mvc:message-converters&gt;\n    &lt;&#x2F;mvc:annotation-driven&gt;\n\n    &lt;!-- 指定应用名称 --&gt;\n    &lt;dubbo:application name&#x3D;&quot;meinian_web&quot;&#x2F;&gt;\n    &lt;!--指定服务注册中心地址--&gt;\n    &lt;dubbo:registry address&#x3D;&quot;zookeeper:&#x2F;&#x2F;127.0.0.1:2181&quot;&#x2F;&gt;\n    &lt;!--批量扫描--&gt;\n    &lt;dubbo:annotation package&#x3D;&quot;com.atguigu&quot;&#x2F;&gt;\n\n    &lt;!--\n        超时全局设置 10分钟\n        check&#x3D;false 不检查服务提供方，开发阶段建议设置为false\n        check&#x3D;true 启动时检查服务提供方，如果服务提供方没有启动则报错\n    --&gt;\n    &lt;dubbo:consumer timeout&#x3D;&quot;600000&quot; check&#x3D;&quot;false&quot;&#x2F;&gt;\n\n    &lt;!--文件上传组件--&gt;\n    &lt;bean id&#x3D;&quot;multipartResolver&quot;\n          class&#x3D;&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&gt;\n        &lt;!-- 设定文件上传的最大值为100MB，100*1024*1024 --&gt;\n        &lt;property name&#x3D;&quot;maxUploadSize&quot; value&#x3D;&quot;104857600&quot;&#x2F;&gt;\n        &lt;!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 --&gt;\n        &lt;property name&#x3D;&quot;maxInMemorySize&quot; value&#x3D;&quot;4096&quot;&#x2F;&gt;\n        &lt;!-- 设定默认编码 --&gt;\n        &lt;property name&#x3D;&quot;defaultEncoding&quot; value&#x3D;&quot;UTF-8&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n\n    &lt;!-- 导入spring整合的redis的配置 --&gt;\n    &lt;import resource&#x3D;&quot;spring-redis.xml&quot;&#x2F;&gt;\n    &lt;!--导入spring security 权限框架--&gt;\n    &lt;import resource&#x3D;&quot;spring-security.xml&quot;&#x2F;&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>web.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;web-app xmlns&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&quot;\n         xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n         xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee http:&#x2F;&#x2F;xmlns.jcp.org&#x2F;xml&#x2F;ns&#x2F;javaee&#x2F;web-app_4_0.xsd&quot;\n         version&#x3D;&quot;4.0&quot;&gt;\n    \n    &lt;!--设置同一编码--&gt;\n    &lt;filter&gt;\n        &lt;filter-name&gt;CharacterEncodingFilter&lt;&#x2F;filter-name&gt;\n        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;&#x2F;filter-class&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;encoding&lt;&#x2F;param-name&gt;\n            &lt;param-value&gt;UTF-8&lt;&#x2F;param-value&gt;\n        &lt;&#x2F;init-param&gt;\n        &lt;!--解决请求乱码--&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;forceRequestEncoding&lt;&#x2F;param-name&gt;\n            &lt;param-value&gt;true&lt;&#x2F;param-value&gt;\n        &lt;&#x2F;init-param&gt;\n        &lt;!--解决响应乱码--&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;forceResponseEncoding&lt;&#x2F;param-name&gt;\n            &lt;param-value&gt;true&lt;&#x2F;param-value&gt;\n        &lt;&#x2F;init-param&gt;\n    &lt;&#x2F;filter&gt;\n    &lt;filter-mapping&gt;\n        &lt;filter-name&gt;CharacterEncodingFilter&lt;&#x2F;filter-name&gt;\n        &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;\n    &lt;&#x2F;filter-mapping&gt;\n\n    &lt;!--将 POST 请求，转化为PUT DELETE 请求 （写在编码过滤器后，否则会出现乱码）--&gt;\n    &lt;filter&gt;\n        &lt;filter-name&gt;HiddenHttpMethodFilter&lt;&#x2F;filter-name&gt;\n        &lt;filter-class&gt;org.springframework.web.filter.HiddenHttpMethodFilter&lt;&#x2F;filter-class&gt;\n    &lt;&#x2F;filter&gt;\n    &lt;filter-mapping&gt;\n        &lt;filter-name&gt;HiddenHttpMethodFilter&lt;&#x2F;filter-name&gt;\n        &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;\n    &lt;&#x2F;filter-mapping&gt;\n\n    &lt;!--spring security权限框架代理处理器，里面有12个基本的处理器--&gt;\n    &lt;filter&gt;\n        &lt;filter-name&gt;springSecurityFilterChain&lt;&#x2F;filter-name&gt;\n        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;&#x2F;filter-class&gt;\n    &lt;&#x2F;filter&gt;\n    &lt;filter-mapping&gt;\n        &lt;filter-name&gt;springSecurityFilterChain&lt;&#x2F;filter-name&gt;\n        &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;\n    &lt;&#x2F;filter-mapping&gt;\n\n    &lt;!-- 配置SpringMVC中负责处理请求的核心Servlet，也被称为SpringMVC的前端控制器 --&gt;\n    &lt;servlet&gt;\n        &lt;servlet-name&gt;DispatcherServlet&lt;&#x2F;servlet-name&gt;\n\n        &lt;!-- DispatcherServlet的全类名 --&gt;\n        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;&#x2F;servlet-class&gt;\n\n        &lt;!-- 通过初始化参数指定SpringMVC配置文件位置 --&gt;\n        &lt;init-param&gt;\n            &lt;!-- 如果不记得contextConfigLocation配置项的名称，可以到DispatcherServlet的父类FrameworkServlet中查找 --&gt;\n            &lt;param-name&gt;contextConfigLocation&lt;&#x2F;param-name&gt;\n\n            &lt;!-- 使用classpath:说明这个路径从类路径的根目录开始才查找 --&gt;\n            &lt;param-value&gt;classpath:spring-mvc.xml&lt;&#x2F;param-value&gt;\n        &lt;&#x2F;init-param&gt;\n\n        &lt;!-- 作为框架的核心组件，在启动过程中有大量的初始化操作要做，这些操作放在第一次请求时才执行非常不恰当 --&gt;\n        &lt;!-- 我们应该将DispatcherServlet设置为随Web应用一起启动 --&gt;\n        &lt;load-on-startup&gt;1&lt;&#x2F;load-on-startup&gt;\n    &lt;&#x2F;servlet&gt;\n\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;DispatcherServlet&lt;&#x2F;servlet-name&gt;\n\n        &lt;!-- 对DispatcherServlet来说，url-pattern有两种方式配置 --&gt;\n        &lt;!-- 方式一：配置“&#x2F;”，表示匹配整个Web应用范围内所有请求。这里有一个硬性规定：不能写成“&#x2F;*”。只有这一个地方有这个特殊要求，以后我们再配置Filter还是可以正常写“&#x2F;*”。 --&gt;\n        &lt;!-- 方式二：配置“*.扩展名”，表示匹配整个Web应用范围内部分请求 --&gt;\n        &lt;url-pattern&gt;*.do&lt;&#x2F;url-pattern&gt;\n    &lt;&#x2F;servlet-mapping&gt;\n\n&lt;&#x2F;web-app&gt;</code></pre>\n\n\n\n<h4 id=\"meinian-—-job\"><a href=\"#meinian-—-job\" class=\"headerlink\" title=\"meinian   —   job\"></a>meinian   —   job</h4><p>log4j.properties</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">### direct log messages to stdout ###\nlog4j.appender.stdout&#x3D;org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target&#x3D;System.err\nlog4j.appender.stdout.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### direct messages to file mylog.log ###\nlog4j.appender.file&#x3D;org.apache.log4j.FileAppender\nlog4j.appender.file.File&#x3D;c:\\\\mylog.log\nlog4j.appender.file.layout&#x3D;org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern&#x3D;%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n\n\n### set log levels - for more verbose logging change &#39;info&#39; to &#39;debug&#39; ###\n\nlog4j.rootLogger&#x3D;debug, stdout</code></pre>\n\n<p>spring-redis.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans\n                           http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd&quot;&gt;\n    &lt;!--Jedis连接池的相关配置--&gt;\n    &lt;bean id&#x3D;&quot;jedisPoolConfig&quot; class&#x3D;&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;\n        &lt;!--最大连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxTotal&quot; value&#x3D;&quot;300&quot;&#x2F;&gt;\n        &lt;!--最大空闲连接数, 默认8个--&gt;\n        &lt;property name&#x3D;&quot;maxIdle&quot; value&#x3D;&quot;100&quot;&#x2F;&gt;\n        &lt;!--允许借调 在获取连接的时候检查有效性, 默认false--&gt;\n        &lt;property name&#x3D;&quot;testOnBorrow&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n        &lt;!--允许归还 在return给pool时，是否提前进行validate操作--&gt;\n        &lt;property name&#x3D;&quot;testOnReturn&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;bean id&#x3D;&quot;jedisPool&quot; class&#x3D;&quot;redis.clients.jedis.JedisPool&quot;&gt;\n        &lt;constructor-arg name&#x3D;&quot;poolConfig&quot; ref&#x3D;&quot;jedisPoolConfig&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;host&quot; value&#x3D;&quot;127.0.0.1&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;port&quot; value&#x3D;&quot;6379&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n        &lt;constructor-arg name&#x3D;&quot;timeout&quot; value&#x3D;&quot;30000&quot; type&#x3D;&quot;int&quot; &#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n<p>spring-quartz.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans\n                  http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd\n                  http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context\n                  http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd&quot;&gt;\n\n    &lt;context:component-scan base-package&#x3D;&quot;com.atguigu&quot;&#x2F;&gt;\n\n    &lt;!-- 注册自定义Job --&gt;\n    &lt;bean id&#x3D;&quot;QiNiuJob&quot; class&#x3D;&quot;com.atguigu.QiNiuJob&quot;&#x2F;&gt;\n    &lt;!-- 1：创建JobDetail对象,作用是负责通过反射调用指定的Job，注入目标对象，注入目标方法 --&gt;\n    &lt;bean id&#x3D;&quot;jobDetail&quot; class&#x3D;&quot;org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean&quot;&gt;\n        &lt;!-- 注入目标对象 --&gt;\n        &lt;property name&#x3D;&quot;targetObject&quot; ref&#x3D;&quot;QiNiuJob&quot;&#x2F;&gt;\n        &lt;!-- 注入目标方法 --&gt;\n        &lt;property name&#x3D;&quot;targetMethod&quot; value&#x3D;&quot;run&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;!-- 2：注册一个触发器，指定任务触发的时间 --&gt;\n    &lt;bean id&#x3D;&quot;myTrigger&quot; class&#x3D;&quot;org.springframework.scheduling.quartz.CronTriggerFactoryBean&quot;&gt;\n        &lt;!-- 注入JobDetail --&gt;\n        &lt;property name&#x3D;&quot;jobDetail&quot; ref&#x3D;&quot;jobDetail&quot;&#x2F;&gt;\n        &lt;!-- 指定触发的时间，基于Cron表达式（0&#x2F;10表示从0秒开始，每10秒执行一次） --&gt;\n        &lt;property name&#x3D;&quot;cronExpression&quot;&gt;\n            &lt;value&gt;0&#x2F;10 * * * * ?&lt;&#x2F;value&gt;\n        &lt;&#x2F;property&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;!-- 3：注册一个统一的调度工厂，通过这个调度工厂调度任务 --&gt;\n    &lt;bean id&#x3D;&quot;scheduler&quot; class&#x3D;&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;&gt;\n        &lt;!-- 注入多个触发器 --&gt;\n        &lt;property name&#x3D;&quot;triggers&quot;&gt;\n            &lt;list&gt;\n                &lt;ref bean&#x3D;&quot;myTrigger&quot;&#x2F;&gt;\n            &lt;&#x2F;list&gt;\n        &lt;&#x2F;property&gt;\n    &lt;&#x2F;bean&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n","text":"meinian — daojdbc.properties jdbc.driverClassName&#x3D;com.mysql.jdbc.Driver jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;meinia...","link":"","photos":[],"count_time":{"symbolsCount":"34k","symbolsTime":"31 mins."},"categories":[{"name":"Spring","slug":"Spring","count":6,"path":"api/categories/Spring.json"}],"tags":[{"name":"Spring","slug":"Spring","count":6,"path":"api/tags/Spring.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#meinian-%E2%80%94-dao\"><span class=\"toc-text\">meinian — dao</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#meinian-%E2%80%94-service\"><span class=\"toc-text\">meinian  —  service</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#meinian-%E2%80%94-web\"><span class=\"toc-text\">meinian  —  web</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#meinian-%E2%80%94-job\"><span class=\"toc-text\">meinian   —   job</span></a></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Spring项目（1）","uid":"a35ab763af39963a3c8e8b221affe22c","slug":"61-美年旅游易错点（未完）","date":"2021-09-13T15:38:32.000Z","updated":"2021-09-15T10:47:10.962Z","comments":true,"path":"api/articles/61-美年旅游易错点（未完）.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog3.jpg","text":":one: spring整合mybatis时如果只使用&lt;mybatis:scan base-package=&quot;&quot;/&gt;时，mapper（dao）接口的 路径名 及 接口名 都要（必须）与mapper映射文件的 路径名 及 接口名 一样 如果在整合的b...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Project","slug":"Project","count":1,"path":"api/categories/Project.json"}],"tags":[{"name":"Project","slug":"Project","count":1,"path":"api/tags/Project.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"SpringSecurity 源码剖析","uid":"29737e157e321f39ed60992860349925","slug":"59-Spring Security-源码剖析","date":"2021-09-13T15:36:32.000Z","updated":"2021-09-15T10:47:39.755Z","comments":true,"path":"api/articles/59-Spring Security-源码剖析.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog5.jpg","text":"我们在 spring_security.xml 中配置过后，为什么权限框架就能做到这些权限管理的事情呢，背后的执行流程到底又是什么呢？ ==Spring Security Filter 并不是直接嵌入到 Web Filter 中的，而是通过 FilterChainProxy 来统...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"Spring","slug":"Spring","count":6,"path":"api/categories/Spring.json"}],"tags":[{"name":"Spring","slug":"Spring","count":6,"path":"api/tags/Spring.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}