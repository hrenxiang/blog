{"title":"Mysql 基础语句","uid":"68a57833ae44293764c3ebaf716fccf1","slug":"19-MySql基础语句","date":"2021-09-13T14:54:32.000Z","updated":"2021-09-15T10:18:45.633Z","comments":true,"path":"api/articles/19-MySql基础语句.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","content":"<h3 id=\"一、数据库的操作\"><a href=\"#一、数据库的操作\" class=\"headerlink\" title=\"一、数据库的操作\"></a>一、数据库的操作</h3><h4 id=\"1、创建数据库\"><a href=\"#1、创建数据库\" class=\"headerlink\" title=\"1、创建数据库\"></a>1、创建数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">普通创建\ncreate database db_sql；\n\n带字符集创建\ncreate database db_sql  character set utf8；\t\t\t\t\t\t\t</code></pre>\n\n<h4 id=\"2、查询数据库\"><a href=\"#2、查询数据库\" class=\"headerlink\" title=\"2、查询数据库\"></a>2、查询数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">查看数据库字符编码\nshow variables like &#39;%character%&#39;\n\n查看所有数据库\nshow  databases;\n\n查看指定数据库\nshow create database db_sql；\n\n查看当前使用的数据库\nselect database();</code></pre>\n\n<h4 id=\"3、删除数据库\"><a href=\"#3、删除数据库\" class=\"headerlink\" title=\"3、删除数据库\"></a>3、删除数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop database db_sql；</code></pre>\n\n<h4 id=\"4、使用数据库\"><a href=\"#4、使用数据库\" class=\"headerlink\" title=\"4、使用数据库\"></a>4、使用数据库</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">use 数据库名;</code></pre>\n\n\n\n<h3 id=\"二、表的操作\"><a href=\"#二、表的操作\" class=\"headerlink\" title=\"二、表的操作\"></a>二、表的操作</h3><h4 id=\"1、新建表\"><a href=\"#1、新建表\" class=\"headerlink\" title=\"1、新建表\"></a>1、新建表</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create table [数据名.]表名(\n\t字段名1 数据类型,\n\t字段名2 数据类型,\n\t....\n) charset utf8;</code></pre>\n\n<h4 id=\"2、查看表\"><a href=\"#2、查看表\" class=\"headerlink\" title=\"2、查看表\"></a>2、查看表</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">查看一个数据库的所有表\nshow  tables;\n\n如果要查询的不是当前数据库下所有表，那么我们可以指定数据库名\nshow tables from 数据库名;\n\n查看所有字段的设置值\ndescribe  表名;  &#x2F;&#x2F;  desc  表名;\n\n查看指定表的所有设置\nshow  create  table  表名；</code></pre>\n\n<h4 id=\"3、删除表\"><a href=\"#3、删除表\" class=\"headerlink\" title=\"3、删除表\"></a>3、删除表</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">drop table 表名;</code></pre>\n\n<h4 id=\"4、修改表结构\"><a href=\"#4、修改表结构\" class=\"headerlink\" title=\"4、修改表结构\"></a>4、修改表结构</h4><h5 id=\"1、增加一列\"><a href=\"#1、增加一列\" class=\"headerlink\" title=\"1、增加一列\"></a>1、增加一列</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">alter table [数据库名.]表名称 add [column] 字段名 数据类型 [约束];\nalter table [数据库名.]表名称 add [column] 字段名 数据类型 first;\nalter table [数据库名.]表名称 add [column] 字段名 数据类型 after 另一个字段;</code></pre>\n\n<h5 id=\"2、修改一列\"><a href=\"#2、修改一列\" class=\"headerlink\" title=\"2、修改一列\"></a>2、修改一列</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"># 修改列数据类型\nalter table [数据库名.]表名称 modify [column] 字段名 新数据类型 [约束];\n# 修改列名\nalter table [数据库名.]表名称 change [column] 旧字段名 新字段名 新数据类型 [约束];\n# 修改列的位置\nalter table [数据库名.]表名称 modify [column] 字段名 数据类型 first;\nalter table [数据库名.]表名称 modify [column] 字段名 数据类型 after 另一个字段;\n\nmodify： &#x2F;* 改的是内容，不能更改列名 *&#x2F;\nchange：&#x2F;* 啥都能改 *&#x2F; </code></pre>\n\n<h5 id=\"3、删除列\"><a href=\"#3、删除列\" class=\"headerlink\" title=\"3、删除列\"></a>3、删除列</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">alter table [数据库名.]表名称 drop [column] 字段名 [约束];</code></pre>\n\n<h5 id=\"4、修改表名称\"><a href=\"#4、修改表名称\" class=\"headerlink\" title=\"4、修改表名称\"></a>4、修改表名称</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">alter table 旧表名 rename 新表名;\nrename table 旧表名 to 新表名;</code></pre>\n\n<h5 id=\"5、修改字段默认值\"><a href=\"#5、修改字段默认值\" class=\"headerlink\" title=\"5、修改字段默认值\"></a>5、修改字段默认值</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">alter  table  表名  alter  字段  set  default  要设置的值;</code></pre>\n\n<h5 id=\"6、修表字符集\"><a href=\"#6、修表字符集\" class=\"headerlink\" title=\"6、修表字符集\"></a>6、修表字符集</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">alter  table  表名  alter  character  set  要设置的字符集;</code></pre>\n\n<h3 id=\"三、数据类型\"><a href=\"#三、数据类型\" class=\"headerlink\" title=\"三、数据类型\"></a>三、数据类型</h3><h4 id=\"1、数值类型\"><a href=\"#1、数值类型\" class=\"headerlink\" title=\"1、数值类型\"></a>1、数值类型</h4><ul>\n<li>整型系列：xxxInt</li>\n<li>浮点型系列：float,double(或real)</li>\n<li>位类型：bit</li>\n</ul>\n<h4 id=\"2、日期时间类型\"><a href=\"#2、日期时间类型\" class=\"headerlink\" title=\"2、日期时间类型\"></a>2、日期时间类型</h4><ul>\n<li>date  </li>\n<li>time</li>\n<li>datetime</li>\n<li>timestamp</li>\n<li>year   184.92</li>\n</ul>\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/mysql-date.png\" alt=\"img\"></p>\n<h4 id=\"3、字符串类型\"><a href=\"#3、字符串类型\" class=\"headerlink\" title=\"3、字符串类型\"></a>3、字符串类型</h4><ul>\n<li>char , varchar , xxtext</li>\n<li>binary , varbinary , xxblob</li>\n<li>enum , set</li>\n</ul>\n<p><img src=\"https://gitee.com/xiuxiuai/picture/raw/master/img/mysql%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png\" alt=\"image-20210506205552687\"></p>\n<h3 id=\"四、缩写定义\"><a href=\"#四、缩写定义\" class=\"headerlink\" title=\"四、缩写定义\"></a>四、缩写定义</h3><h4 id=\"1、DBS\"><a href=\"#1、DBS\" class=\"headerlink\" title=\"1、DBS\"></a>1、DBS</h4><ul>\n<li>数据库系统（Database System）</li>\n<li>整体数据的结构化是数据库的主要特征之一</li>\n<li>数据的共享性高，冗余度低，易扩充，数据的独立性高</li>\n<li>数据由DBMS统一管理和控制</li>\n</ul>\n<h4 id=\"2、DBMS\"><a href=\"#2、DBMS\" class=\"headerlink\" title=\"2、DBMS\"></a>2、DBMS</h4><ul>\n<li>数据库管理系统（Database Manager System）</li>\n<li>是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库</li>\n<li>对<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728\">数据库</a>进行统一的管理和<a href=\"https://baike.baidu.com/item/%E6%8E%A7%E5%88%B6/948689\">控制</a>，以保证数据库的安全性和完整性</li>\n<li>大部分<a href=\"https://baike.baidu.com/item/DBMS\">DBMS</a>提供<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80/104009\">数据定义语言</a><a href=\"https://baike.baidu.com/item/DDL/21997\">DDL</a>（Data Definition Language）和<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E8%A8%80/10826383\">数据操作语言</a><a href=\"https://baike.baidu.com/item/DML\">DML</a>（Data Manipulation Language）</li>\n<li>实现CRUD (增删改查) 操作</li>\n</ul>\n<h4 id=\"3、RDBMS\"><a href=\"#3、RDBMS\" class=\"headerlink\" title=\"3、RDBMS\"></a>3、RDBMS</h4><ul>\n<li>关系型数据库管理系统 （Relational Database Management System）</li>\n<li>将数据<a href=\"https://baike.baidu.com/item/%E7%BB%84%E7%BB%87/10200\">组织</a>为相关的行和列的<a href=\"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F/479832\">系统</a>，而管理关系数据库的计算机软件就是<a href=\"https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB/4546\">关系</a>数据库管理系统</li>\n<li>常用的数据库软件有<a href=\"%5Bhttps://baike.baidu.com/item/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/10991669?fr=aladdin%5D(https://baike.baidu.com/item/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/10991669?fr=aladdin)\">MySql</a>、<a href=\"https://baike.baidu.com/item/Oracle\">Oracle</a>、[SQL Server](<a href=\"https://baike.baidu.com/item/SQL\">https://baike.baidu.com/item/SQL</a> Server)等</li>\n<li>详解：RDBMS 中的数据存储在被称为表（tables）的数据库对象中，表是相关的数据项的集合，它由列和行组成</li>\n</ul>\n<h4 id=\"4、SQL分类\"><a href=\"#4、SQL分类\" class=\"headerlink\" title=\"4、SQL分类\"></a>4、SQL分类</h4><h5 id=\"1、DML\"><a href=\"#1、DML\" class=\"headerlink\" title=\"1、DML\"></a>1、DML</h5><ul>\n<li>数据操作语言（Data Manipulation Language）</li>\n<li>数据的插入，修改，删除 （insert | update | delete）</li>\n</ul>\n<h5 id=\"2、DDL\"><a href=\"#2、DDL\" class=\"headerlink\" title=\"2、DDL\"></a>2、DDL</h5><ul>\n<li>数据定义语言（Data Definition Language）</li>\n<li>牵涉到 <strong>表、视图，触发器，条件约束 和索引</strong>的<strong>定义，删除，修改</strong> </li>\n<li>主要涉及到：create：创建     drop：删除    alter：修改  truncate：清空表中数据</li>\n</ul>\n<h5 id=\"3、DQL\"><a href=\"#3、DQL\" class=\"headerlink\" title=\"3、DQL\"></a>3、DQL</h5><ul>\n<li>数据查询语言 （Data Query Language）</li>\n<li>select | from | where | group by | having | order by</li>\n</ul>\n<h5 id=\"4、DCL\"><a href=\"#4、DCL\" class=\"headerlink\" title=\"4、DCL\"></a>4、DCL</h5><ul>\n<li><p>数据控制语言（Data Control Language）</p>\n</li>\n<li><p>是用来设置或更改数据库用户或角色权限的语句，并控制数据库操纵事务发生的时间及效果，对数据库实行监视等</p>\n</li>\n<li><p>牵涉到： grant：授权 | revoke： 收回权限 | COMMIT： 提交 | savepoint：保存点</p>\n<p>rollback：回滚 | set transaction：设置当前事务的特性，它对后面的事务没影响</p>\n</li>\n</ul>\n<h3 id=\"五、表中数据的操作\"><a href=\"#五、表中数据的操作\" class=\"headerlink\" title=\"五、表中数据的操作\"></a>五、表中数据的操作</h3><h4 id=\"1、插入数据\"><a href=\"#1、插入数据\" class=\"headerlink\" title=\"1、插入数据\"></a>1、插入数据</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">insert into [数据库名.]表名称 values(值列表);\n#要求值列表的顺序、个数、类型，要与表格中的字段的顺序、个数、类型一一匹配\ninsert into [数据库名.]表名称(部分字段列表) values(值列表);\n\ninsert into [数据库名.]表名称 values(值列表1)，(值列表2)...;\n#要求列表的顺序、个数、类型，要与前面的(部分字段列表)的顺序、个数、类型一一匹配\ninsert into [数据库名.]表名称(部分字段列表) values(值列表1)，(值列表2)...;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果添加过主键自增（primary key  auto_increment）第一列在增加数据的时候，</p>\n<p>可以写为 0 或则  null 这样添加数据可以自增。从而可以添加全部数据。而不用特意规定那几列添加数据。</p></blockquote>\n<h4 id=\"2、修改数据\"><a href=\"#2、修改数据\" class=\"headerlink\" title=\"2、修改数据\"></a>2、修改数据</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">更新单条\nupdate [数据库名.]表名称 set 字段名1 &#x3D; 值1, 字段名2 &#x3D; 值2 。。。 [where 条件];\n\n更新多条数据\n基本：update 表名称 set 列1名称&#x3D;新值1，列2名称&#x3D;新值2  where 更新条件;\n\n批量更新更新 某个字段 的某个字符\n基本：update 表名称 set 列名称&#x3D;replace(列名称,旧值,新值） where  条件;\n范例：mysql&gt; update xs set 性别&#x3D;replace( 性别,1,0 ) where 专业名&#x3D;&#39;计算机&#39;;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果没有加where条件，表示修改所有行，这个字段的值</p></blockquote>\n<h4 id=\"3、删除数据\"><a href=\"#3、删除数据\" class=\"headerlink\" title=\"3、删除数据\"></a>3、删除数据</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">delete from [数据库名.]表名称 [where 条件];</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果没有where条件，表示删除整张表的数据;</p></blockquote>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">truncate [数据库名.]表名称;#删除整张表的数据，还可以使用这个语句，效率更高，但是它不能回滚</code></pre>\n\n<p>删除语句的区别：</p>\n<ul>\n<li>delete是 DML 语句，可以回滚；truncate和drop是 DDL 语句，操作完马上生效，不能回滚</li>\n<li>执行的速度上，drop&gt;truncate&gt;delete</li>\n<li>自增 id 列，delete 后 id 仍然从上次的数开始增加；例如删除id=3后，添加的自增id 从4开始。 但是使用truncate删除之后，id会恢复到初始值。</li>\n<li>对于由 外键 约束引用的表，不能用 truncate table 而应用不带 where 的 delete 语句。</li>\n<li>由于 TRUNCATE TABLE 不记录在日志中，所以它不能激活触发器</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">delete：\n删除 表内数据，一条一条的删除，配合事务，可以回滚(rollback)\n格式为：\ndelete from 表名 where 删除条件;\n\ntruncate：\n只能操作表，删除内容、释放空间但不删除表结构(实际是删除原来的表再重新建立结构一样的新表)\n格式为：\ntruncate table 表名;\n\ndrop\n删除表的结构，删除内容和定义，释放空间。\n删除之后，依赖于该表的存储过程&#x2F;函数将保留,但是变为 invalid 状态.\n格式为：\ndrop  table  表名;</code></pre>\n\n<h4 id=\"4、简单查询数据\"><a href=\"#4、简单查询数据\" class=\"headerlink\" title=\"4、简单查询数据\"></a>4、简单查询数据</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select * from [数据库名.]表名称; #查询整张表的所有数据\n\nselect 字段列表  from [数据库名.]表名称;  #查询部分列表\n\nselect * from [数据库名.]表名称 [where 条件];\n\nselect 字段列表  from [数据库名.]表名称 [where 条件];</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用distinct可以对查询结果进行去重</p>\n<p>范例：select distinct name from user;</p></blockquote>\n<h4 id=\"5、单行函数\"><a href=\"#5、单行函数\" class=\"headerlink\" title=\"5、单行函数\"></a>5、单行函数</h4><h4 id=\"6、分组-聚合-函数\"><a href=\"#6、分组-聚合-函数\" class=\"headerlink\" title=\"6、分组(聚合)函数\"></a>6、分组(聚合)函数</h4><p>概述：分组函数作用于一组数据，并对一组数据返回一个值。</p>\n<p>类型：<strong>AVG()</strong> <strong>SUM()</strong> <strong>MAX()</strong> <strong>MIN()</strong> **COUNT() **</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT AVG(salary), MAX(salary),MIN(salary), SUM(salary)\nFROM   employees\nWHERE  job_id LIKE &#39;%REP%&#39;;</code></pre>\n\n<p><strong>问题：用count(*)，count(1)谁好呢?</strong></p>\n<p>其实，对于myisam引擎的表是没有区别的。这种引擎内部有一计数器在维护着行数。</p>\n<p>Innodb引擎的表用count(*)直接读行数，效率很低，因为innodb真的要去数一遍。</p>\n<h4 id=\"7、group-by\"><a href=\"#7、group-by\" class=\"headerlink\" title=\"7、group by\"></a>7、group by</h4><p>释义：通过 需求的字段 把返回记录 分成多个组，这就是 group by 的字面含义。分完组后，然后用分组函数对每组中<br>的不同字段（一或多条记录）作运算。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT name, COUNT(*) FROM   employee_tbl GROUP BY name;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>明确：WHERE一定放在FROM后面GROUP BY 前面</strong></p></blockquote>\n<h4 id=\"8、having\"><a href=\"#8、having\" class=\"headerlink\" title=\"8、having\"></a>8、having</h4><p>一般与 group by 联用</p>\n<p>释义：在select语句中使用having 子句来指定一组行或聚合的过滤条件。 having 子句通常与 group by子句一起使用，以根据指定的条件过滤分组。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select 专业名,count(*) from xs group by 专业名 having count(*)&gt;10;</code></pre>\n\n<h4 id=\"9、order-by\"><a href=\"#9、order-by\" class=\"headerlink\" title=\"9、order by\"></a>9、order by</h4><p>位置：一般写在最后</p>\n<p>降序：order by 根据谁排序 desc</p>\n<p>升序：order by 根据谁排序 asc </p>\n<p>范例：以cid升序、degree降序查询Score表的所有记录</p>\n<p>注意：不止以一个字段进行排序的，得到的结果首先完全遵循第一个字段排序，后面的排序在第一个字段基础上进行<br>mysql&gt; select *from Score order by cid asc,degree desc;</p>\n<h4 id=\"10、limit\"><a href=\"#10、limit\" class=\"headerlink\" title=\"10、limit\"></a>10、limit</h4><p>limit a,b 分页查询</p>\n<p>limit 开始的索引,每页查询条数 （不包含开始的索引）</p>\n<p><strong>重要公式</strong>： 开始的索引 = （当前页码-1）* 每页显示的条数</p>\n<p>例如百度搜索任意东西，记录有很多，每页是10条，那第5页开始的索引是多少呢？<br>第一页：0  第二页：10 第三页：20  第五页：（5-1）x 10=40</p>\n<h4 id=\"11、七大子句顺序\"><a href=\"#11、七大子句顺序\" class=\"headerlink\" title=\"11、七大子句顺序\"></a>11、七大子句顺序</h4><p>1、from：从哪些表中筛选</p>\n<p>2、on：关联多表查询时，去除笛卡尔积</p>\n<p>3、where：从表中筛选的条件</p>\n<p>4、group by：分组依据</p>\n<p>5、having：在统计结果中再次筛选</p>\n<p>6、order by：排序</p>\n<p>7、limit：分页</p>\n<p>必须按照（1）-（7）的顺序编写子句</p>\n<h4 id=\"12、查询语句补充（也重要）\"><a href=\"#12、查询语句补充（也重要）\" class=\"headerlink\" title=\"12、查询语句补充（也重要）\"></a>12、查询语句补充（也重要）</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">-- where只能查询到表中存在的，group by分组后，会对相同组中的数据做运算，可以查询到表中不存在的\n-- 如果省略 group by子句，则having 子句的行为与where 子句类似\n-- where字句在分组前进行限定，而 having子句在分组后进行限定。\n\n\n-- IN 与 &#x3D; 的异同\n相同点：均在WHERE中使用作为筛选条件之一、均是等于的含义\n不同点：IN可以规定多个值，等于规定一个值\nin 与 &#x3D; 的转换\nselect * from Websites where name in (&#39;Google&#39;,&#39;菜鸟教程&#39;);\n可以转换成 &#x3D; 的表达：\nselect * from Websites where name&#x3D;&#39;Google&#39; or name&#x3D;&#39;菜鸟教程&#39;;\n\n\n-- between...and...\nbetween  a  and  b  (a到b之间，包含a和b)\n\n\n-- where 筛选子句\n释义：用于在初始表中筛选查询。它是一个约束声明，用于约束数据，在返回结果集之前起作用\nselect data(数据)  from  表名  where  条件; （操作符： &#x3D;&#x2F;!&#x3D;&#x2F;&gt;&#x2F;&lt;&#x2F;&gt;&#x3D;&#x2F;&lt;&#x3D;  区分大小写： binary）\n\n-- like 模糊查询\n释义: SQL的模式匹配允许你使用  “_” 匹配任何  单个字符 ，而  “%”  匹配  任意数目字符(包括 0 个字符) \n注意在你使用 SQL 的 like 模式时，你不能使用 &#x3D; 或 ！&#x3D;；而使用 like 或 not like比较操作符。\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n语法：select 字段 from 表名 where 字段名 like ...\n\n&#39;%a&#39;     &#x2F;&#x2F;以a结尾的数据\n&#39;a%&#39;     &#x2F;&#x2F;以a开头的数据\n&#39;%a%&#39;    &#x2F;&#x2F;含有a的数据\n&#39;_a_&#39;    &#x2F;&#x2F;三位且中间字母是a的\n&#39;_a&#39;     &#x2F;&#x2F;两位且结尾字母是a的\n&#39;a_&#39;     &#x2F;&#x2F;两位且开头字母是a的\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n扩展：查询内容包含通配符时,由于通配符的缘故，导致我们查询特殊字符 “%”、“_”、“[” 的语句无法正常实现，而把特殊字符用 “[ ]” 括起便可正常查询\n\n\n-- limit a,b 分页查询\nlimit 开始的索引,每页查询条数 （不包含开始的索引）\n-- 重要公式： 开始的索引 &#x3D; （当前页码-1）* 每页显示的条数\n   例如百度搜索任意东西，记录有很多，每页是10条，那第5页开始的索引是多少呢？\n   第一页：0  第二页：10 第三页：20  第五页：（5-1）x 10&#x3D;40\n                                            \n                                            \n-- case when ... then . else . end\n   select sc.CId,\n\t MAX(sc.score),MIN(sc.score),AVG(sc.score),COUNT(*) as 总计人数,\n\t sum(case when sc.score&gt;&#x3D;60 then 1 else 0 end)&#x2F;count(*) as 及格,\n\t sum(case when sc.score&gt;&#x3D;70 and sc.score&lt;80 then 1 else 0 end) &#x2F;count(*) as 中等,\n\t sum(case when sc.score&gt;&#x3D;80 and sc.score&lt;90 then 1 else 0 end) &#x2F;count(*) as良好,\n\t SUM(case when sc.score&gt;&#x3D;90 then 1 else 0 end)&#x2F;count(*) as 优秀\n\t from sc\n\t GROUP BY sc.cid\n \t order by COUNT(*) desc,sc.CId asc\n   分数在a和b之间 求和加一，否则加0</code></pre>\n\n<h3 id=\"六、关联查询\"><a href=\"#六、关联查询\" class=\"headerlink\" title=\"六、关联查询\"></a>六、关联查询</h3><h4 id=\"1、笛卡尔积现象：\"><a href=\"#1、笛卡尔积现象：\" class=\"headerlink\" title=\"1、笛卡尔积现象：\"></a>1、笛卡尔积现象：</h4><p>当两张表进行连接查询的时候，没有任何条件进行限制，最终的查询结果条数是两张表记录条数的乘积</p>\n<ul>\n<li><p>怎么避免笛卡尔积现象？ </p>\n<p>当然是加条件进行过滤。</p>\n</li>\n<li><p>思考：避免了笛卡尔积现象，会减少记录的匹配次数吗？</p>\n<p>不会，次数还是56次。只不过显示的是有效记录。</p>\n</li>\n</ul>\n<h4 id=\"2、union-操作符\"><a href=\"#2、union-操作符\" class=\"headerlink\" title=\"2、union  操作符\"></a>2、union  操作符</h4><p>连接两个查询语句，把结果组合到一个结果集合中</p>\n<p>union 语句：用于将不同表中相同列中查询的数据展示出来；<strong>（不包括重复数据）</strong></p>\n<p>union all 语句：用于将不同表中相同列中查询的数据展示出来；<strong>（包括重复数据，所有数据）</strong></p>\n<p>使用形式如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select  列名称  from  表名称  union &#x2F; union all   select  列名称  from  表名称 order by 列名称；</code></pre>\n\n<h4 id=\"3、内连接：实现A∩B\"><a href=\"#3、内连接：实现A∩B\" class=\"headerlink\" title=\"3、内连接：实现A∩B\"></a>3、内连接：实现A∩B</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">select 字段列表\nfrom A表 inner join B表\non 关联条件\nwhere 等其他子句;\n\n或\n\nselect 字段列表\nfrom A表 , B表\nwhere 关联条件 and 等其他子句;</code></pre>\n\n<p>代码示例：</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#查询员工的姓名和他所在的部门的名称\n#员工的姓名在t_employee\n#部门的名称在t_department\nSELECT ename &quot;员工的姓名&quot;,dname &quot;部门名称&quot;\nFROM t_employee INNER JOIN t_department\nON t_employee.did &#x3D; t_department.did\n\nSELECT ename &quot;员工的姓名&quot;,dname &quot;部门名称&quot;\nFROM t_employee , t_department\nWHERE t_employee.did &#x3D; t_department.did\n\n#查询薪资高于20000的男员工的姓名和他所在的部门的名称\nSELECT ename &quot;员工的姓名&quot;,dname &quot;部门名称&quot;\nFROM t_employee INNER JOIN t_department\nON t_employee.did &#x3D; t_department.did\nWHERE salary&gt;20000 AND gender &#x3D; &#39;男&#39;</code></pre>\n\n<h4 id=\"4、左外连接\"><a href=\"#4、左外连接\" class=\"headerlink\" title=\"4、左外连接\"></a>4、左外连接</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#实现查询结果是A\nselect 字段列表\nfrom A表 left join B表\non 关联条件\nwhere 等其他子句;\n\n#实现A - A∩B\nselect 字段列表\nfrom A表 left join B表\non 关联条件\nwhere 从表关联字段 is null and 等其他子句;</code></pre>\n\n<p>代码示例：</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#查询所有员工的姓名和他所在的部门的名称\nSELECT ename &quot;员工的姓名&quot;,dname &quot;部门名称&quot;\nFROM t_employee LEFT JOIN t_department\nON t_employee.did &#x3D; t_department.did\n\n\n#查询所有没有部门的员工\nSELECT ename &quot;员工的姓名&quot;,dname &quot;部门名称&quot;\nFROM t_employee LEFT JOIN t_department\nON t_employee.did &#x3D; t_department.did\nWHERE t_employee.did IS NULL</code></pre>\n\n<h4 id=\"5、右外连接\"><a href=\"#5、右外连接\" class=\"headerlink\" title=\"5、右外连接\"></a>5、右外连接</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#实现查询结果是B\nselect 字段列表\nfrom A表 right join B表\non 关联条件\nwhere 等其他子句;\n\n#实现B -  A∩B\nselect 字段列表\nfrom A表 right join B表\non 关联条件\nwhere 从表关联字段 is null and 等其他子句;</code></pre>\n\n<p>代码示例：</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#查询所有部门，以及所有部门下的员工信息\nSELECT * \nFROM t_employee RIGHT JOIN t_department\nON t_employee.did &#x3D; t_department.did\n\n#查询那些没有员工属于它的部门\nSELECT * \nFROM t_employee RIGHT JOIN t_department\nON t_employee.did &#x3D; t_department.did\nWHERE t_employee.did IS NULL</code></pre>\n\n<h4 id=\"6、全连接\"><a href=\"#6、全连接\" class=\"headerlink\" title=\"6、全连接\"></a>6、全连接</h4><p><strong>full join（全员外连接）</strong>：获取 <strong>左右表</strong> 所有记录。                </p>\n<p>select  字段  from 表1  full  join  表2  on   表1.字段=表2.字段;</p>\n<p>注意</p>\n<p>mysql <strong>不支持</strong> full join 用 <strong>左连接 union 右连接代替</strong></p>\n<p>错误范例：select * from person full join card on person.carid=card.cid;</p>\n<p>​                  ERROR 1054 (42S22): Unknown column ‘person.carid’ in ‘on clause’</p>\n<h4 id=\"7、用union代替全外连接\"><a href=\"#7、用union代替全外连接\" class=\"headerlink\" title=\"7、用union代替全外连接\"></a>7、用union代替全外连接</h4><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">#实现查询结果是A∪B\n#用左外的A，union 右外的B\nselect 字段列表\nfrom A表 left join B表\non 关联条件\nwhere 等其他子句\n\nunion \n\nselect 字段列表\nfrom A表 right join B表\non 关联条件\nwhere 等其他子句;\n\n\n\n#实现A∪B -  A∩B  或   (A -  A∩B) ∪ （B - A∩B）\n#使用左外的 (A -  A∩B)  union 右外的（B - A∩B）\nselect 字段列表\nfrom A表 left join B表\non 关联条件\nwhere 从表关联字段 is null and 等其他子句\n\nunion\n\nselect 字段列表\nfrom A表 right join B表\non 关联条件\nwhere 从表关联字段 is null and 等其他子句</code></pre>\n\n<h4 id=\"8、子查询\"><a href=\"#8、子查询\" class=\"headerlink\" title=\"8、子查询\"></a>8、子查询</h4><h5 id=\"1-where型\"><a href=\"#1-where型\" class=\"headerlink\" title=\"1. where型\"></a>1. where型</h5><p>①子查询是单值结果，那么可以对其使用（=，&gt;等比较运算符）</p>\n<p>②子查询是多值结果，那么可对其使用（【not】in(子查询结果)，或 &gt;all(子查询结果)，或&gt;=all(子查询结果)，&lt;all(子查询结果)，&lt;=all（子查询结果)，或 &gt;any(子查询结果)，或&gt;=any(子查询结果)，&lt;any(子查询结果)，&lt;=any（子查询结果)）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">查询全公司最高工资的员工信息\nselect * from 员工表 where 薪资 &#x3D; (select max(薪资) from 员工表);\n\nselect * from 员工表 where 薪资 &gt; all(select salary from 员工表  where 员工姓名 in(...));</code></pre>\n\n<h5 id=\"2-from型\"><a href=\"#2-from型\" class=\"headerlink\" title=\"2. from型\"></a>2. from型</h5><p>子查询的结果是多行多列的结果，类似于一张表格。</p>\n<p>必须给子查询取别名，即临时表名，表的别名不要加“”和空格。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">查询每个部门的编号，名称，平均工资\nselect 部门编号, 部门名称， 平均工资\nfrom 部门表 inner join (select 部门编号，avg(薪资) from 员工表  group by 部门编号) temp\non 部门表.部门编号 &#x3D; temp.部门编号</code></pre>\n\n<h5 id=\"3-exists型\"><a href=\"#3-exists型\" class=\"headerlink\" title=\"3. exists型\"></a>3. exists型</h5><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">查询那些有员工的部门\nselect 部门编号, 部门名称 from 部门表\nwhere exists (select * from 员工表  where 部门表.部门编号 &#x3D; 员工表.部门编号);</code></pre>\n\n<h3 id=\"七、复制表\"><a href=\"#七、复制表\" class=\"headerlink\" title=\"七、复制表\"></a>七、复制表</h3><h4 id=\"1、select-into语句\"><a href=\"#1、select-into语句\" class=\"headerlink\" title=\"1、select   into语句\"></a>1、select   into语句</h4><p>mysql 数据库是不支持 </p>\n<p>将查询出来的数据整理到一张新表中保存，表结构与查询结构一致。用于创建表的备份复件或者用于对记录进行存档。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">语法\nselect  *    into  新表名  from  旧表名；\n\nin  子句 （可用于向另一个数据库中拷贝表）\nselect  *  into  旧表名   in  其他数据库   from   旧表名;</code></pre>\n\n<h4 id=\"2、select-into-select语句\"><a href=\"#2、select-into-select语句\" class=\"headerlink\" title=\"2、select  into  select语句\"></a>2、select  into  select语句</h4><p>为已经存在的表批量添加新数据</p>\n<p>insert into (准备好的表) select *（或者取用自己想要的结构）from 表名 where 各种条件</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">&#x2F;* 两者的主要区别为 *&#x2F;\nselect into from 要求目标表不存在，因为在插入时会自动创建；\ninsert into select from 要求目标表存在。\nselect into from：查询出来结果---&gt;复制一张同结构的空表---&gt;将数据拷贝进去。\ninsert into select from：指定一张想要插入数据的表格---&gt;对数据进行加工筛选---&gt;填入一张准备好的表格。\n\n&#x2F;* mysql数据库 不支持 select into from *&#x2F;\n错误实例:\nmysql&gt; select sname into Student1 from Student;\nERROR 1327 (42000): Undeclared variable: Student1\nmysql&gt; select * into Student1 from Student;\nERROR 1327 (42000): Undeclared variable: Student1\n&#x2F;* 替代方法 create table 目的地表名（select 需求列 from 源表名*&#x2F;\nmysql&gt; create table Student2(select sid,sname from Student);\nQuery OK, 9 rows affected (0.30 sec)\nRecords: 9  Duplicates: 0  Warnings: 0</code></pre>\n\n<h3 id=\"八、语句补充\"><a href=\"#八、语句补充\" class=\"headerlink\" title=\"八、语句补充\"></a>八、语句补充</h3><h4 id=\"1、select-Top-语句\"><a href=\"#1、select-Top-语句\" class=\"headerlink\" title=\"1、select   Top  语句\"></a>1、select   Top  语句</h4><p>TOP 子句用于规定要返回的  <strong>记录的数目</strong>。（从头开始多少条）</p>\n<p>select  Top  条数  *  from  表；</p>\n<h4 id=\"2、create-view-语句\"><a href=\"#2、create-view-语句\" class=\"headerlink\" title=\"2、create   view   语句\"></a>2、create   view   语句</h4><p>在 SQL 中，视图是基于 SQL 语句的结果集的可视化的表,视图像一个真实的表。视图中的字段就是来自一个或多个数据库中的真实的表中的字段。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">create   view  视图名  as  select   列名  from  表名  （where  条件）&#x2F;可有可无&#x2F;</code></pre>\n\n<p>— 范例</p>\n<pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">mysql&gt; create view show_class as select class from Student;\nQuery OK, 0 rows affected (0.08 sec)\n\nmysql&gt; select * from show_class;\n+-------+\n| class |\n+-------+\n| 901   |\n| 902   |\n| 903   |\n| 904   |\n| 906   |</code></pre>\n\n<h4 id=\"4、is-null-is-not-null-语句\"><a href=\"#4、is-null-is-not-null-语句\" class=\"headerlink\" title=\"4、is  null   /   is  not   null   语句\"></a>4、is  null   /   is  not   null   语句</h4><p>查询  某列中  <strong>带有空值</strong> / <strong>不带有空值</strong>  的记录 </p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select   *    from  表   where  列  is null   &#x2F;   is not  nulll；</code></pre>","text":"一、数据库的操作1、创建数据库普通创建 create database db_sql； 带字符集创建 create database db_sql character set utf8； 2、查询数据库查看数据库字符编码 show variables like &#39;%cha...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"MySql","slug":"MySql","count":3,"path":"api/categories/MySql.json"}],"tags":[{"name":"MySql","slug":"MySql","count":3,"path":"api/tags/MySql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">一、数据库的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">1、创建数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2、查询数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">3、删除数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4、使用数据库</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E8%A1%A8%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">二、表的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%96%B0%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\">1、新建表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%9F%A5%E7%9C%8B%E8%A1%A8\"><span class=\"toc-text\">2、查看表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%88%A0%E9%99%A4%E8%A1%A8\"><span class=\"toc-text\">3、删除表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">4、修改表结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A2%9E%E5%8A%A0%E4%B8%80%E5%88%97\"><span class=\"toc-text\">1、增加一列</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%BF%AE%E6%94%B9%E4%B8%80%E5%88%97\"><span class=\"toc-text\">2、修改一列</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%88%A0%E9%99%A4%E5%88%97\"><span class=\"toc-text\">3、删除列</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81%E4%BF%AE%E6%94%B9%E8%A1%A8%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">4、修改表名称</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81%E4%BF%AE%E6%94%B9%E5%AD%97%E6%AE%B5%E9%BB%98%E8%AE%A4%E5%80%BC\"><span class=\"toc-text\">5、修改字段默认值</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6%E3%80%81%E4%BF%AE%E8%A1%A8%E5%AD%97%E7%AC%A6%E9%9B%86\"><span class=\"toc-text\">6、修表字符集</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">三、数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1、数值类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">2、日期时间类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">3、字符串类型</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E7%BC%A9%E5%86%99%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">四、缩写定义</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81DBS\"><span class=\"toc-text\">1、DBS</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81DBMS\"><span class=\"toc-text\">2、DBMS</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81RDBMS\"><span class=\"toc-text\">3、RDBMS</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81SQL%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">4、SQL分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81DML\"><span class=\"toc-text\">1、DML</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81DDL\"><span class=\"toc-text\">2、DDL</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81DQL\"><span class=\"toc-text\">3、DQL</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81DCL\"><span class=\"toc-text\">4、DCL</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">五、表中数据的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1、插入数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2、修改数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">3、删除数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4、简单查询数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%8D%95%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5、单行函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%88%86%E7%BB%84-%E8%81%9A%E5%90%88-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6、分组(聚合)函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7%E3%80%81group-by\"><span class=\"toc-text\">7、group by</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8%E3%80%81having\"><span class=\"toc-text\">8、having</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9%E3%80%81order-by\"><span class=\"toc-text\">9、order by</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10%E3%80%81limit\"><span class=\"toc-text\">10、limit</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#11%E3%80%81%E4%B8%83%E5%A4%A7%E5%AD%90%E5%8F%A5%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">11、七大子句顺序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#12%E3%80%81%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E8%A1%A5%E5%85%85%EF%BC%88%E4%B9%9F%E9%87%8D%E8%A6%81%EF%BC%89\"><span class=\"toc-text\">12、查询语句补充（也重要）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">六、关联查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF%E7%8E%B0%E8%B1%A1%EF%BC%9A\"><span class=\"toc-text\">1、笛卡尔积现象：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81union-%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">2、union  操作符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%86%85%E8%BF%9E%E6%8E%A5%EF%BC%9A%E5%AE%9E%E7%8E%B0A%E2%88%A9B\"><span class=\"toc-text\">3、内连接：实现A∩B</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">4、左外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">5、右外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81%E5%85%A8%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6、全连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7%E3%80%81%E7%94%A8union%E4%BB%A3%E6%9B%BF%E5%85%A8%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">7、用union代替全外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">8、子查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-where%E5%9E%8B\"><span class=\"toc-text\">1. where型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-from%E5%9E%8B\"><span class=\"toc-text\">2. from型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-exists%E5%9E%8B\"><span class=\"toc-text\">3. exists型</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E5%A4%8D%E5%88%B6%E8%A1%A8\"><span class=\"toc-text\">七、复制表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81select-into%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">1、select   into语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81select-into-select%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">2、select  into  select语句</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E8%AF%AD%E5%8F%A5%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">八、语句补充</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81select-Top-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">1、select   Top  语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81create-view-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">2、create   view   语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81is-null-is-not-null-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">4、is  null   &#x2F;   is  not   null   语句</span></a></li></ol></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Mysql 约束范式","uid":"0aff3f9d6ddb049036e17692cfc8cc4a","slug":"20-MySql约束范式","date":"2021-09-13T14:55:32.000Z","updated":"2021-09-15T10:19:07.031Z","comments":true,"path":"api/articles/20-MySql约束范式.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"一、约束（Constraint）1、主要内容1. 非空约束 2. 自增约束 3. 主键约束 4. 唯一键约束 5. 默认值约束 6. 外键约束 7. 检查约束 2.、查看某个表的约束SELECT * FROM information_schema.table_constraint...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"MySql","slug":"MySql","count":3,"path":"api/categories/MySql.json"}],"tags":[{"name":"MySql","slug":"MySql","count":3,"path":"api/tags/MySql.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"反射","uid":"89dcc30b71db0004bd54ff025b96bee1","slug":"18-反射","date":"2021-09-13T14:53:32.000Z","updated":"2021-09-15T10:17:53.511Z","comments":true,"path":"api/articles/18-反射.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"一、类加载– 概述：类在内存中的生命周期：加载–&gt;使用–&gt;卸载 1、类的加载过程当程序主动使用某个类时，如果该类还未被加载到内存中，系统会通过加载、连接、初始化三个步骤来对该类进行初始化，如果没有意外，JVM将会连续完成这三个步骤，所以有时也把这三个步骤统称为类加载。...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/tags/JavaSE.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}