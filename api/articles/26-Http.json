{"title":"Http 基础知识","uid":"36fd07d1ed0a51bb3b4e77f831ab30e9","slug":"26-Http","date":"2021-09-13T15:04:32.000Z","updated":"2021-09-15T10:23:37.009Z","comments":true,"path":"api/articles/26-Http.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","content":"<h3 id=\"1-WEB回顾\"><a href=\"#1-WEB回顾\" class=\"headerlink\" title=\"1. WEB回顾\"></a>1. WEB回顾</h3><h4 id=\"1-1-Web开发中的常见概念\"><a href=\"#1-1-Web开发中的常见概念\" class=\"headerlink\" title=\"1.1 Web开发中的常见概念\"></a>1.1 Web开发中的常见概念</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">B&#x2F;S 系统和C&#x2F;S 系统\n\n\tBrower&#x2F;Server：浏览器 服务器 系统 ----- 网站\n    更新维护成本低，所有计算都在服务端，导致服务器计算压力较大，网络负荷较重\n\n\tClient&#x2F;Server：客户端 服务器 系统 ----- QQ、飞秋、大型游戏  \n    减轻服务器负担，大量计算充分利用客户端计算机资源，更新维护成本高</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">* web应用服务器 —— 供向外部发布web资源的服务器软件\n\n* web资源 —— 存在于web应用服务器可供外界访问的资源就是web资源\n\n  例如：存在于web应用服务器内部的Html、Css、js、图片、视频等</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">* 资源分类：\n\n  静态资源：指web页面中供人们浏览的数据始终是不变。比如：HTML、CSS、\tJS、图片、多媒体。\n\n  动态资源：指web页面中供人们浏览的数据是由程序产生的，不同时间点访问\tweb页面看到的内容各不相同。比如：JSP&#x2F;Servlet、ASP、PHP\n\n  javaWEB领域：动态资源认为通过java代码去动态生成html</code></pre>\n\n<h4 id=\"1-2-网络通信三要素\"><a href=\"#1-2-网络通信三要素\" class=\"headerlink\" title=\"1.2 网络通信三要素\"></a>1.2 网络通信三要素</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* IP地址\n\n  * 网络中设备的标识，也可以用主机名识别，但ip地址唯一，主机名不唯一；\n\n* 端口号\n\n  * 用于标识进程的逻辑地址，是不同进程的标识；\n\n* 传输协议\n\n  * 也即通信的规则，常见的协议由 UDP 协议 和 TCP协议；\n  * TCP协议：安全协议，三次握手，速度稍慢\n  * UDP协议：不安全协议，速度快</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1.png\" alt=\"网络通信\"></p>\n<h4 id=\"1-3-常用的web应用服务器\"><a href=\"#1-3-常用的web应用服务器\" class=\"headerlink\" title=\"1.3 常用的web应用服务器\"></a>1.3 常用的web应用服务器</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* weblogic：oracle公司的大型收费web服务器 支持全部javaEE规范\n\n* websphere：IBM公司的大型收费web服务器 支持全部的javaEE规范\n\n* Tomcat：Apache开源组织下的 开源免费的中小型的web应用服务器 支持 javaEE 中的 servlet 和 jsp规范</code></pre>\n\n<h3 id=\"2-Tomcat介绍\"><a href=\"#2-Tomcat介绍\" class=\"headerlink\" title=\"2. Tomcat介绍\"></a>2. Tomcat介绍</h3><h4 id=\"2-1-文件目录剖析\"><a href=\"#2-1-文件目录剖析\" class=\"headerlink\" title=\"2.1 文件目录剖析\"></a>2.1 文件目录剖析</h4><p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/tomcat%E7%9B%AE%E5%BD%95%E5%88%86%E6%9E%90.png\" alt=\"image-20210625153645445\"></p>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">* bin: 脚本目录\n       启动脚本：startup.bat\n       停止脚本：shutdown.bat\n\t\t\t\n* conf: 配置文件目录 (config &#x2F;configuration)\n\t\t核心配置文件：server.xml\n\t\t用户权限配置文件：tomcat-users.xml\n\t\t所有web项目默认配置文件：web.xml\n\t\t\t\n* lib:  依赖库，tomcat和web项目中需要使用的jar包\n\n* logs: 日志文件.\n\t\tlocalhost_access_log.*.txt tomcat记录用户访问信息，星*表示时间。\n\t\t例如：localhost_access_log.2016-02-28.txt\n\t\n* temp: 临时文件目录，文件夹内内容可以任意删除。\n\n* webapps: 默认情况下发布WEB项目所存放的目录。\n\n* work: tomcat处理JSP的工作目录。</code></pre>\n\n<h4 id=\"2-2-启动失败原因分析\"><a href=\"#2-2-启动失败原因分析\" class=\"headerlink\" title=\"2.2 启动失败原因分析\"></a>2.2 启动失败原因分析</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 如果没有配置JAVA_HOME环境变量，在双击“startup.bat”文件运行tomcat\t\t时，将一闪立即关闭。且必须配\n\n  置正确，及JAVA_HOME指向JDK的安装目录\n\n* 端口冲突：java.net.BindException: Address already in use: JVM_Bind &lt;null&gt;:8080\n\n  修改Tomcat&#x2F;conf&#x2F;server.xml</code></pre>\n\n<img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/tomcat%E7%AB%AF%E5%8F%A3%E4%BF%AE%E6%94%B9.png\" alt=\"tomcat端口修改\" style=\"float:left\"/>\n\n<h4 id=\"2-3-WEB目录\"><a href=\"#2-3-WEB目录\" class=\"headerlink\" title=\"2.3 WEB目录\"></a>2.3 WEB目录</h4><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/web%E7%9B%AE%E5%BD%95.png\" /> \n\n<p><strong><span style=\"color:red;\">注意：WEB-INF目录是受保护的，外界不能直接访问</span></strong></p>\n<h3 id=\"3-Http协议\"><a href=\"#3-Http协议\" class=\"headerlink\" title=\"3. Http协议\"></a>3. Http协议</h3><h4 id=\"3-1-什么是http协议\"><a href=\"#3-1-什么是http协议\" class=\"headerlink\" title=\"3.1 什么是http协议\"></a>3.1 什么是http协议</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 协议是指双方，或多方，相互约定好，大家都需要遵守的规则，叫协议。 \n* 而HTTP 协议是指，客户端和服务器之间通信时，发送的数据，需要遵守的规则。 HTTP 协议中的数据又叫 **报文**。\n* 且HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。目前www主流的是HTTP&#x2F;1.0</code></pre>\n\n<h4 id=\"3-2-http协议主要特点\"><a href=\"#3-2-http协议主要特点\" class=\"headerlink\" title=\"3.2 http协议主要特点\"></a>3.2 http协议主要特点</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 支持客户&#x2F;服务器模式。\n\n* 简单快速：客户向服务器请求服务时，只需传送请求方法和路径，由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。\n\n* 灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。\n\n* 无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。\n\n* 无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</code></pre>\n\n<h3 id=\"4-请求的HTTP协议详解\"><a href=\"#4-请求的HTTP协议详解\" class=\"headerlink\" title=\"4. 请求的HTTP协议详解\"></a>4. 请求的HTTP协议详解</h3><h4 id=\"4-1-Get请求\"><a href=\"#4-1-Get请求\" class=\"headerlink\" title=\"4.1 Get请求\"></a>4.1 Get请求</h4><h5 id=\"4-1-1-请求行\"><a href=\"#4-1-1-请求行\" class=\"headerlink\" title=\"4.1.1 请求行\"></a>4.1.1 请求行</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 请求的方式 GET\n* 请求的资源路径[+?+请求参数] \n* 请求的协议的版本号 HTTP&#x2F;1.1 </code></pre>\n\n<h5 id=\"4-1-2-请求头\"><a href=\"#4-1-2-请求头\" class=\"headerlink\" title=\"4.1.2 请求头\"></a>4.1.2 请求头</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">key : value 组成 不同的键值对，表示不同的含义。</code></pre>\n\n<h5 id=\"4-1-3-请求体\"><a href=\"#4-1-3-请求体\" class=\"headerlink\" title=\"4.1.3 请求体\"></a>4.1.3 请求体</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">就是发送给服务器的数据</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/get%E8%AF%B7%E6%B1%82%E5%86%85%E5%AE%B9.jpg\" alt=\"01-get请求内容\"></p>\n<h4 id=\"4-2-Post请求\"><a href=\"#4-2-Post请求\" class=\"headerlink\" title=\"4.2 Post请求\"></a>4.2 Post请求</h4><h5 id=\"4-2-1-请求行\"><a href=\"#4-2-1-请求行\" class=\"headerlink\" title=\"4.2.1 请求行\"></a>4.2.1 请求行</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 请求的方式 POST\n* 请求的资源路径[+?+请求参数] \n* 请求的协议的版本号 HTTP&#x2F;1.1 </code></pre>\n\n<h5 id=\"4-2-2-请求头\"><a href=\"#4-2-2-请求头\" class=\"headerlink\" title=\"4.2.2 请求头\"></a>4.2.2 请求头</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">key : value 组成 不同的键值对，表示不同的含义。</code></pre>\n\n<p><span Style=\"color:red;font-size:20px;\">空行</span></p>\n<h5 id=\"4-2-3-请求体\"><a href=\"#4-2-3-请求体\" class=\"headerlink\" title=\"4.2.3 请求体\"></a>4.2.3 请求体</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">就是发送给服务器的数据\n\n请求内容</code></pre>\n\n<h4 id=\"4-3-常用请求头\"><a href=\"#4-3-常用请求头\" class=\"headerlink\" title=\"4.3 常用请求头\"></a>4.3 常用请求头</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* Accept: 表示客户端可以接收的数据类型 \n* Accpet-Languege: 表示客户端可以接收的语言类型 \n* User-Agent: 表示客户端浏览器的信息 \n* Host： 表示请求时的服务器 ip 和端口号</code></pre>\n\n<h4 id=\"4-4-get-与-post请求有哪些\"><a href=\"#4-4-get-与-post请求有哪些\" class=\"headerlink\" title=\"4.4 get 与 post请求有哪些\"></a>4.4 get 与 post请求有哪些</h4><table>\n<thead>\n<tr>\n<th align=\"center\">GET 请求有：</th>\n<th align=\"center\">POST 请求有：</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">form 标签 method=get</td>\n<td align=\"center\">form 标签 method=post</td>\n</tr>\n<tr>\n<td align=\"center\">在浏览器地址栏中输入地址后敲回车</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">iframe 引入 html 页面</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">a 标签</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">link 标签引入 css</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Script 标签引入 js 文件</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">img 标签引入图片</td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h3 id=\"5-响应的HTTP协议详解\"><a href=\"#5-响应的HTTP协议详解\" class=\"headerlink\" title=\"5. 响应的HTTP协议详解\"></a>5. 响应的HTTP协议详解</h3><h4 id=\"5-1-响应\"><a href=\"#5-1-响应\" class=\"headerlink\" title=\"5.1 响应\"></a>5.1 响应</h4><h5 id=\"5-1-1-响应行\"><a href=\"#5-1-1-响应行\" class=\"headerlink\" title=\"5.1.1 响应行\"></a>5.1.1 响应行</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">* 响应的协议和版本号 \n* 响应状态码\n* 响应状态描述符</code></pre>\n\n<h5 id=\"5-1-2-响应头\"><a href=\"#5-1-2-响应头\" class=\"headerlink\" title=\"5.1.2 响应头\"></a>5.1.2 响应头</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">key : value 不同的响应头，有其不同含义</code></pre>\n\n<p><span Style=\"color:red;font-size:20px;\">空行</span></p>\n<h5 id=\"5-1-3-响应体\"><a href=\"#5-1-3-响应体\" class=\"headerlink\" title=\"5.1.3 响应体\"></a>5.1.3 响应体</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">就是回传给客户端的数据</code></pre>\n\n<p><img src=\"https://gitee.com/hrenxiang/picture/raw/master/img/%E5%93%8D%E5%BA%94.png\" alt=\"03-响应\"></p>\n<h4 id=\"5-2-常用响应码说明\"><a href=\"#5-2-常用响应码说明\" class=\"headerlink\" title=\"5.2 常用响应码说明\"></a>5.2 常用响应码说明</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 在接收和解释请求消息后，服务器返回一个HTTP响应消息。\n2. HTTP响应也是由三个部分组成，分别是：&lt;span Style&#x3D;&quot;color:red;&quot;&gt;状态行、消息报头、响应正文&lt;&#x2F;span&gt;\n\n* 状态行格式如下：\n  HTTP-Version Status-Code Reason-Phrase CRLF\n  其中，HTTP-Version表示服务器HTTP协议的版本；Status-Code表示服务器发回的响应状态代码；Reason-Phrase表示状态代码的文本描述。</code></pre>\n\n\n\n<p>a）状态代码有三位数字组成，第一个数字定义了响应的类别，且有五种可能取值：</p>\n<div Style=\"color:red;\">\n    <p>1xx：指示信息--表示请求已接收，继续处理</p>\n    <p>2xx：成功--表示请求已被成功接收、理解、接受</p>\n    <p>3xx：重定向--要完成请求必须进行更进一步的操作</p>\n    <p>4xx：客户端错误--请求有语法错误或请求无法实现</p>\n    <p>5xx：服务器端错误--服务器未能实现合法的请求</p>\n</div>\n\n\n\n<p>b）常见状态代码、状态描述、说明：</p>\n<p>200 OK                                  表示客户端请求成功</p>\n<p>302                                        表示请求重定向</p>\n<p>404 Not Found                      表示请求资源不存在，eg：输入了错误的URL</p>\n<p>500 Internal Server Error      表示服务器已经收到请求，但是服务器发生不可预期的错误</p>\n<p>400                                       客户端请求有语法错误，不能被服务器所理解</p>\n<p>401 Unauthorized                 请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用</p>\n<p>403 Forbidden                      服务器收到请求，但是拒绝提供服务</p>\n<p>503 Server Unavailable  //服务器当前不能处理客户端的请求，一段时间后可能恢复正常</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">* 响应报头后述\n\n* 响应正文就是服务器返回的资源的内容 </code></pre>\n\n\n\n<h4 id=\"5-3-MIME类型说明\"><a href=\"#5-3-MIME类型说明\" class=\"headerlink\" title=\"5.3 MIME类型说明\"></a>5.3 MIME类型说明</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">* MIME 是 HTTP 协议中数据类型。 MIME 的英文全称是&quot;Multipurpose Internet Mail Extensions&quot; 多功能 Internet 邮件扩充服务。\n\n* MIME 类型的格式是“大类型&#x2F;小 类型”，并与某一种文件的扩展名相对应。</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">文件</th>\n<th align=\"center\">MIME 类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">超文本标记语言文本</td>\n<td align=\"center\">.html , .htm                          text/html</td>\n</tr>\n<tr>\n<td align=\"center\">普通文本</td>\n<td align=\"center\">.txt                                  text/plain</td>\n</tr>\n<tr>\n<td align=\"center\">RTF 文本</td>\n<td align=\"center\">rtf                                  application/rtf</td>\n</tr>\n<tr>\n<td align=\"center\">GIF 图形</td>\n<td align=\"center\">gif                                  image/gif</td>\n</tr>\n<tr>\n<td align=\"center\">JPEG 图形</td>\n<td align=\"center\">.jpeg,.jpg                             image/jpeg au</td>\n</tr>\n<tr>\n<td align=\"center\">声音文件</td>\n<td align=\"center\">.au                            audio/basic</td>\n</tr>\n<tr>\n<td align=\"center\">MIDI 音乐文件</td>\n<td align=\"center\">mid,.midi                            audio/midi,audio/x-midi RealAudio</td>\n</tr>\n<tr>\n<td align=\"center\">音乐文件</td>\n<td align=\"center\">.ra, .ram                             audio/x-pn-realaudio</td>\n</tr>\n<tr>\n<td align=\"center\">MPEG 文件</td>\n<td align=\"center\">mpg,.mpeg                               video/mpeg</td>\n</tr>\n<tr>\n<td align=\"center\">AVI 文件</td>\n<td align=\"center\">.avi                                 video/x-msvideo</td>\n</tr>\n<tr>\n<td align=\"center\">GZIP 文件</td>\n<td align=\"center\">.gz                               application/x-gzip</td>\n</tr>\n<tr>\n<td align=\"center\">TAR 文件</td>\n<td align=\"center\">.tar                                 application/x-tar</td>\n</tr>\n</tbody></table>\n<h3 id=\"6-谷歌查看-HTTP-协议\"><a href=\"#6-谷歌查看-HTTP-协议\" class=\"headerlink\" title=\"6. 谷歌查看 HTTP 协议\"></a>6. 谷歌查看 HTTP 协议</h3><p><img src=\"F:\\Picture\\博客图片\\04-Chrome查看http协议.png\" alt=\"04-Chrome查看http协议\"></p>\n","text":"1. WEB回顾1.1 Web开发中的常见概念B&#x2F;S 系统和C&#x2F;S 系统 Brower&#x2F;Server：浏览器 服务器 系统 ----- 网站 更新维护成本低，所有计算都在服务端，导致服务器计算压力较大，网络负荷较重 Client&#x2F;Serve...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-WEB%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">1. WEB回顾</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-Web%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1.1 Web开发中的常见概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E4%B8%89%E8%A6%81%E7%B4%A0\"><span class=\"toc-text\">1.2 网络通信三要素</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-%E5%B8%B8%E7%94%A8%E7%9A%84web%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">1.3 常用的web应用服务器</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Tomcat%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">2. Tomcat介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%89%96%E6%9E%90\"><span class=\"toc-text\">2.1 文件目录剖析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90\"><span class=\"toc-text\">2.2 启动失败原因分析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-WEB%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">2.3 WEB目录</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Http%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">3. Http协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E4%BB%80%E4%B9%88%E6%98%AFhttp%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">3.1 什么是http协议</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-http%E5%8D%8F%E8%AE%AE%E4%B8%BB%E8%A6%81%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">3.2 http协议主要特点</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E8%AF%B7%E6%B1%82%E7%9A%84HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">4. 请求的HTTP协议详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-Get%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">4.1 Get请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-1-1-%E8%AF%B7%E6%B1%82%E8%A1%8C\"><span class=\"toc-text\">4.1.1 请求行</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-1-2-%E8%AF%B7%E6%B1%82%E5%A4%B4\"><span class=\"toc-text\">4.1.2 请求头</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-1-3-%E8%AF%B7%E6%B1%82%E4%BD%93\"><span class=\"toc-text\">4.1.3 请求体</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-Post%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">4.2 Post请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-1-%E8%AF%B7%E6%B1%82%E8%A1%8C\"><span class=\"toc-text\">4.2.1 请求行</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-2-%E8%AF%B7%E6%B1%82%E5%A4%B4\"><span class=\"toc-text\">4.2.2 请求头</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-3-%E8%AF%B7%E6%B1%82%E4%BD%93\"><span class=\"toc-text\">4.2.3 请求体</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-%E5%B8%B8%E7%94%A8%E8%AF%B7%E6%B1%82%E5%A4%B4\"><span class=\"toc-text\">4.3 常用请求头</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-4-get-%E4%B8%8E-post%E8%AF%B7%E6%B1%82%E6%9C%89%E5%93%AA%E4%BA%9B\"><span class=\"toc-text\">4.4 get 与 post请求有哪些</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%93%8D%E5%BA%94%E7%9A%84HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">5. 响应的HTTP协议详解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-%E5%93%8D%E5%BA%94\"><span class=\"toc-text\">5.1 响应</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-1-1-%E5%93%8D%E5%BA%94%E8%A1%8C\"><span class=\"toc-text\">5.1.1 响应行</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-1-2-%E5%93%8D%E5%BA%94%E5%A4%B4\"><span class=\"toc-text\">5.1.2 响应头</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-1-3-%E5%93%8D%E5%BA%94%E4%BD%93\"><span class=\"toc-text\">5.1.3 响应体</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-%E5%B8%B8%E7%94%A8%E5%93%8D%E5%BA%94%E7%A0%81%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">5.2 常用响应码说明</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-3-MIME%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">5.3 MIME类型说明</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E8%B0%B7%E6%AD%8C%E6%9F%A5%E7%9C%8B-HTTP-%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">6. 谷歌查看 HTTP 协议</span></a></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"Jsp的 EL JSTL","uid":"93d9161737573474af9da23361a39a29","slug":"28-El Jstl","date":"2021-09-13T15:05:32.000Z","updated":"2021-09-15T10:24:41.769Z","comments":true,"path":"api/articles/28-El Jstl.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"1. EL表达式1.1 什么是EL* EL 表达式的全称是：&lt;kbd&gt;Expression Language&lt;&#x2F;kbd&gt;。是&lt;kbd&gt;表达式语言&lt;&#x2F;kbd&gt;，是JSP技术的主要特点之一，类似 javascript...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"Jsp 知识总结","uid":"945a3d93a729714c86dd0543b3f0dd1a","slug":"27-Jsp","date":"2021-09-13T15:04:32.000Z","updated":"2021-09-15T10:24:07.557Z","comments":true,"path":"api/articles/27-Jsp.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog12.jpg","text":"1. 基础1.1 什么是Jspjsp 的全称是 java server pages。Java 的服务器页面。 jsp 的主要作用是代替 Servlet 程序回传 html 页面的数据。 因为 Servlet 程序回传 html 页面数据是一件非常繁锁的事情。开发成本和维护成本都极...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}