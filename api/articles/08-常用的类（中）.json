{"title":"常用的类（中）","uid":"c660642989e58d8f24bf7e09ddf846f0","slug":"08-常用的类（中）","date":"2021-09-13T14:42:32.000Z","updated":"2021-09-14T15:54:22.816Z","comments":true,"path":"api/articles/08-常用的类（中）.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog8.jpg","content":"<h3 id=\"一、Math类\"><a href=\"#一、Math类\" class=\"headerlink\" title=\"一、Math类\"></a>一、Math类</h3><h4 id=\"1、特点\"><a href=\"#1、特点\" class=\"headerlink\" title=\"1、特点\"></a>1、特点</h4><p>提供了操作数学元素的方法，都是静态的</p>\n<h4 id=\"2、常用方法\"><a href=\"#2、常用方法\" class=\"headerlink\" title=\"2、常用方法\"></a>2、常用方法</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">int abs(int a)：返回整数的绝对值\n\nint max(int a, int b)：返回两个整数的最大值 \n\ndouble random()：返回一个伪随机值(0--1 之间) \n\ndouble sqrt(double a)：返回一个数的平方根 \n\ndouble ceil()：返回大于参数的最小整数\n\ndouble floor()：返回小于参数的最大整数 \n\ndouble round()：返回四舍五入的值。 \n\ndouble pow(a,b)：a 的 b 次方</code></pre>\n\n<h3 id=\"二、Scanner类\"><a href=\"#二、Scanner类\" class=\"headerlink\" title=\"二、Scanner类\"></a>二、Scanner类</h3><h4 id=\"1、概念\"><a href=\"#1、概念\" class=\"headerlink\" title=\"1、概念\"></a>1、概念</h4><p>接收键盘输入数据的类</p>\n<h4 id=\"2、常用API\"><a href=\"#2、常用API\" class=\"headerlink\" title=\"2、常用API\"></a>2、常用API</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">delimiter()：返回此 Scanner 当前正在用于匹配分隔符的 Pattern\n\nhasNext()：判断扫描器中当前扫描位置后是否还存在下一段。（原APIDoc的注释很扯淡）\n\nhasNextLine()：如果在此扫描器的输入中存在另一行，则返回 true\n\nnext()：查找并返回来自此扫描器的下一个完整标记\n\nnextLine()：此扫描器执行当前行，并返回跳过的输入信息</code></pre>\n\n<h4 id=\"3、next-与-nextLine-区别\"><a href=\"#3、next-与-nextLine-区别\" class=\"headerlink\" title=\"3、next() 与 nextLine() 区别\"></a>3、next() 与 nextLine() 区别</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">next():\n    1、一定要读取到有效字符后才可以结束输入。\n    2、对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。\n    3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。    \n    \n注意：next() 不能得到带有空格的字符串。\n\nnextLine()：\n    1、以Enter为结束符,也就是说 nextLine()方法返回的是输入回车之前的所有字符。\n    2、可以获得空白。</code></pre>\n\n<h3 id=\"三、System类\"><a href=\"#三、System类\" class=\"headerlink\" title=\"三、System类\"></a>三、System类</h3><h4 id=\"1、特点-1\"><a href=\"#1、特点-1\" class=\"headerlink\" title=\"1、特点\"></a>1、特点</h4><p>不能实例化对象，提供的方法都是静态的。</p>\n<h4 id=\"2、获取本地系统信息\"><a href=\"#2、获取本地系统信息\" class=\"headerlink\" title=\"2、获取本地系统信息\"></a>2、获取本地系统信息</h4><p>系统属性信息：程序在运行时获取到Jvm以及所在操作系统的一些固有信息，获取了这些信息，能为后面的程序运行提供数据</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public static void main(String[] args) &#123;\n\n    Properties pros &#x3D; System.getProperties();\n    \n    Set&lt;String&gt; names &#x3D; pros.stringPropertyNames();\n    \n    for (String name : names) &#123;\n        System.out.println(name+&quot;:&quot;+pros.getProperty(name));\n    &#125;\n\n&#125;\n\n结果：java.runtime.name:Java(TM) SE Runtime Environment\n     sun.boot.library.path:D:\\Myeclipse\\jdk1.8\\jre\\bin\n     java.vm.version:25.241-b07\n     java.vm.vendor:Oracle Corporation\n     ...\n         \n获取系统换行符：String s &#x3D; System.getProperty(&quot;line.separator&quot;);\n              System.out.println(&quot;hh&quot;+s+&quot;kk&quot;);</code></pre>\n\n<h4 id=\"3、常用方法\"><a href=\"#3、常用方法\" class=\"headerlink\" title=\"3、常用方法\"></a>3、常用方法</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">* static long currentTimeMillis()：获取当前时间，以毫秒为单位。 \n\n* static void exit(int status) ：退出当前程序。 \n\n* static void gc()：调用垃圾回收器。 \n\n* static Properties getProperties()：获取当前系统属性 \n\n* static String getProperty(String key)：根据关键字获取系统属性名称 \n\n* static String setProperty(String key, String value)：设置属性的键和值。</code></pre>\n\n<h3 id=\"四、Properties类\"><a href=\"#四、Properties类\" class=\"headerlink\" title=\"四、Properties类\"></a>四、Properties类</h3><h4 id=\"1、特点：\"><a href=\"#1、特点：\" class=\"headerlink\" title=\"1、特点：\"></a>1、特点：</h4><p>properties集合类中储存的都是 string 类型的键和值，最好是用他自己的存储和取出方法来完成元素的操作</p>\n<p>主要用于读取 java中的配置文件</p>\n<h4 id=\"2、常用方法：\"><a href=\"#2、常用方法：\" class=\"headerlink\" title=\"2、常用方法：\"></a>2、常用方法：</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">Properties getProperty(String key):返回指定的属性 \n\nObject setProperty(String key,String value):设置属性的键和值 \n\nvoid load(InputStream inStream) :加载输入流 \n\nSet&lt;String&gt; stringPropertyNames() ：返回属性键的集合。</code></pre>\n\n<h3 id=\"五、Runtime类\"><a href=\"#五、Runtime类\" class=\"headerlink\" title=\"五、Runtime类\"></a>五、Runtime类</h3><h4 id=\"1、使用单例模式\"><a href=\"#1、使用单例模式\" class=\"headerlink\" title=\"1、使用单例模式\"></a>1、使用单例模式</h4><p>没有构造方法摘要，说明该类不可以创建对象，又发现还有非静态的方法，说明该类应该提供静态的返回该类对象的方法，</p>\n<p>而且只有一个，说明 runtime 类使用了单例设计模式。</p>\n<h4 id=\"2、打开记事本\"><a href=\"#2、打开记事本\" class=\"headerlink\" title=\"2、打开记事本\"></a>2、打开记事本</h4><p>exec 方法返回的是一个进程，可以通过该方法启动一个程序</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">public static void main(String[] args) &#123;\n\tRuntime runtime &#x3D; Runtime.getRuntime();\n\n\ttry &#123;\n   \t\truntime.exec(&quot;notepad.exe&quot;);\n\t&#125; catch (IOException e) &#123;\n    \te.printStackTrace();\n\t&#125;\n&#125;</code></pre>\n\n","text":"一、Math类1、特点提供了操作数学元素的方法，都是静态的 2、常用方法int abs(int a)：返回整数的绝对值 int max(int a, int b)：返回两个整数的最大值 double random()：返回一个伪随机值(0--1 之间) double sqrt(d...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/tags/JavaSE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Math%E7%B1%BB\"><span class=\"toc-text\">一、Math类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1、特点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2、常用方法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Scanner%E7%B1%BB\"><span class=\"toc-text\">二、Scanner类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1、概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%B8%B8%E7%94%A8API\"><span class=\"toc-text\">2、常用API</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81next-%E4%B8%8E-nextLine-%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">3、next() 与 nextLine() 区别</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81System%E7%B1%BB\"><span class=\"toc-text\">三、System类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%89%B9%E7%82%B9-1\"><span class=\"toc-text\">1、特点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">2、获取本地系统信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3、常用方法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Properties%E7%B1%BB\"><span class=\"toc-text\">四、Properties类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%89%B9%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">1、特点：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">2、常用方法：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81Runtime%E7%B1%BB\"><span class=\"toc-text\">五、Runtime类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%BD%BF%E7%94%A8%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">1、使用单例模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%89%93%E5%BC%80%E8%AE%B0%E4%BA%8B%E6%9C%AC\"><span class=\"toc-text\">2、打开记事本</span></a></li></ol></li></ol>","author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}},"mapped":true,"prev_post":{"title":"常用的类（下）","uid":"2d669717a3bf1c4b448259cbc4c2654a","slug":"09-常用的类（下）","date":"2021-09-13T14:43:32.000Z","updated":"2021-09-14T16:11:01.000Z","comments":true,"path":"api/articles/09-常用的类（下）.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/img/sky7.jpg","text":"一、Arrays类1、概述Arrays类包含用于操作数组的各种方法，是操作属猪的工具类 2、常用方法toString():将数组变成字符串 int[] arr &#x3D; &#123;1, 2, 3&#125;; String x &#x3D; java.util.Arrays...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/tags/JavaSE.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}},"next_post":{"title":"常用的类（上）","uid":"01fd53219624f0d973c128a92b2b96c5","slug":"07-常用的类（上）","date":"2021-09-13T14:41:32.000Z","updated":"2021-09-14T15:54:12.626Z","comments":true,"path":"api/articles/07-常用的类（上）.json","cover":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-blog7.jpg","text":"一、单例设计模式1.1 概述单例模式，是一种常用的软件设计模式，在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中应用该模式的类一个类只有一个实例，即一个类只有一个对象实例。例如，windows操作系统里的回收站。 单例设计模式分为饿汉式（立即加载型）和懒汉...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/categories/JavaSE.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":18,"path":"api/tags/JavaSE.json"}],"author":{"name":"大黄","slug":"blog-author","avatar":"https://gitee.com/hrenxiang/picture/raw/master/uPic/2021:09:14-hh.JPG","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/hrenxiang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/15236325327","zhihu":"https://www.zhihu.com/people/hrenxiang","csdn":"https://blog.csdn.net/hrenxiang","juejin":"https://juejin.cn/user/985642616227406","customs":{}}}}}