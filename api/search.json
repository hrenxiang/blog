[{"id":"28f9cbb3f87fb083ac5744977081fb5c","title":"你好\thexo","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"你好 hexo !","date":"2021-09-14T14:00:13.453Z","categories_index":"","tags_index":"","author_index":"大黄"},{"id":"8eb5da915bb87dd80146b401007f8494","title":"iterm的使用","content":"一、安装zsh一定先执行zsh --version检查是否已安装zsh。\n返回类似zsh 5.7.1的内容说明可以跳过zsh直接安装iTerm2。\n1、macOSmacOS最新系统已经内置zsh，所以你很可能不需要执行这一步操作。\n安装Homebrew可以访问：https://brew.idayer.com/ ，教你如何飞速安装Homebrew。\nbrew install zsh\n\n设置为默认：\nchsh -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;zsh\n\n更多平台安装方法请浏览 Installing-ZSH 。\n二、安装iTerm21、下载iTerm2是macOS平台上终端的替代方案，功能也更强大，目前支持macOS 10.14及更高版本。\n你可以直接从官网下载iTerm2。\n2、把iTerm2设为默认iTerm2 -&gt; Make ITerm2 Default Term\n三、安装oh-my-zsh1、选择其中一种脚本安装curl（这种即可）：\nsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;tools&#x2F;install.sh)&quot;\n\nwget：\nexport REMOTE&#x3D;https:&#x2F;&#x2F;gitee.com&#x2F;imirror&#x2F;ohmyzsh.git\nsh -c &quot;$(wget -O- https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;tools&#x2F;install.sh)&quot;\n\nfetch：\nexport REMOTE&#x3D;https:&#x2F;&#x2F;gitee.com&#x2F;imirror&#x2F;ohmyzsh.git\nsh -c &quot;$(fetch -o - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;tools&#x2F;install.sh)&quot;\n\n四、配置主题官方收集了一些主题（不再收录新主题），你可以访问 主题&amp;&amp;截图 页面查看并选取。\n这里以Dracula为例说明。\n1、下载主题文件git clone https:&#x2F;&#x2F;github.com&#x2F;dracula&#x2F;zsh.git ~&#x2F;Downloads\n\n在下载中将压缩包解压\n移动主题文件 dracula.zsh-theme 到 ~/.oh-my-zsh/themes/ 下\n然后移动压缩包中 lib 文件夹中的文件到 ~/.oh-my-zsh/thems/lib （没有 lib 就创建）\n2、编辑~/.zshrc文件# 启用相关主题\nZSH_THEME&#x3D;&quot;dracula&quot;\n\n# 添加 bash中的环境变量到 ~&#x2F;.zshrc 中\nsource ~&#x2F;.bash_profile\n\n# 保存退出\nwq\n\n# 在外面重新加载 配置文件\nsource ~&#x2F;.zshrc\n\n# 主题介绍请访问 https:&#x2F;&#x2F;github.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;wiki&#x2F;Themes （dracula不在这里）\n\n3、安装字体大部分主题都用到了 Powerline Fonts  ，我们可以直接安装 Powerline Fonts 中的全部字体\n将字体安装包下载到一个文件夹内\ngit clone https:&#x2F;&#x2F;github.com&#x2F;powerline&#x2F;fonts.git  ~&#x2F;iterm2&#x2F;fonts\n\n进入文件夹\ncd ~&#x2F;iterm2&#x2F;fonts\n\n安装字体\n.&#x2F;install.sh\n\n安装完成后，字体文件可以保存，也可以删除\n4、选择字体然后打开iTerm -&gt; Preferences -&gt; Profiles -&gt; Text -&gt; Change Font，选择Meslo LG S Regular for Powerline （只要是 poweline 的任意一种就可以）。\n重新打开iTerm2就能看到效果。\n5、其他主题设置如果没有找到满意的主题，可以试下 更多主题 。\n你也可以试下random，不用纠结选择哪个主题：\nZSH_THEME&#x3D;&quot;random&quot;\n\n指定参与随机的主题：\nZSH_THEME_RANDOM_CANDIDATES&#x3D;(\n  &quot;robbyrussell&quot;\n  &quot;agnoster&quot;\n)\n\n也可以排除主题：\nZSH_THEME_RANDOM_IGNORED&#x3D;(pygmalion tjkirch_mod)\n\n\n\n五、功能增强1、zsh-autosuggestions命令自动补全功能。\n1、克隆代码到$ZSH_CUSTOM/plugins（默认位于~/.oh-my-zsh/custom/plugins）\ngit clone https:&#x2F;&#x2F;gitee.com&#x2F;imirror&#x2F;zsh-autosuggestions.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-autosuggestions\n\n最后执行source ~/.zshrc生效。\n2、在Oh My Zsh配置启用插件\n打开~/.zshrc，找到plugins，追加zsh-autosuggestions。\ngit为默认配置。\nplugins&#x3D;(git zsh-autosuggestions)\n\n如果有看不到自动补全的内容，确保以下两个颜色不是相近的：\niTerm &gt; Preferences &gt; Profiles &gt; Colors &gt; ANSI Colors &gt; Bright &gt; Black\niTerm &gt; Preferences &gt; Profiles &gt; Colors &gt; Basic Colors &gt; Background\n\n2、zsh-syntax-highlighting语法高亮。\n1、克隆代码到$ZSH_CUSTOM/plugins（默认位于~/.oh-my-zsh/custom/plugins）\ngit clone https:&#x2F;&#x2F;gitee.com&#x2F;imirror&#x2F;zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~&#x2F;.oh-my-zsh&#x2F;custom&#125;&#x2F;plugins&#x2F;zsh-syntax-highlighting\n\n2、在Oh My Zsh配置启用插件\n打开~/.zshrc，找到plugins，追加zsh-autosuggestions。\ngit为默认配置。\nplugins&#x3D;(git zsh-autosuggestions zsh-syntax-highlighting)\n\n最后执行source ~/.zshrc生效。\n六、番外篇1、iTerm2一键ssh连接远程服务器配置1、编写一个文件，内容如下，把对应的中文改成你的服务器相关内容就行，这里我将其编写为txt文本文件，放到用户目录下的 .zsh 文件夹下 (  ~/.zsh/aliyun.txt  )\n#!&#x2F;usr&#x2F;bin&#x2F;expect -f\n  set user 用户名\n  set host ip地址\n  set password 密码\n  set timeout -1\n  \n  spawn ssh $user@$host\n  expect &quot;*assword:*&quot;\n  send &quot;$password\\r&quot;\n  interact\n  expect eof\n\n2、打开iTerm2，打开设置(Preferences)，点击Profiles，点左下角+\n3、以后在终端界面直接点击即可连接到服务器\n\n2、一些功能和快捷键\n鼠标选中即复制\n\ncommand + d 垂直分屏\n\ncommand + shift + d 水平分屏\n\ncommand + shift + h 打开剪切板(复制历史)\n\ncommand + ; 命令自动完成\n\ncommand + shift + ; 查看历史命令\n\ncommand + option + b 按键回放(输入命令回放, 通过时间线)\n\ncommand+方向键: 切换tab。\n\ncommand+enter: 全屏模式。\n\ncommand+f: 搜索，支持正则表达式。\n\ncommand+[ 或 command +]: 在最近使用的分屏直接切换。\n\ncommand+t: 打开新标签。\n\ncommand+w: 关闭新标签。\n\ncommand+;: 自动补全历史命令。\n\ncommand+r: 清除屏幕，相当与clear.\n\ncommand+p/n: 上一条/下一条命令，相当于方向键上和下。\n\nctrl+r: 搜索命令历史。\n\n\n1、光标快速切换到行尾行首\n   ctrl+a 行首\n   ctrl+e 行尾\n2、删除至行尾\n   ctrl+k\n3、使用alias命令查看一些命令的简写","slug":"iterm的使用","date":"2021-09-13T14:32:32.000Z","categories_index":"Mac相关","tags_index":"Mac终端","author_index":"大黄"},{"id":"97e5d14896602922a9c354542d00c374","title":"HomeBrew 基本使用","content":"1、搜索包brew search mysql\n\n\n\n2、安装包brew install mysql\n\n\n\n3、查看包信息注意：比如查看目前的版本，依赖，安装后注意事项等\nbrew info mysql\n\n\n\n4、卸载包brew uninstall wget\n\n\n\n5、显示已安装的包brew list\n\n\n\n6、查看brew的帮助brew –help\n\n\n\n7、更新注意：这会更新 Homebrew 自己\nbrew update\n\n\n\n8、检查过时注意：（是否有新版本），这会列出所有安装的包里，哪些可以升级\nbrew outdated\nbrew outdated mysql\n\n\n\n9、升级所有可以升级的软件brew upgrade\nbrew upgrade mysql\n\n\n\n10、清理不需要的版本极其安装包缓存brew cleanup\nbrew cleanup mysql\n\n\n\n11、brew 查看源配置在目录中可以通过git remote get-url origin来查看当前的源的URL。\ngit -C &quot;$(brew --repo)&quot; remote get-url origin\ngit -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote get-url origin \ngit -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote get-url origin \n\n\n\n12、brew 修改国内源清华源\n# 替换brew.git\ncd &quot;$(brew --repo)&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;brew.git\n\n# 替换homebrew-core.git\ncd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;homebrew&#x2F;homebrew-core.git\n\n# 刷新源\nbrew update\n\n阿里云\n# 替换brew.git\ncd &quot;$(brew --repo)&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;brew.git\n\n# 替换homebrew-core.git\ncd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;homebrew&#x2F;homebrew-core.git\n\n# 刷新源\nbrew update\n\n腾讯源\n替换brew.git:\ncd &quot;$(brew --repo)&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.cloud.tencent.com&#x2F;homebrew&#x2F;brew.git\n\n替换homebrew-core.git:\ncd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;\ngit remote set-url origin https:&#x2F;&#x2F;mirrors.cloud.tencent.com&#x2F;homebrew&#x2F;homebrew-core.git\n\n# 刷新源\nbrew update\n\n默认值，可以通过以下三个命令设置为默认值，最后需要更新\ngit -C &quot;$(brew --repo)&quot; remote set-url origin &#39;https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew.git&#39;\n\ngit -C &quot;$(brew --repo homebrew&#x2F;core)&quot; remote set-url origin &#39;https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core.git&#39;\n\ngit -C &quot;$(brew --repo homebrew&#x2F;cask)&quot; remote set-url origin &#39;https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-cask.git&#39;\n\nbrew update\n\n\n\n13、安装 homebrew&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ineo6&#x2F;homebrew-install&#x2F;install)&quot;\n\n该脚本用了中科大镜像加速访问，仅修改仓库地址部分，不会产生安全隐患。 关于中科大所提供的 Homebrew 镜像服务 https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git\n注：注意这里的速度，几百kib/s或几m/s才是正常的。若只有几kib/s，通常为无效的安装方法，一般加载了百分之几十后就会报错。\n然后还需设置环境变量，具体操作步骤如下，一定要仔细阅读。\n\n在终端执行命令echo $SHELL获得终端类型：\n\n/bin/zsh =&gt; zsh =&gt; .zprofile\n/bin/bash =&gt; bash =&gt; .bash_profile\n\n\n如果看到的是/bin/zsh\necho &#39;eval &quot;$(&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;brew shellenv)&quot;&#39; &gt;&gt; ~&#x2F;.zprofile\neval &quot;$(&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;brew shellenv)&quot;\n\n如果看到的是/bin/bash\necho &#39;eval &quot;$(&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;brew shellenv)&quot;&#39; &gt;&gt; ~&#x2F;.bash_profile\neval &quot;$(&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;brew shellenv)&quot;\n\n\n\n\n\n\n\n\n\n\n从macOS Catalina(10.15.x) 版开始，Mac使用zsh作为默认Shell。\n14、homebrew 组成\n\n\n组成\n功能\n\n\n\nHomebrew\n源代码仓库\n\n\nhomebrew-core\nHomebrew 核心源\n\n\nhomebrew-cask\n提供macos应用和大型二进制文件的安装\n\n\nhomebrew-bottles\n预编译二进制软件包\n\n\n15、删除 homebrew&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ineo6&#x2F;homebrew-install&#x2F;uninstall)&quot;\n\n\n\n16、下载可视化界面官网：https://www.cakebrew.com/\ngithub：https://github.com/brunophilipe/Cakebrew/releases\n","slug":"HomeBrew基本使用","date":"2021-09-13T14:30:32.000Z","categories_index":"Mac相关","tags_index":"Mac终端","author_index":"大黄"}]